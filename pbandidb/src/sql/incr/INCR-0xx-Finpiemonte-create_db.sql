/*******************************************************************************
* Copyright Regione Piemonte - 2024
* SPDX-License-Identifier: EUPL-1.2
******************************************************************************/

/* ---------------------------------------------------------------------- */
/* Script generated with: DeZign for Databases v6.2.1                     */
/* Target DBMS:           Oracle 11g                                      */
/* Project file:          Area_Crediti_modello_fisico.dez                 */
/* Project name:                                                          */
/* Author:                                                                */
/* Script type:           Database creation script                        */
/* Created on:            2021-11-05 20:23                                */
/* ---------------------------------------------------------------------- */


/* ---------------------------------------------------------------------- */
/* Sequences                                                              */
/* ---------------------------------------------------------------------- */


--PBANDI_T_SOGG_STATO_AZIENDA
CREATE SEQUENCE SEQ_PBANDI_T_SOGG_STATO_AZI
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
--PBANDI_T_SOGGETTO_RATING
CREATE SEQUENCE SEQ_PBANDI_T_SOGG_RATING
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_R_SOGG_PROG_STA_CRED_FP
CREATE SEQUENCE SEQ_PBANDI_R_SOG_PROG_STA_CRED
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_SOGGETTO_CLA_RISCHIO
CREATE SEQUENCE SEQ_PBANDI_T_SOGG_CLA_RISCHIO
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
--PBANDI_R_SOGG_PROG_BANCA_BEN	
CREATE SEQUENCE SEQ_PBANDI_R_SOGG_PROG_BAN_BEN
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

	
-- Monitoraggio
--PBANDI_T_REVOCA_BANCARIA
CREATE SEQUENCE SEQ_PBANDI_T_REVOCA_BANCARIA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
--PBANDI_T_AZIONE_RECUP_BANCA
CREATE SEQUENCE SEQ_PBANDI_T_AZION_RECUP_BANCA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
--PBANDI_T_LIBERAZ_GARANTE
CREATE SEQUENCE SEQ_PBANDI_T_LIBERAZ_GARANTE
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
--PBANDI_T_ABBATTIM_GARANZIE
CREATE SEQUENCE SEQ_PBANDI_T_ABBATTIM_GARANZIE
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
--PBANDI_T_ESCUSS_CONFIDI
CREATE SEQUENCE SEQ_PBANDI_T_ESCUSS_CONFIDI
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
--PBANDI_T_PIANO_RIENTRO  
CREATE SEQUENCE SEQ_PBANDI_T_PIANO_RIENTRO
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_SALDO_STRALCIO
CREATE SEQUENCE SEQ_PBANDI_T_SALDO_STRALCIO
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
--PBANDI_T_PASSAGGIO_PERDITA 
CREATE SEQUENCE SEQ_PBANDI_T_PASSAGGIO_PERDITA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
--PBANDI_T_LIBERAZ_BANCA
CREATE SEQUENCE SEQ_PBANDI_T_LIBERAZ_BANCA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
--PBANDI_T_MESSA_IN_MORA
CREATE SEQUENCE SEQ_PBANDI_T_MESSA_IN_MORA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
--PBANDI_T_ANNOTAZ_GENERALI
CREATE SEQUENCE SEQ_PBANDI_T_ANNOTAZ_GENERALI
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_ANNOTAZ_GENERALI
/*
CREATE SEQUENCE SEQ_PBANDI_T_ANNOT_GEN_NUMERO
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
*/
	
--PBANDI_T_ISCRIZIONE_RUOLO
CREATE SEQUENCE SEQ_PBANDI_T_ISCRIZIONE_RUOLO
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
	
--PBANDI_T_SEGNALAZ_CORTE_CONTI  
CREATE SEQUENCE SEQ_PBANDI_T_SEGN_CORTE_CONTI
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_CESSIONE_QUOTA_FP
CREATE SEQUENCE SEQ_PBANDI_T_CESSIONE_QUOTA_FP
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_TRANSAZIONI_BANCA	
	CREATE SEQUENCE SEQ_PBANDI_T_TRANSAZIONI_BANCA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_VARIAZ_ST_CREDITO
	CREATE SEQUENCE SEQ_PBANDI_T_VARIAZ_ST_CREDITO
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;	
	
--PBANDI_T_PROCEDURE_CONCORS
	CREATE SEQUENCE SEQ_PBANDI_T_PROCEDURE_CONCORS
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;	
	
--PBANDI_T_CREDITORIE	
	CREATE SEQUENCE SEQ_PBANDI_T_CREDITORIE
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
--PBANDI_T_ALLUNG_PIANO_AMMORT
	CREATE SEQUENCE SEQ_PBANDI_T_ALLU_PIANO_AMMORT
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
/* ---------------------------------------------------------------------- */
/* Tables                                                                 */
/* ---------------------------------------------------------------------- */


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_AZIENDA"                                     */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_AZIENDA (
    ID_STATO_AZIENDA NUMBER(3) NOT NULL,
    DESC_BREVE_STATO_AZIENDA VARCHAR2(20) NOT NULL,
    DESC_STATO_AZIENDA VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_AZIENDA PRIMARY KEY (ID_STATO_AZIENDA) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_SOGG_STATO_AZIENDA"                                */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_SOGG_STATO_AZIENDA (
    ID_SOGGETTO_STATO_AZIENDA NUMBER(8) NOT NULL,
    ID_SOGGETTO NUMBER(8) NOT NULL,
    ID_STATO_AZIENDA NUMBER(3) NOT NULL,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_T_SOGG_STATO_AZIENDA PRIMARY KEY (ID_SOGGETTO_STATO_AZIENDA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_SOG_STATO_AZIENDA ON PBANDI_T_SOGG_STATO_AZIENDA (ID_SOGGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_SOG_STATO_AZIENDA ON PBANDI_T_SOGG_STATO_AZIENDA (ID_STATO_AZIENDA) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_CREDITO_FP"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_CREDITO_FP (
    ID_STATO_CREDITO_FP NUMBER(3) NOT NULL,
    DESC_BREVE_STATO_CREDITO_FP VARCHAR2(20) NOT NULL,
    DESC_STATO_CREDITO_FP VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_CREDITO_FP PRIMARY KEY (ID_STATO_CREDITO_FP) USING INDEX TABLESPACE PBANDI_IDX
);

COMMENT ON TABLE PBANDI_D_STATO_CREDITO_FP IS 'Tabella stati credito Finpiemonte';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_SOGG_PROG_STA_CRED_FP"                             */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_R_SOGG_PROG_STA_CRED_FP (
    ID_SOGG_PROG_STATO_CREDITO_FP NUMBER(8) NOT NULL,
    PROGR_SOGGETTO_PROGETTO NUMBER(8) NOT NULL,
    ID_STATO_CREDITO_FP NUMBER(3) NOT NULL,
    ID_MODALITA_AGEVOLAZIONE NUMBER(3) NOT NULL,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    DT_INIZIO_VALIDITA             DATE           NOT NULL,
    DT_FINE_VALIDITA               DATE,
    CONSTRAINT PK_PBANDI_R_SOGG_PROG_STA_CRED PRIMARY KEY (ID_SOGG_PROG_STATO_CREDITO_FP) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_R_SOG_PROG_STA_CRED ON PBANDI_R_SOGG_PROG_STA_CRED_FP (PROGR_SOGGETTO_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_R_SOG_PROG_STA_CRED ON PBANDI_R_SOGG_PROG_STA_CRED_FP (ID_STATO_CREDITO_FP) TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_R_SOG_PROG_STA_CRED ON PBANDI_R_SOGG_PROG_STA_CRED_FP (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_RATING"                                            */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_RATING (
    ID_RATING NUMBER(3) NOT NULL,
    CODICE_RATING VARCHAR2(10) NOT NULL,
    DESC_BREVE_RATING VARCHAR2(20) NOT NULL,
    DESC_RATING VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_PROVIDER NUMBER(3) NOT NULL,
    CONSTRAINT PK_PBANDI_D_RATING PRIMARY KEY (ID_RATING) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_PBANDI_D_RATING ON PBANDI_D_RATING (ID_PROVIDER);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_SOGGETTO_RATING"                                   */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_SOGGETTO_RATING (
    ID_SOGGETTO_RATING NUMBER(8) NOT NULL,
    ID_SOGGETTO NUMBER(8) NOT NULL,
    ID_RATING NUMBER(3) NOT NULL,
    DT_CLASSIFICAZIONE DATE NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_SOGGETTO_RATING PRIMARY KEY (ID_SOGGETTO_RATING) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_SOGGETTO_RATING ON PBANDI_T_SOGGETTO_RATING (ID_SOGGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_SOGGETTO_RATING ON PBANDI_T_SOGGETTO_RATING (ID_RATING) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_CLASSE_RISCHIO"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_CLASSE_RISCHIO (
    ID_CLASSE_RISCHIO NUMBER(3) NOT NULL,
    DESC_BREVE_CLASSE_RISCHIO VARCHAR2(20) NOT NULL,
    DESC_CLASSE_RISCHIO VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_CLASSE_RISCHIO PRIMARY KEY (ID_CLASSE_RISCHIO) USING INDEX TABLESPACE PBANDI_IDX
);

COMMENT ON TABLE PBANDI_D_CLASSE_RISCHIO IS 'Tabella stati credito Finpiemonte';


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_PROVIDER"                                          */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_PROVIDER (
    ID_PROVIDER NUMBER(3) NOT NULL,
    DESC_PROVIDER VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_PROVIDER PRIMARY KEY (ID_PROVIDER) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_SOGG_PROG_BANCA_BEN"                               */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_R_SOGG_PROG_BANCA_BEN (
    ID_SOGG_PROG_BANCA_BEN NUMBER(8) NOT NULL,
    PROGR_SOGGETTO_PROGETTO NUMBER(8) NOT NULL,
    ID_BANCA NUMBER(6) NOT NULL,
    ID_ATTIVITA_BANCA_BEN NUMBER(3),
    DENOM_SOGGETTO_TERZO VARCHAR2(400),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_R_SOGG_PROG_BAN_BEN PRIMARY KEY (ID_SOGG_PROG_BANCA_BEN) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_R_SOGG_PROG_BAN_BEN ON PBANDI_R_SOGG_PROG_BANCA_BEN (PROGR_SOGGETTO_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_R_SOGG_PROG_BAN_BEN ON PBANDI_R_SOGG_PROG_BANCA_BEN (ID_BANCA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE3_PBANDI_R_SOGG_PROG_BAN_BEN ON PBANDI_R_SOGG_PROG_BANCA_BEN (ID_ATTIVITA_BANCA_BEN) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Monitoraggio															  */
/* ---------------------------------------------------------------------- */

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_TIPO_MONIT_CRED"                                   */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_TIPO_MONIT_CRED (
    ID_TIPO_MONIT_CRED NUMBER(3) NOT NULL,
    DESC_BREVE_TIPO_MONIT_CRED VARCHAR2(40) NOT NULL,
    DESC_TIPO_MONIT_CRED VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_TIPO_MONIT_CRED PRIMARY KEY (ID_TIPO_MONIT_CRED) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_ATTIVITA_MONIT_CRED"                               */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_ATTIVITA_MONIT_CRED (
    ID_ATTIVITA_MONIT_CRED NUMBER(3) NOT NULL,
    ID_TIPO_MONIT_CRED NUMBER(3) NOT NULL,
    DESC_BREVE_ATT_MONIT_CRED VARCHAR2(40) NOT NULL,
    DESC_ATT_MONIT_CRED VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_ATTIV_MONIT_CRED PRIMARY KEY (ID_ATTIVITA_MONIT_CRED) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_D_ATTIV_MONIT_CRED_1 ON PBANDI_D_ATTIVITA_MONIT_CRED (ID_TIPO_MONIT_CRED) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_REVOCA_BANCARIA"                                   */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_REVOCA_BANCARIA (
    ID_REVOCA_BANCARIA NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    DT_RICEZIONE_COMUNICAZ DATE,
    DT_REVOCA DATE,
    IMP_DEBITO_RESIDUO_BANCA NUMBER(13,2),
    IMP_DEBITO_RESIDUO_FP NUMBER(13,2),
    PERC_COFINANZ_FP NUMBER(5,2),
    NUM_PROTOCOLLO VARCHAR2(30),
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_REVOCA_BANCARIA PRIMARY KEY (ID_REVOCA_BANCARIA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_REVOCA_BANCARIA_1 ON PBANDI_T_REVOCA_BANCARIA (ID_PROGETTO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE2_PBANDI_T_REVOCA_BANCARIA_1 ON PBANDI_T_REVOCA_BANCARIA (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_AZIONE_RECUP_BANCA"                                */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_AZIONE_RECUP_BANCA (
    ID_AZIONE_RECUPERO_BANCA NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    ID_ATTIVITA_AZIONE NUMBER(3) NOT NULL,
    DT_AZIONE DATE,
    NUM_PROTOCOLLO VARCHAR2(30),
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_AZIONE_RECUP_BANCA PRIMARY KEY (ID_AZIONE_RECUPERO_BANCA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_AZIO_RECUP_BANCA ON PBANDI_T_AZIONE_RECUP_BANCA (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_AZIO_RECUP_BANCA ON PBANDI_T_AZIONE_RECUP_BANCA (ID_ATTIVITA_AZIONE) TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_T_AZIO_RECUP_BANCA ON PBANDI_T_AZIONE_RECUP_BANCA (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_LIBERAZ_GARANTE"                                   */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_LIBERAZ_GARANTE (
    ID_LIBERAZ_GARANTE NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8)  NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    DT_LIBERAZ_GARANTE DATE,
    IMP_LIBERAZIONE NUMBER(13,2),
    DENOM_GARANTE_LIBERATO VARCHAR(400),
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_LIBERAZ_GARANTE PRIMARY KEY (ID_LIBERAZ_GARANTE) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_LIBERAZ_GARANTE ON PBANDI_T_LIBERAZ_GARANTE (ID_PROGETTO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE2_PBANDI_T_LIBERAZ_GARANTE ON PBANDI_T_LIBERAZ_GARANTE (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_ABBATTIM_GARANZIE"                                 */
/* ---------------------------------------------------------------------- */


CREATE TABLE PBANDI_T_ABBATTIM_GARANZIE (
    ID_ABBATTIM_GARANZIE NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    ID_ATTIVITA_GARANZIE NUMBER(3) NOT NULL,
	DT_ABBATTIM_GARANZIE DATE NOT NULL,
    IMP_INIZIALE NUMBER(13,2),
    IMP_LIBERATO NUMBER(13,2),
    IMP_NUOVO NUMBER(13,2),
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_ABBATTIM_GARANZIE PRIMARY KEY (ID_ABBATTIM_GARANZIE) USING INDEX TABLESPACE PBANDI_IDX
);


CREATE INDEX IE1_PBANDI_T_ABBATTI_GARANZIE ON PBANDI_T_ABBATTIM_GARANZIE (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_ABBATTI_GARANZIE ON PBANDI_T_ABBATTIM_GARANZIE (ID_ATTIVITA_GARANZIE) TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_T_ABBATTI_GARANZIE ON PBANDI_T_ABBATTIM_GARANZIE (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_ESCUSS_CONFIDI"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_ESCUSS_CONFIDI (
    ID_ESCUSS_CONFIDI NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    ID_ATTIVITA_GARANZIA_CONFIDI NUMBER(3),
    DENOM_CONFIDI VARCHAR(400),
    DT_ESCUSS_CONFIDI DATE,
    DT_PAGAM_CONFIDI DATE,
    PERC_GARANZIA NUMBER(5,2),
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_ESCUSS_CONFIDI PRIMARY KEY (ID_ESCUSS_CONFIDI) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_ESCUSS_CONFIDI ON PBANDI_T_ESCUSS_CONFIDI (ID_ATTIVITA_GARANZIA_CONFIDI) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_ESCUSS_CONFIDI ON PBANDI_T_ESCUSS_CONFIDI (ID_PROGETTO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_T_ESCUSS_CONFIDI ON PBANDI_T_ESCUSS_CONFIDI (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_PIANO_RIENTRO"                                     */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_PIANO_RIENTRO (
    ID_PIANO_RIENTRO NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    DT_PROPOSTA DATE,
    IMP_QUOTA_CAPITALE NUMBER(13,2),
    IMP_AGEVOLAZIONE NUMBER(13,2),
    ID_ATTIVITA_ESITO NUMBER(3),
    DT_ESITO DATE,
    ID_ATTIVITA_RECUPERO NUMBER(3),
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_PIANO_RIENTRO PRIMARY KEY (ID_PIANO_RIENTRO) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_PIANO_RIENTRO ON PBANDI_T_PIANO_RIENTRO (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_PIANO_RIENTRO ON PBANDI_T_PIANO_RIENTRO (ID_ATTIVITA_ESITO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE3_PBANDI_T_PIANO_RIENTRO ON PBANDI_T_PIANO_RIENTRO (ID_ATTIVITA_RECUPERO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE4_PBANDI_T_PIANO_RIENTRO ON PBANDI_T_PIANO_RIENTRO (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_SALDO_STRALCIO"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_SALDO_STRALCIO (
    ID_SALDO_STRALCIO NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    ID_ATTIVITA_SALDO_STRALCIO NUMBER(3),
    DT_PROPOSTA DATE,
    DT_ACCETTAZIONE DATE,
    IMP_DEBITORE NUMBER(13,2),
    IMP_CONFIDI NUMBER(13,2),
    ID_ATTIVITA_ESITO NUMBER(3),
    DT_ESITO DATE,
    DT_PAGAM_DEBITORE DATE,
    DT_PAGAM_CONFIDI DATE,
    ID_ATTIVITA_RECUPERO NUMBER(3),
    IMP_RECUPERATO NUMBER(13,2),
    IMP_PERDITA NUMBER(13,2),
    NOTE VARCHAR2(4000),
	FLAG_AGEVOLAZIONE VARCHAR2(1),
	IMP_DISIMPEGNO NUMBER(13,2),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_SALDO_STRALCIO PRIMARY KEY (ID_SALDO_STRALCIO) USING INDEX TABLESPACE PBANDI_IDX
);

ALTER TABLE PBANDI_T_SALDO_STRALCIO  add constraint CHK_FLAG_AGEVOLAZIONE  check (FLAG_AGEVOLAZIONE IN ('S',NULL));

CREATE INDEX IE1_PBANDI_T_SALDO_STRALCIO ON PBANDI_T_SALDO_STRALCIO (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_SALDO_STRALCIO ON PBANDI_T_SALDO_STRALCIO (ID_ATTIVITA_SALDO_STRALCIO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE3_PBANDI_T_SALDO_STRALCIO ON PBANDI_T_SALDO_STRALCIO (ID_ATTIVITA_ESITO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE4_PBANDI_T_SALDO_STRALCIO ON PBANDI_T_SALDO_STRALCIO (ID_ATTIVITA_RECUPERO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE5_PBANDI_T_SALDO_STRALCIO ON PBANDI_T_SALDO_STRALCIO (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_PASSAGGIO_PERDITA"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_PASSAGGIO_PERDITA (
    ID_PASSAGGIO_PERDITA NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    DT_PASSAGGIO_PERDITA DATE,
    IMP_PERDITA_COMPLESSIVA NUMBER(13,2),
    IMP_PERDITA_CAPITALE NUMBER(13,2),
    IMP_PERDITA_INTERESSI NUMBER(13,2),
    IMP_PERDITA_AGEVOLAZ NUMBER(13,2),
    IMP_PERDITA_MORA NUMBER(13,2),
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_PASSAGGIO_PERDITA PRIMARY KEY (ID_PASSAGGIO_PERDITA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_PASSAGG_PERDITA ON PBANDI_T_PASSAGGIO_PERDITA (ID_PROGETTO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE2_PBANDI_T_PASSAGG_PERDITA ON PBANDI_T_PASSAGGIO_PERDITA (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_LIBERAZ_BANCA"                                     */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_LIBERAZ_BANCA (
    ID_LIBERAZ_BANCA NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
	ID_ATTIVITA_LIBERAZIONE NUMBER(3),
	DT_LIBERAZ_BANCA  DATE,
    BANCA_LIBERATA VARCHAR2(400),
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_LIBERAZ_BANCA PRIMARY KEY (ID_LIBERAZ_BANCA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_LIBERAZ_BANCA ON PBANDI_T_LIBERAZ_BANCA (ID_PROGETTO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE2_PBANDI_T_LIBERAZ_BANCA ON PBANDI_T_LIBERAZ_BANCA (ID_ATTIVITA_LIBERAZIONE) TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_T_LIBERAZ_BANCA ON PBANDI_T_LIBERAZ_BANCA (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_MESSA_IN_MORA"                                     */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_MESSA_IN_MORA (
    ID_MESSA_IN_MORA NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8)  NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    ID_ATTIVITA_MORA NUMBER(3),
	DT_MESSA_IN_MORA DATE,
    IMP_MESSA_IN_MORA_COMPLESSIVA NUMBER(13,2),
    IMP_QUOTA_CAPITALE_REVOCA NUMBER(13,2),
    IMP_AGEVOLAZ_REVOCA NUMBER(13,2),
    IMP_CREDITO_RESIDUO NUMBER(13,2),
    IMP_INTERESSI_MORA NUMBER(13,2),
    DT_NOTIFICA DATE,
    ID_ATTIVITA_RECUPERO_MORA NUMBER(3),
	DT_PAGAMENTO DATE,
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
	NUM_PROTOCOLLO VARCHAR2(30),
    CONSTRAINT PK_PBANDI_T_MESSA_IN_MORA PRIMARY KEY (ID_MESSA_IN_MORA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_MESSA_IN_MORA ON PBANDI_T_MESSA_IN_MORA (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_MESSA_IN_MORA ON PBANDI_T_MESSA_IN_MORA (ID_ATTIVITA_MORA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE3_PBANDI_T_MESSA_IN_MORA ON PBANDI_T_MESSA_IN_MORA (ID_ATTIVITA_RECUPERO_MORA) TABLESPACE PBANDI_IDX;
CREATE INDEX IE4_PBANDI_T_MESSA_IN_MORA ON PBANDI_T_MESSA_IN_MORA (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_ANNOTAZ_GENERALI"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_ANNOTAZ_GENERALI (
    ID_ANNOTAZ_GENERALE NUMBER(8) NOT NULL,
--    NUM_ANNOTAZ_GENERALE NUMBER(8) NOT NULL,
--    DESC_BREVE_ANNOTAZ_GENERALE VARCHAR2(20),
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
	FLAG_ELIMINAZIONE VARCHAR2(2),
    CONSTRAINT PK_PBANDI_T_ANNOTAZ_GENERALI PRIMARY KEY (ID_ANNOTAZ_GENERALE) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_ANNOTAZ_GENERALI ON PBANDI_T_ANNOTAZ_GENERALI (ID_PROGETTO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE2_PBANDI_T_ANNOTAZ_GENERALI ON PBANDI_T_ANNOTAZ_GENERALI (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;
--CREATE INDEX IE3_PBANDI_T_ANNOTAZ_GENERALI ON PBANDI_T_ANNOTAZ_GENERALI (NUM_ANNOTAZ_GENERALE) TABLESPACE PBANDI_IDX;
ALTER TABLE PBANDI_T_ANNOTAZ_GENERALI ADD CONSTRAINT CK_PBANDI_T_ANNOTAZ_GENERAL_01 
    CHECK (FLAG_ELIMINAZIONE in ('SI'));

COMMENT ON COLUMN PBANDI_T_ANNOTAZ_GENERALI.FLAG_ELIMINAZIONE IS 'Valori ammessi: ''SI''';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_ISCRIZIONE_RUOLO"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_ISCRIZIONE_RUOLO (
    ID_ISCRIZIONE_RUOLO NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    DT_RICHIESTA_ISCRIZIONE DATE,
    NUM_PROTOCOLLO VARCHAR2(30),
    DT_RICHIESTA_DISCARICO DATE,
    NUM_PROTOCOLLO_DISCARICO VARCHAR2(30),
    DT_ISCRIZIONE_RUOLO DATE,
    DT_DISCARICO DATE,
    NUM_PROTOCOLLO_DISCAR_REG VARCHAR2(30),
    DT_RICHIESTA_SOSP DATE,
    NUM_PROTOCOLLO_SOSP VARCHAR2(30),
    IMP_CAPITALE_RUOLO NUMBER(13,2),
    IMP_AGEVOLAZ_RUOLO NUMBER(13,2),
    DT_ISCRIZIONE DATE,
    NUM_PROTOCOLLO_REGIONE VARCHAR2(30),
    TIPO_PAGAMENTO VARCHAR2(1),
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_ISCRIZIONE_RUOLO PRIMARY KEY (ID_ISCRIZIONE_RUOLO) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_ISCRIZIONE_RUOLO ON PBANDI_T_ISCRIZIONE_RUOLO (ID_PROGETTO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE2_PBANDI_T_ISCRIZIONE_RUOLO ON PBANDI_T_ISCRIZIONE_RUOLO (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_T_ISCRIZIONE_RUOLO ADD CONSTRAINT CK_PBANDI_T_ISCRIZIONE_01 
    CHECK (tipo_pagamento in ('I','R', 'N'));

COMMENT ON COLUMN PBANDI_T_ISCRIZIONE_RUOLO.TIPO_PAGAMENTO IS 'I=Integrale R=Rateizzato N=Non presente';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_SEGNALAZ_CORTE_CONTI"                              */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_SEGNALAZ_CORTE_CONTI (
    ID_SEGNALAZIONE_CORTE_CONTI NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8)  NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    DT_SEGNALAZIONE DATE,
    NUM_PROTOCOLLO_SEGN VARCHAR2(30),
    IMP_CRED_RES_CAPITALE NUMBER(13,2),
    IMP_ONERI_AGEVOLAZ NUMBER(13,2),
    IMP_QUOTA_SEGNALAZ NUMBER(13,2),
    IMP_GARANZIA NUMBER(13,2),
    FLAG_PIANO_RIENTRO VARCHAR2(2),
    DT_PIANO_RIENTRO DATE,
    FLAG_SALDO_STRALCIO VARCHAR2(2),
    DT_SALDO_STRALCIO DATE,
    FLAG_PAGAM_INTEGRALE VARCHAR(2),
    DT_PAGAMENTO DATE,
    FLAG_DISSEGNALAZIONE VARCHAR2(2),
    DT_DISSEGNALAZIONE DATE,
    NUM_PROTOCOLLO_DISS VARCHAR2(30),
    FLAG_DECRETO_ARCHIV VARCHAR2(2),
    DT_ARCHIV DATE,
    NUM_PROTOCOLLO_ARCHIV VARCHAR2(30),
    FLAG_COMUNICAZ_REGIONE VARCHAR2(2),
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_SEGN_CORTE_CONTI PRIMARY KEY (ID_SEGNALAZIONE_CORTE_CONTI) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_SEGN_CORTE_CONTI ON PBANDI_T_SEGNALAZ_CORTE_CONTI (ID_PROGETTO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE2_PBANDI_T_SEGN_CORTE_CONTI ON PBANDI_T_SEGNALAZ_CORTE_CONTI (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_T_SEGNALAZ_CORTE_CONTI ADD CONSTRAINT CK_PBANDI_T_SEGNALAZ_CORTE_01 
    CHECK (flag_comunicaz_regione in ('NO','SI'));

ALTER TABLE PBANDI_T_SEGNALAZ_CORTE_CONTI ADD CONSTRAINT CK_PBANDI_T_SEGNALAZ_CORTE_02 
    CHECK (flag_decreto_archiv in ('NO','SI'));

ALTER TABLE PBANDI_T_SEGNALAZ_CORTE_CONTI ADD CONSTRAINT CK_PBANDI_T_SEGNALAZ_CORTE_03 
    CHECK (flag_dissegnalazione IN ('NO','SI'));

ALTER TABLE PBANDI_T_SEGNALAZ_CORTE_CONTI ADD CONSTRAINT CK_PBANDI_T_SEGNALAZ_CORTE_04 
    CHECK (flag_pagam_integrale in ('NO','SI'));

ALTER TABLE PBANDI_T_SEGNALAZ_CORTE_CONTI ADD CONSTRAINT CK_PBANDI_T_SEGNALAZ_CORTE_05 
    CHECK (flag_piano_rientro in ('NO','SI'));

ALTER TABLE PBANDI_T_SEGNALAZ_CORTE_CONTI ADD CONSTRAINT CK_PBANDI_T_SEGNALAZ_CORTE_06 
    CHECK (flag_saldo_stralcio in ('NO','SI'));

COMMENT ON COLUMN PBANDI_T_SEGNALAZ_CORTE_CONTI.FLAG_PIANO_RIENTRO IS 'Valori ammessi: ''NO'',''SI''';

COMMENT ON COLUMN PBANDI_T_SEGNALAZ_CORTE_CONTI.FLAG_SALDO_STRALCIO IS 'Valori ammessi: NO, SI';

COMMENT ON COLUMN PBANDI_T_SEGNALAZ_CORTE_CONTI.FLAG_PAGAM_INTEGRALE IS 'Valori ammessi: NO,SI';

COMMENT ON COLUMN PBANDI_T_SEGNALAZ_CORTE_CONTI.FLAG_DISSEGNALAZIONE IS 'Valori ammessi: NO,SI';

COMMENT ON COLUMN PBANDI_T_SEGNALAZ_CORTE_CONTI.FLAG_DECRETO_ARCHIV IS 'VAlori ammessi: NO,SI';

COMMENT ON COLUMN PBANDI_T_SEGNALAZ_CORTE_CONTI.FLAG_COMUNICAZ_REGIONE IS 'Valori ammessi: NO,SI';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_CESSIONE_QUOTA_FP"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_CESSIONE_QUOTA_FP (
    ID_CESSIONE_QUOTA_FP NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    IMP_CESSIONE_CAPITALE NUMBER(13,2),
    IMP_CESSIONE_ONERI NUMBER(13,2),
    IMP_CESSIONE_INTERESSI_MORA NUMBER(13,2),
    IMP_CESSIONE_COMPLESSIVA NUMBER(13,2),
    DT_CESSIONE DATE,
    IMP_CORRISP_CESSIONE NUMBER(13,2),
    DENOM_CESSIONARIO VARCHAR2(400),
    ID_STATO_CESSIONE NUMBER(3),
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_CESSIONE_QUOTA_FP PRIMARY KEY (ID_CESSIONE_QUOTA_FP) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_CESS_QUOTA_FP ON PBANDI_T_CESSIONE_QUOTA_FP (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_CESS_QUOTA_FP ON PBANDI_T_CESSIONE_QUOTA_FP (ID_STATO_CESSIONE) TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_T_CESS_QUOTA_FP ON PBANDI_T_CESSIONE_QUOTA_FP (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_TRANSAZIONI_BANCA"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_TRANSAZIONI_BANCA (
    ID_TRANSAZIONE_BANCA NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    IMP_RICONCILIATO NUMBER(13,2),
    IMP_TRANSATO NUMBER(13,2),
    PERC_TRANSAZIONE NUMBER(5,2),
    IMP_PAGATO NUMBER(13,2),
    ID_BANCA NUMBER(6),
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_TRANSAZIONI_BANCA PRIMARY KEY (ID_TRANSAZIONE_BANCA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_TRANSAZ_BANCA ON PBANDI_T_TRANSAZIONI_BANCA (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_TRANSAZ_BANCA ON PBANDI_T_TRANSAZIONI_BANCA (ID_BANCA) TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_T_TRANSAZ_BANCA ON PBANDI_T_TRANSAZIONI_BANCA (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_CESSIONE"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_CESSIONE (
    ID_STATO_CESSIONE NUMBER(3) NOT NULL,
    DESC_BREVE_STATO_CESSIONE VARCHAR2(20) NOT NULL,
    DESC_STATO_CESSIONE VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_CESSIONE PRIMARY KEY (ID_STATO_CESSIONE) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_VARIAZ_ST_CREDITO"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_VARIAZ_ST_CREDITO (
    ID_VARIAZ_ST_CREDITO NUMBER(8) NOT NULL,
    ID_SOGG_PROG_STATO_CREDITO_FP NUMBER(8) NOT NULL,
    --ID_STATO_AZIENDA NUMBER(3) NOT NULL,
    ID_NUOVO_STATO_CREDITO_FP NUMBER(3) NOT NULL,
    ID_STATO_PROP_VAR_CRE NUMBER(3),
    FLAG_CONF_NUOVO_STA_CRE VARCHAR2(1),
    PERC_SCONF NUMBER(5,2),
    GG_SCONF NUMBER(5),
    IMP_SCONF_CAPITALE NUMBER(15,2),
    IMP_SCONF_INTERESSI NUMBER(15,2),
    IMP_SCONF_AGEV NUMBER(15,2),
	IMP_EROGATO NUMBER(15,2),
    ID_MODALITA_AGEVOLAZIONE NUMBER(3) NOT NULL,
    DT_SCADENZA_RATA DATE,
    DT_PAGAMENTO_RATA DATE,
	NUM_RATA NUMBER(3) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_VARIAZ_ST_CREDITO PRIMARY KEY (ID_VARIAZ_ST_CREDITO) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_VARIAZ_ST_CRED ON PBANDI_T_VARIAZ_ST_CREDITO (ID_SOGG_PROG_STATO_CREDITO_FP,ID_MODALITA_AGEVOLAZIONE,NUM_RATA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE3_PBANDI_T_VARIAZ_ST_CRED ON PBANDI_T_VARIAZ_ST_CREDITO (ID_NUOVO_STATO_CREDITO_FP) TABLESPACE PBANDI_IDX;

CREATE INDEX IE4_PBANDI_T_VARIAZ_ST_CRED ON PBANDI_T_VARIAZ_ST_CREDITO (ID_STATO_PROP_VAR_CRE) TABLESPACE PBANDI_IDX;

CREATE INDEX IE5_PBANDI_T_VARIAZ_ST_CRED ON PBANDI_T_VARIAZ_ST_CREDITO (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_T_VARIAZ_ST_CREDITO ADD CONSTRAINT CC_PBANDI_T_VARIAZ_ST_CRED_01 
    CHECK (FLAG_CONF_NUOVO_STA_CRE IN ('N','S'));

COMMENT ON COLUMN PBANDI_T_VARIAZ_ST_CREDITO.FLAG_CONF_NUOVO_STA_CRE IS 'Valori : S/N';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_PROP_VAR_CRE"                                */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_PROP_VAR_CRE (
    ID_STATO_PROP_VAR_CRE NUMBER(3) NOT NULL,
    DESC_BREVE_STATO_PROP_VAR_CRE VARCHAR2(20),
    DESC_STATO_PROP_VAR_CRE VARCHAR2(200),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_PROP_VAR_CRE PRIMARY KEY (ID_STATO_PROP_VAR_CRE) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_SOGGETTO_CLA_RISCHIO"                              */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_SOGGETTO_CLA_RISCHIO (
    ID_SOGGETTO_CLA_RISCHIO NUMBER(8) NOT NULL,
    ID_SOGGETTO NUMBER(8) NOT NULL,
    ID_CLASSE_RISCHIO NUMBER(3) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_SOGG_CLA_RISCHIO PRIMARY KEY (ID_SOGGETTO_CLA_RISCHIO) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_SOG_CLA_RISCHIO ON PBANDI_T_SOGGETTO_CLA_RISCHIO (ID_SOGGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_SOG_CLA_RISCHIO ON PBANDI_T_SOGGETTO_CLA_RISCHIO (ID_CLASSE_RISCHIO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE3_PBANDI_T_SOG_CLA_RISCHIO ON PBANDI_T_SOGGETTO_CLA_RISCHIO (ID_UTENTE_INS) TABLESPACE PBANDI_IDX;

CREATE INDEX IE4_PBANDI_T_SOG_CLA_RISCHIO ON PBANDI_T_SOGGETTO_CLA_RISCHIO (ID_UTENTE_AGG) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Add table " PBANDI_D_ESITO_ALL_PIANO_AMMOR"                            */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_ESITO_ALL_PIANO_AMMOR (
    ID_ESITO_ALL_PIANO_AMMOR NUMBER(3) NOT NULL,
    DESC_BREVE_ESI_ALL_PIANO_AMMOR VARCHAR2(20),
    DESC_ESITO_ALL_PIANO_AMMOR VARCHAR2(255),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_ESI_ALL_PIANO_AMM PRIMARY KEY (ID_ESITO_ALL_PIANO_AMMOR) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table " PBANDI_D_TIPO_PROCED_CONCORS"                            */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_TIPO_PROCED_CONCORS (
    ID_TIPO_PROCED_CONCORS NUMBER(3) NOT NULL,
    DESC_BREVE_TIPO_PROCED_CONCORS VARCHAR2(20),
    DESC_TIPO_PROCED_CONCORS VARCHAR2(255),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_TIPO_PROCED_CONCOR PRIMARY KEY (ID_TIPO_PROCED_CONCORS) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table " PBANDI_D_STATO_INSINUA_CONCORS"                            */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_INSINUA_CONCORS (
    ID_STATO_INSINUA_CONCORS NUMBER(3) NOT NULL,
    DESC_BREVE_STA_INSINUA_CONCORS VARCHAR2(20),
    DESC_STATO_INSINUA_CONCORS VARCHAR2(255),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_INSIN_CONCOR PRIMARY KEY (ID_STATO_INSINUA_CONCORS) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table " PBANDI_D_STATO_PROCED_CONCORS"                            */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_PROCED_CONCORS (
    ID_STATO_PROCED_CONCORS NUMBER(3) NOT NULL,
    DESC_BREVE_STA_PROCED_CONCORS VARCHAR2(20),
    DESC_STATO_PROCED_CONCORS VARCHAR2(255),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_PROCE_CONCOR PRIMARY KEY (ID_STATO_PROCED_CONCORS) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_ALLUNG_PIANO_AMMORT"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_ALLUNG_PIANO_AMMORT (
    ID_ALLUNG_PIANO_AMMORT NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    ID_ESITO_ALL_PIANO_AMMOR NUMBER(3) NOT NULL,
    DT_PROPOSTA DATE  NOT NULL,
	NUM_MESI_ALLUNG NUMBER(2) NOT NULL,
	DT_SCAD_ORIG_PIANO_AMM DATE,
	DT_SCAD_PIANO_AMM DATE,
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_ALLUNG_PIANO_AMMOR PRIMARY KEY (ID_ALLUNG_PIANO_AMMORT) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_ALLU_PIANO_AMMORT ON PBANDI_T_ALLUNG_PIANO_AMMORT (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_ALLU_PIANO_AMMORT ON PBANDI_T_ALLUNG_PIANO_AMMORT (ID_ESITO_ALL_PIANO_AMMOR) TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_T_ALLU_PIANO_AMMORT ON PBANDI_T_ALLUNG_PIANO_AMMORT (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_CREDITORIE"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_CREDITORIE (
    ID_CREDITORIA NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    DT_RICHIESTA DATE  NOT NULL,
    DT_EVASIONE  DATE NOT NULL,
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_CREDITORIE PRIMARY KEY (ID_CREDITORIA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_CREDITORIE ON PBANDI_T_CREDITORIE (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_CREDITORIE ON PBANDI_T_CREDITORIE (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_PROCEDURE_CONCORS"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_PROCEDURE_CONCORS (
    ID_PROCEDURA_CONCORS NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    ID_TIPO_PROCED_CONCORS NUMBER(3) NOT NULL,
    DT_INIZIO_PROCEDURA DATE  NOT NULL,
    DT_COMUNICAZIONE DATE,
    DT_UDIENZA DATE,
    DT_SCADENZA_INSINUAZIONE DATE,
    ID_STATO_INSINUA_CONCORS NUMBER(3),
	DT_ESECUTIV_STATO_PASS_OMOLOGA DATE,
	ID_STATO_PROCED_CONCORS NUMBER(3),
	DT_CHIUSURA_PROCEDURA DATE,
    NOTE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_PROCEDURE_CONCORS PRIMARY KEY (ID_PROCEDURA_CONCORS) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_PROCEDURE_CONCORS ON PBANDI_T_PROCEDURE_CONCORS (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_PROCEDURE_CONCORS ON PBANDI_T_PROCEDURE_CONCORS (ID_TIPO_PROCED_CONCORS) TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_T_PROCEDURE_CONCORS ON PBANDI_T_PROCEDURE_CONCORS (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;
CREATE INDEX IE4_PBANDI_T_PROCEDURE_CONCORS ON PBANDI_T_PROCEDURE_CONCORS (ID_STATO_PROCED_CONCORS) TABLESPACE PBANDI_IDX;
CREATE INDEX IE5_PBANDI_T_PROCEDURE_CONCORS ON PBANDI_T_PROCEDURE_CONCORS (ID_STATO_INSINUA_CONCORS) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_AGEV_CREDITI_GARANZIE"                             */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_R_AGEV_CREDITI_GARANZIE (
	ID_MODALITA_AGEVOLAZIONE  NUMBER(3) NOT NULL,
    ID_ENTITA NUMBER(3) NOT NULL,
    FLAG_AREA_CREDITI VARCHAR2(1),
    FLAG_GARANZIE VARCHAR2(1),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_R_AGEV_CREDITI_GARAN PRIMARY KEY (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA) USING INDEX TABLESPACE PBANDI_IDX
);

ALTER TABLE PBANDI_R_AGEV_CREDITI_GARANZIE ADD CONSTRAINT CK_PBANDI_R_AGEV_CRED_GARAN_01 
    CHECK (FLAG_AREA_CREDITI in ('S'));
ALTER TABLE PBANDI_R_AGEV_CREDITI_GARANZIE ADD CONSTRAINT CK_PBANDI_R_AGEV_CRED_GARAN_02 
    CHECK (FLAG_GARANZIE in ('S'));



COMMENT ON TABLE PBANDI_R_AGEV_CREDITI_GARANZIE IS 'Tabella di configurazione box per area crediti e graranzie';
COMMENT ON COLUMN PBANDI_R_AGEV_CREDITI_GARANZIE.FLAG_AREA_CREDITI IS 'S- Visualizza i box su area crediti';
COMMENT ON COLUMN PBANDI_R_AGEV_CREDITI_GARANZIE.FLAG_GARANZIE IS 'S- Visualizza i box su garanzie';

CREATE INDEX IE1_PBANDI_R_AGEV_CRED_GARAN ON PBANDI_R_AGEV_CREDITI_GARANZIE (ID_ENTITA) TABLESPACE PBANDI_IDX;



/* ---------------------------------------------------------------------- */
/* Foreign key constraints                                                */
/* ---------------------------------------------------------------------- */


ALTER TABLE PBANDI_T_SOGG_STATO_AZIENDA ADD CONSTRAINT FK_PBANDI_T_SOGGETTO_28 
    FOREIGN KEY (ID_SOGGETTO) REFERENCES PBANDI.PBANDI_T_SOGGETTO (ID_SOGGETTO);

ALTER TABLE PBANDI_T_SOGG_STATO_AZIENDA ADD CONSTRAINT FK_PBANDI_D_STATO_AZIENDA_01 
    FOREIGN KEY (ID_STATO_AZIENDA) REFERENCES PBANDI_D_STATO_AZIENDA (ID_STATO_AZIENDA);

ALTER TABLE PBANDI_R_SOGG_PROG_STA_CRED_FP ADD CONSTRAINT FK_PBANDI_R_SOGG_PROGETTO_04 
    FOREIGN KEY (PROGR_SOGGETTO_PROGETTO) REFERENCES PBANDI.PBANDI_R_SOGGETTO_PROGETTO (PROGR_SOGGETTO_PROGETTO);

ALTER TABLE PBANDI_R_SOGG_PROG_STA_CRED_FP ADD CONSTRAINT FK_PBANDI_D_STATO_CRED_FP_01 
    FOREIGN KEY (ID_STATO_CREDITO_FP) REFERENCES PBANDI_D_STATO_CREDITO_FP (ID_STATO_CREDITO_FP);

ALTER TABLE PBANDI_R_SOGG_PROG_STA_CRED_FP ADD CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_35 
    FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE) REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE);
	
ALTER TABLE PBANDI_T_SOGGETTO_RATING ADD CONSTRAINT FK_PBANDI_D_RATING_01 
    FOREIGN KEY (ID_RATING) REFERENCES PBANDI_D_RATING (ID_RATING);

ALTER TABLE PBANDI_T_SOGGETTO_RATING ADD CONSTRAINT FK_PBANDI_T_SOGGETTO_29 
    FOREIGN KEY (ID_SOGGETTO) REFERENCES PBANDI.PBANDI_T_SOGGETTO (ID_SOGGETTO);

ALTER TABLE PBANDI_D_RATING ADD CONSTRAINT FK_PBANDI_D_PROVIDER_01 
    FOREIGN KEY (ID_PROVIDER) REFERENCES PBANDI_D_PROVIDER (ID_PROVIDER);

ALTER TABLE PBANDI_R_SOGG_PROG_BANCA_BEN ADD CONSTRAINT FK_PBANDI_R_SOGG_PROGETTO_06 
    FOREIGN KEY (PROGR_SOGGETTO_PROGETTO) REFERENCES PBANDI.PBANDI_R_SOGGETTO_PROGETTO (PROGR_SOGGETTO_PROGETTO);

ALTER TABLE PBANDI_R_SOGG_PROG_BANCA_BEN ADD CONSTRAINT FK_PBANDI_D_BANCA_04 
    FOREIGN KEY (ID_BANCA) REFERENCES PBANDI.PBANDI_D_BANCA (ID_BANCA);

ALTER TABLE PBANDI_R_SOGG_PROG_BANCA_BEN ADD CONSTRAINT FK_PBANDI_D_ATT_MONIT_CRED_11 
    FOREIGN KEY (ID_ATTIVITA_BANCA_BEN) REFERENCES PBANDI_D_ATTIVITA_MONIT_CRED (ID_ATTIVITA_MONIT_CRED);

	
-- Monitoraggio
ALTER TABLE PBANDI_D_ATTIVITA_MONIT_CRED ADD CONSTRAINT FK_PBANDI_D_TIPO_MONIT_CRED_01 
    FOREIGN KEY (ID_TIPO_MONIT_CRED) REFERENCES PBANDI_D_TIPO_MONIT_CRED (ID_TIPO_MONIT_CRED);
	
ALTER TABLE PBANDI_T_REVOCA_BANCARIA ADD CONSTRAINT FK_PBANDI_T_PROGETTO_60 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);

ALTER TABLE PBANDI_T_REVOCA_BANCARIA ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_15
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));
 
ALTER TABLE PBANDI_T_AZIONE_RECUP_BANCA ADD CONSTRAINT FK_PBANDI_T_PROGETTO_61 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);

ALTER TABLE PBANDI_T_AZIONE_RECUP_BANCA ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_16
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_AZIONE_RECUP_BANCA ADD CONSTRAINT FK_PBANDI_D_ATT_MONIT_CRED_01 
    FOREIGN KEY (ID_ATTIVITA_AZIONE) REFERENCES PBANDI_D_ATTIVITA_MONIT_CRED (ID_ATTIVITA_MONIT_CRED);

ALTER TABLE PBANDI_T_LIBERAZ_GARANTE ADD CONSTRAINT FK_PBANDI_T_PROGETTO_62 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_LIBERAZ_GARANTE ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_17
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_ABBATTIM_GARANZIE ADD CONSTRAINT FK_PBANDI_T_PROGETTO_63 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_ABBATTIM_GARANZIE ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_18
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_ABBATTIM_GARANZIE ADD CONSTRAINT FK_PBANDI_D_ATT_MONIT_CRED_02 
    FOREIGN KEY (ID_ATTIVITA_GARANZIE) REFERENCES PBANDI_D_ATTIVITA_MONIT_CRED (ID_ATTIVITA_MONIT_CRED);

ALTER TABLE PBANDI_T_ESCUSS_CONFIDI ADD CONSTRAINT FK_PBANDI_T_PROGETTO_64 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_ESCUSS_CONFIDI ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_19
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_ESCUSS_CONFIDI ADD CONSTRAINT FK_PBANDI_D_ATT_MONIT_CRED_03 
    FOREIGN KEY (ID_ATTIVITA_GARANZIA_CONFIDI) REFERENCES PBANDI_D_ATTIVITA_MONIT_CRED (ID_ATTIVITA_MONIT_CRED);

ALTER TABLE PBANDI_T_PIANO_RIENTRO ADD CONSTRAINT FK_PBANDI_T_PROGETTO_65 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_PIANO_RIENTRO ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_20
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_PIANO_RIENTRO ADD CONSTRAINT FK_PBANDI_D_ATT_MONIT_CRED_05 
    FOREIGN KEY (ID_ATTIVITA_ESITO) REFERENCES PBANDI_D_ATTIVITA_MONIT_CRED (ID_ATTIVITA_MONIT_CRED);

ALTER TABLE PBANDI_T_PIANO_RIENTRO ADD CONSTRAINT FK_PBANDI_D_ATT_MONIT_CRED_04 
    FOREIGN KEY (ID_ATTIVITA_RECUPERO) REFERENCES PBANDI_D_ATTIVITA_MONIT_CRED (ID_ATTIVITA_MONIT_CRED);

ALTER TABLE PBANDI_T_SALDO_STRALCIO ADD CONSTRAINT FK_PBANDI_T_PROGETTO_66 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_SALDO_STRALCIO ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_21
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_SALDO_STRALCIO ADD CONSTRAINT FK_PBANDI_D_ATT_MONIT_CRED_06 
    FOREIGN KEY (ID_ATTIVITA_SALDO_STRALCIO) REFERENCES PBANDI_D_ATTIVITA_MONIT_CRED (ID_ATTIVITA_MONIT_CRED);

ALTER TABLE PBANDI_T_SALDO_STRALCIO ADD CONSTRAINT FK_PBANDI_D_ATT_MONIT_CRED_07 
    FOREIGN KEY (ID_ATTIVITA_ESITO) REFERENCES PBANDI_D_ATTIVITA_MONIT_CRED (ID_ATTIVITA_MONIT_CRED);

ALTER TABLE PBANDI_T_SALDO_STRALCIO ADD CONSTRAINT FK_PBANDI_D_ATT_MONIT_CRED_08 
    FOREIGN KEY (ID_ATTIVITA_RECUPERO) REFERENCES PBANDI_D_ATTIVITA_MONIT_CRED (ID_ATTIVITA_MONIT_CRED);

ALTER TABLE PBANDI_T_PASSAGGIO_PERDITA ADD CONSTRAINT FK_PBANDI_T_PROGETTO_67 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_PASSAGGIO_PERDITA ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_22
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_LIBERAZ_BANCA ADD CONSTRAINT FK_PBANDI_T_PROGETTO_68 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);

ALTER TABLE PBANDI_T_LIBERAZ_BANCA ADD CONSTRAINT FK_PBANDI_D_ATT_MONIT_CRED_09 
    FOREIGN KEY (ID_ATTIVITA_LIBERAZIONE) REFERENCES PBANDI_D_ATTIVITA_MONIT_CRED (ID_ATTIVITA_MONIT_CRED);
	
ALTER TABLE PBANDI_T_LIBERAZ_BANCA ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_23
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_MESSA_IN_MORA ADD CONSTRAINT FK_PBANDI_T_PROGETTO_70 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_MESSA_IN_MORA ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_24
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_MESSA_IN_MORA ADD CONSTRAINT FK_PBANDI_D_ATT_MONIT_CRED_10 
    FOREIGN KEY (ID_ATTIVITA_MORA) REFERENCES PBANDI_D_ATTIVITA_MONIT_CRED (ID_ATTIVITA_MONIT_CRED);

ALTER TABLE PBANDI_T_MESSA_IN_MORA ADD CONSTRAINT FK_PBANDI_D_ATT_MONIT_CRED_12 
    FOREIGN KEY (ID_ATTIVITA_RECUPERO_MORA) REFERENCES PBANDI_D_ATTIVITA_MONIT_CRED (ID_ATTIVITA_MONIT_CRED);

ALTER TABLE PBANDI_T_ANNOTAZ_GENERALI ADD CONSTRAINT FK_PBANDI_T_PROGETTO_69 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_ANNOTAZ_GENERALI ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_29
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_ISCRIZIONE_RUOLO ADD CONSTRAINT FK_PBANDI_T_PROGETTO_71 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_ISCRIZIONE_RUOLO ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_25
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_SEGNALAZ_CORTE_CONTI ADD CONSTRAINT FK_PBANDI_T_PROGETTO_72 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_SEGNALAZ_CORTE_CONTI ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_26
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_CESSIONE_QUOTA_FP ADD CONSTRAINT FK_PBANDI_T_PROGETTO_73 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_CESSIONE_QUOTA_FP ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_27
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_CESSIONE_QUOTA_FP ADD CONSTRAINT FK_PBANDI_D_STATO_CESS_01 
    FOREIGN KEY (ID_STATO_CESSIONE) REFERENCES PBANDI_D_STATO_CESSIONE (ID_STATO_CESSIONE);

ALTER TABLE PBANDI_T_TRANSAZIONI_BANCA ADD CONSTRAINT FK_PBANDI_T_PROGETTO_74 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_TRANSAZIONI_BANCA ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_28
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_TRANSAZIONI_BANCA ADD CONSTRAINT FK_PBANDI_D_BANCA_03 
    FOREIGN KEY (ID_BANCA) REFERENCES PBANDI.PBANDI_D_BANCA (ID_BANCA);

ALTER TABLE PBANDI_T_VARIAZ_ST_CREDITO ADD CONSTRAINT FK_PBANDI_R_SOG_PRO_STA_CRE_1 
    FOREIGN KEY (ID_SOGG_PROG_STATO_CREDITO_FP) REFERENCES PBANDI_R_SOGG_PROG_STA_CRED_FP (ID_SOGG_PROG_STATO_CREDITO_FP);

ALTER TABLE PBANDI_T_VARIAZ_ST_CREDITO ADD CONSTRAINT FK_PBANDI_D_STATO_CRED_FP_02 
    FOREIGN KEY (ID_NUOVO_STATO_CREDITO_FP) REFERENCES PBANDI_D_STATO_CREDITO_FP (ID_STATO_CREDITO_FP);

ALTER TABLE PBANDI_T_VARIAZ_ST_CREDITO ADD CONSTRAINT FK_PBANDI_D_STA_PROP_VAR_CRE_1 
    FOREIGN KEY (ID_STATO_PROP_VAR_CRE) REFERENCES PBANDI_D_STATO_PROP_VAR_CRE (ID_STATO_PROP_VAR_CRE);

ALTER TABLE PBANDI_T_VARIAZ_ST_CREDITO ADD CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_10 
    FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE) REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE);

ALTER TABLE PBANDI_T_SOGGETTO_CLA_RISCHIO ADD CONSTRAINT FK_PBANDI_T_SOGGETTO_34 
    FOREIGN KEY (ID_SOGGETTO) REFERENCES PBANDI.PBANDI_T_SOGGETTO (ID_SOGGETTO);

ALTER TABLE PBANDI_T_SOGGETTO_CLA_RISCHIO ADD CONSTRAINT FK_PBANDI_D_CLASSE_RISCHIO_01 
    FOREIGN KEY (ID_CLASSE_RISCHIO) REFERENCES PBANDI_D_CLASSE_RISCHIO (ID_CLASSE_RISCHIO);

ALTER TABLE PBANDI_T_ALLUNG_PIANO_AMMORT ADD CONSTRAINT FK_PBANDI_T_PROGETTO_90 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_ALLUNG_PIANO_AMMORT ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_30
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_T_ALLUNG_PIANO_AMMORT ADD (CONSTRAINT FK_PBANDI_D_ESI_ALL_PIA_AMM_01
	FOREIGN KEY (ID_ESITO_ALL_PIANO_AMMOR)  REFERENCES PBANDI_D_ESITO_ALL_PIANO_AMMOR (ID_ESITO_ALL_PIANO_AMMOR));


ALTER TABLE PBANDI_T_CREDITORIE ADD CONSTRAINT FK_PBANDI_T_PROGETTO_91 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_CREDITORIE ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_31
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));


ALTER TABLE PBANDI_T_PROCEDURE_CONCORS ADD CONSTRAINT FK_PBANDI_T_PROGETTO_92 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO);
	
ALTER TABLE PBANDI_T_PROCEDURE_CONCORS ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_32
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));
	
ALTER TABLE PBANDI_T_PROCEDURE_CONCORS ADD (CONSTRAINT FK_PBANDI_D_TIP_PROC_CONCOR_01
	FOREIGN KEY (ID_TIPO_PROCED_CONCORS)  REFERENCES PBANDI_D_TIPO_PROCED_CONCORS (ID_TIPO_PROCED_CONCORS));

ALTER TABLE PBANDI_T_PROCEDURE_CONCORS ADD (CONSTRAINT FK_PBANDI_D_ST_INSIN_CONCOR_01
	FOREIGN KEY (ID_STATO_INSINUA_CONCORS)  REFERENCES PBANDI_D_STATO_INSINUA_CONCORS (ID_STATO_INSINUA_CONCORS));

ALTER TABLE PBANDI_T_PROCEDURE_CONCORS ADD (CONSTRAINT FK_PBANDI_D_ST_PROCE_CONCOR_01
	FOREIGN KEY (ID_STATO_PROCED_CONCORS)  REFERENCES PBANDI_D_STATO_PROCED_CONCORS (ID_STATO_PROCED_CONCORS));

ALTER TABLE PBANDI_R_AGEV_CREDITI_GARANZIE ADD (CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_33
	FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE)  REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE));

ALTER TABLE PBANDI_R_AGEV_CREDITI_GARANZIE ADD (CONSTRAINT FK_PBANDI_C_ENTITA_16
	FOREIGN KEY (ID_ENTITA)  REFERENCES PBANDI_C_ENTITA (ID_ENTITA));


ALTER TABLE PBANDI_T_SOGG_STATO_AZIENDA ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_298 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_299 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
    
ALTER TABLE PBANDI_R_SOGG_PROG_STA_CRED_FP ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_300 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_301 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
 
ALTER TABLE PBANDI_T_SOGGETTO_RATING ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_302 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_303 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
    
ALTER TABLE PBANDI_T_SOGGETTO_CLA_RISCHIO ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_304 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_305 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

ALTER TABLE PBANDI_T_REVOCA_BANCARIA ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_306 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_307 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

ALTER TABLE PBANDI_T_AZIONE_RECUP_BANCA ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_308 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_309 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
    
ALTER TABLE PBANDI_T_ABBATTIM_GARANZIE ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_312 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_313 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

ALTER TABLE PBANDI_T_ESCUSS_CONFIDI ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_314 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_315 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

ALTER TABLE PBANDI_T_PIANO_RIENTRO ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_316 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_317 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);    

ALTER TABLE PBANDI_T_SALDO_STRALCIO ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_318 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_319 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);  

ALTER TABLE PBANDI_T_PASSAGGIO_PERDITA ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_320 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_321 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);    

ALTER TABLE PBANDI_T_LIBERAZ_BANCA ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_322 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_323 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
    
ALTER TABLE PBANDI_T_MESSA_IN_MORA ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_324 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_325 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

ALTER TABLE PBANDI_T_ANNOTAZ_GENERALI ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_326 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_327 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);


ALTER TABLE PBANDI_T_ISCRIZIONE_RUOLO ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_330 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_331 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

ALTER TABLE PBANDI_T_SEGNALAZ_CORTE_CONTI ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_332 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_333 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
	
ALTER TABLE PBANDI_T_CESSIONE_QUOTA_FP ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_334 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_335 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

ALTER TABLE PBANDI_T_TRANSAZIONI_BANCA ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_336 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_337 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
	
ALTER TABLE PBANDI_T_VARIAZ_ST_CREDITO ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_378
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_379
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

ALTER TABLE PBANDI_T_ALLUNG_PIANO_AMMORT ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_410
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_411
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

ALTER TABLE PBANDI_T_CREDITORIE ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_412
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_413
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
	

ALTER TABLE PBANDI_T_PROCEDURE_CONCORS ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_414
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_415
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

ALTER TABLE PBANDI.PBANDI_T_LIBERAZ_GARANTE ADD (
  CONSTRAINT FK_PBANDI_T_UTENTE_310 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_311 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
  
-- Vista PBANDI_V_NOTE_MONITORAGGIO
CREATE OR REPLACE VIEW PBANDI_V_NOTE_MONITORAGGIO AS
SELECT ID_PROGETTO,
       ID_MODALITA_AGEVOLAZIONE,
       NOME_ENTITA_PROVENIENZA,
	   NOTE,
	   DT_INIZIO_VALIDITA,
	   ID_UTENTE_INS,
	   ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
FROM
	(
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Revoca bancaria' AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   DT_INIZIO_VALIDITA,
		   DT_FINE_VALIDITA,
		   ID_UTENTE_INS,
		   ID_UTENTE_AGG,
		   DT_INSERIMENTO,
		   DT_AGGIORNAMENTO
	  FROM PBANDI_T_REVOCA_BANCARIA
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Liberazione garante' AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   DT_INIZIO_VALIDITA,
		   DT_FINE_VALIDITA,
		   ID_UTENTE_INS,
		   ID_UTENTE_AGG,
		   DT_INSERIMENTO,
		   DT_AGGIORNAMENTO
	  FROM PBANDI_T_LIBERAZ_GARANTE  
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Abbattimento garanzie '||b.DESC_BREVE_ATT_MONIT_CRED AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_ABBATTIM_GARANZIE a
	  LEFT JOIN PBANDI_D_ATTIVITA_MONIT_CRED b on b.id_attivita_monit_cred = a.id_attivita_garanzie
	  LEFT JOIN PBANDI_D_TIPO_MONIT_CRED c on c.id_tipo_monit_cred = b.id_tipo_monit_cred and DESC_BREVE_TIPO_MONIT_CRED = 'tipo garanzia'
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Recupero banca '||b.DESC_BREVE_ATT_MONIT_CRED AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_AZIONE_RECUP_BANCA a
	  LEFT JOIN PBANDI_D_ATTIVITA_MONIT_CRED b on b.id_attivita_monit_cred = a.id_attivita_azione
	  LEFT JOIN PBANDI_D_TIPO_MONIT_CRED c on c.id_tipo_monit_cred = b.id_tipo_monit_cred and DESC_BREVE_TIPO_MONIT_CRED = 'tipo azione'
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Escussione Confidi' AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_ESCUSS_CONFIDI a
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Piano di rientro '||b.DESC_BREVE_ATT_MONIT_CRED AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_PIANO_RIENTRO a  -- ID_ATTIVITA_RECUPERO
	  LEFT JOIN PBANDI_D_ATTIVITA_MONIT_CRED b on b.id_attivita_monit_cred = a.id_attivita_recupero
	  LEFT JOIN PBANDI_D_TIPO_MONIT_CRED c on c.id_tipo_monit_cred = b.id_tipo_monit_cred and DESC_BREVE_TIPO_MONIT_CRED = 'tipo recupero'
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Saldo e stralcio '||b.DESC_BREVE_ATT_MONIT_CRED AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_SALDO_STRALCIO a --ID_ATTIVITA_SALDO_STRALCIO
	  LEFT JOIN PBANDI_D_ATTIVITA_MONIT_CRED b on b.id_attivita_monit_cred = a.id_attivita_saldo_stralcio
	  LEFT JOIN PBANDI_D_TIPO_MONIT_CRED c on c.id_tipo_monit_cred = b.id_tipo_monit_cred and DESC_BREVE_TIPO_MONIT_CRED = 'tipo saldo stralcio'
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Passaggio a perdita' AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_PASSAGGIO_PERDITA a
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Liberazione banca' AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_LIBERAZ_BANCA a
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Messa in mora '||b.DESC_BREVE_ATT_MONIT_CRED AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_MESSA_IN_MORA a --ID_ATTIVITA_MORA
	  LEFT JOIN PBANDI_D_ATTIVITA_MONIT_CRED b on b.id_attivita_monit_cred = a.id_attivita_mora
	  LEFT JOIN PBANDI_D_TIPO_MONIT_CRED c on c.id_tipo_monit_cred = b.id_tipo_monit_cred and DESC_BREVE_TIPO_MONIT_CRED = 'tipo mora'
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   --'Annotazioni generali' AS NOME_ENTITA_PROVENIENZA,
		   'Note generali' AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_ANNOTAZ_GENERALI a
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Iscrizione a ruolo' AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_ISCRIZIONE_RUOLO a
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   --'Segnalazione corte conti' AS NOME_ENTITA_PROVENIENZA,
		   'Segnalazione Corte dei Conti' AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_SEGNALAZ_CORTE_CONTI a
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Cessione quota Finpiemonte' AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_CESSIONE_QUOTA_FP a
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   --'Transazione banca' AS NOME_ENTITA_PROVENIENZA,
		   'Transazioni' AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_TRANSAZIONI_BANCA a
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Allungamento piano ammortamento' AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_ALLUNG_PIANO_AMMORT a
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Creditoria' AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_CREDITORIE a
	UNION ALL
	SELECT ID_PROGETTO,
	       ID_MODALITA_AGEVOLAZIONE,
		   'Procedure concorsuali' AS NOME_ENTITA_PROVENIENZA,
		   NOTE,
		   a.DT_INIZIO_VALIDITA,
		   a.DT_FINE_VALIDITA,
		   a.ID_UTENTE_INS,
		   a.ID_UTENTE_AGG,
		   a.DT_INSERIMENTO,
		   a.DT_AGGIORNAMENTO
	  FROM PBANDI_T_PROCEDURE_CONCORS a
	)
 WHERE DT_FINE_VALIDITA IS NULL
   AND NOTE IS NOT NULL
ORDER BY 1,4 DESC;   

 


 -- Configurazione
 
Insert into PBANDI_T_UTENTE
   (ID_UTENTE, CODICE_UTENTE, ID_TIPO_ACCESSO, DT_INSERIMENTO)
 Values
   (-13, 'AMMICO', 5, TO_DATE('02/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_TIPO_MONIT_CRED
Insert into PBANDI_D_TIPO_MONIT_CRED
   (ID_TIPO_MONIT_CRED, DESC_BREVE_TIPO_MONIT_CRED, DESC_TIPO_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (1, 'tipo azione', 'tipo azione', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_MONIT_CRED
   (ID_TIPO_MONIT_CRED, DESC_BREVE_TIPO_MONIT_CRED, DESC_TIPO_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (2, 'tipo garanzia', 'tipo garanzia', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_MONIT_CRED
   (ID_TIPO_MONIT_CRED, DESC_BREVE_TIPO_MONIT_CRED, DESC_TIPO_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (3, 'tipo garanzia confidi', 'tipo garanzia confidi', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_MONIT_CRED
   (ID_TIPO_MONIT_CRED, DESC_BREVE_TIPO_MONIT_CRED, DESC_TIPO_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (4, 'tipo esito', 'tipo esito', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_MONIT_CRED
   (ID_TIPO_MONIT_CRED, DESC_BREVE_TIPO_MONIT_CRED, DESC_TIPO_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (5, 'tipo recupero', 'tipo recupero', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_MONIT_CRED
   (ID_TIPO_MONIT_CRED, DESC_BREVE_TIPO_MONIT_CRED, DESC_TIPO_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (6, 'tipo liberazione', 'tipo liberazione', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_MONIT_CRED
   (ID_TIPO_MONIT_CRED, DESC_BREVE_TIPO_MONIT_CRED, DESC_TIPO_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (7, 'tipo mora', 'tipo mora', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_MONIT_CRED
   (ID_TIPO_MONIT_CRED, DESC_BREVE_TIPO_MONIT_CRED, DESC_TIPO_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (8, 'tipo recupero mora', 'tipo recupero mora', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_MONIT_CRED
   (ID_TIPO_MONIT_CRED, DESC_BREVE_TIPO_MONIT_CRED, DESC_TIPO_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (9, 'tipo banca beneficiario', 'tipo banca beneficiario', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_MONIT_CRED
   (ID_TIPO_MONIT_CRED, DESC_BREVE_TIPO_MONIT_CRED, DESC_TIPO_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (10, 'tipo saldo stralcio', 'tipo saldo stralcio', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_ATTIVITA_MONIT_CRED
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (1, 1, 'Decreto ingiuntivo', 'Decreto ingiuntivo', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (2, 1, 'Insinuazione fallimentare', 'Insinuazione fallimentare', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (3, 1, 'Pignoramento immobiliare', 'Pignoramento immobiliare', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (4, 1, 'Ristrutturazione art. 182 bis', 'Ristrutturazione art. 182 bis', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (5, 1, 'Ristrutturazione art. ex 67', 'Ristrutturazione art. ex 67', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (6, 1, 'Altro', 'Altro', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (7, 2, 'Pegno', 'Pegno', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (8, 2, 'Fidejussione personale', 'Fidejussione personale', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (9, 2, 'Ipoteca', 'Ipoteca', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (10, 2, 'Altro', 'Altro', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (11, 3, 'Garanzia sussidiaria avvio atti', 'Garanzia sussidiaria avvio atti', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (12, 3, 'Garanzia sussidiaria fine atti', 'Garanzia sussidiaria fine atti', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (13, 3, 'Garanzia a prima richiesta', 'Garanzia a prima richiesta', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (14, 4, 'accolto', 'accolto', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (15, 4, 'respinto', 'respinto', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (16, 4, 'decaduto', 'decaduto', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (17, 4, 'sospeso', 'sospeso', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (18, 5, 'adempiuto', 'adempiuto', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (19, 5, 'adempiuto in parte', 'adempiuto in parte', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (20, 5, 'non adempiuto', 'non adempiuto', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (21, 6, 'Liberazione banca mandataria', 'Liberazione banca mandataria', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (22, 6, 'Revoca mandato banca mandataria', 'Revoca mandato banca mandataria', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (23, 7, 'Fin. dopo liberazione banca', 'Fin. dopo liberazione banca', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (24, 7, 'Fin. dopo liberazione banca con revoca', 'Fin. dopo liberazione banca con revoca', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (25, 7, 'Fin. ante liberazione banca con revoca', 'Fin. ante liberazione banca con revoca', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (26, 7, 'contributo', 'contributo', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (27, 7, 'garanzia', 'garanzia', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (28, 8, 'Adempiuto', 'Adempiuto', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (29, 8, 'Adempiuto in parte', 'Adempiuto in parte', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (30, 8, 'Non adempiuto', 'Non adempiuto', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (31, 8, 'Rateizzato', 'Rateizzato', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (32, 9, 'Cessione soggetto terzo', 'Cessione soggetto terzo', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (33, 9, 'Altro', 'Altro', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (34, 10, 'Unica soluzione', 'Unica soluzione', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_MONIT_CRED
   (ID_ATTIVITA_MONIT_CRED, ID_TIPO_MONIT_CRED, DESC_BREVE_ATT_MONIT_CRED, DESC_ATT_MONIT_CRED, DT_INIZIO_VALIDITA)
 Values
   (35, 10, 'Rateizzato', 'Rateizzato', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_CLASSE_RISCHIO
Insert into PBANDI_D_CLASSE_RISCHIO
   (ID_CLASSE_RISCHIO, DESC_BREVE_CLASSE_RISCHIO, DESC_CLASSE_RISCHIO, DT_INIZIO_VALIDITA)
 Values
   (0, 'Non calcolabile', 'Non calcolabile', TO_DATE('01/11/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_CLASSE_RISCHIO
   (ID_CLASSE_RISCHIO, DESC_BREVE_CLASSE_RISCHIO, DESC_CLASSE_RISCHIO, DT_INIZIO_VALIDITA)
 Values
   (1, 'Ampia solv', 'Ampia solvibilità', TO_DATE('01/11/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_CLASSE_RISCHIO
   (ID_CLASSE_RISCHIO, DESC_BREVE_CLASSE_RISCHIO, DESC_CLASSE_RISCHIO, DT_INIZIO_VALIDITA)
 Values
   (2, 'Solv moderata', 'Solvibilità moderata', TO_DATE('01/11/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_CLASSE_RISCHIO
   (ID_CLASSE_RISCHIO, DESC_BREVE_CLASSE_RISCHIO, DESC_CLASSE_RISCHIO, DT_INIZIO_VALIDITA)
 Values
   (3, 'Solv bassa', 'Solvibilità Bassa', TO_DATE('01/11/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_CLASSE_RISCHIO
   (ID_CLASSE_RISCHIO, DESC_BREVE_CLASSE_RISCHIO, DESC_CLASSE_RISCHIO, DT_INIZIO_VALIDITA)
 Values
   (4, 'Richio elevato', 'Rischio solvibilità elevato', TO_DATE('01/11/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_PROVIDER
Insert into PBANDI_D_PROVIDER
   (ID_PROVIDER, DESC_PROVIDER, DT_INIZIO_VALIDITA)
 Values
   (1, 'Innolva', TO_DATE('01/11/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_RATING
Insert into PBANDI_D_RATING
   (ID_RATING, CODICE_RATING, DESC_BREVE_RATING, DESC_RATING, DT_INIZIO_VALIDITA, ID_PROVIDER)
 Values
   (1, 'AA', 'Elevata', 'Elevata', TO_DATE('01/11/2021 09:00:00', 'MM/DD/YYYY HH24:MI:SS'), 1);
Insert into PBANDI_D_RATING
   (ID_RATING, CODICE_RATING, DESC_BREVE_RATING, DESC_RATING, DT_INIZIO_VALIDITA, ID_PROVIDER)
 Values
   (2, 'A', 'Buona', 'Buona', TO_DATE('01/11/2021 09:01:00', 'MM/DD/YYYY HH24:MI:SS'), 1);
Insert into PBANDI_D_RATING
   (ID_RATING, CODICE_RATING, DESC_BREVE_RATING, DESC_RATING, DT_INIZIO_VALIDITA, ID_PROVIDER)
 Values
   (3, 'BBB', 'Sufficiente ', 'Sufficiente ', TO_DATE('01/11/2021 09:02:00', 'MM/DD/YYYY HH24:MI:SS'), 1);
Insert into PBANDI_D_RATING
   (ID_RATING, CODICE_RATING, DESC_BREVE_RATING, DESC_RATING, DT_INIZIO_VALIDITA, ID_PROVIDER)
 Values
   (4, 'BB', 'Contenuta', 'Contenuta', TO_DATE('01/11/2021 09:03:00', 'MM/DD/YYYY HH24:MI:SS'), 1);
Insert into PBANDI_D_RATING
   (ID_RATING, CODICE_RATING, DESC_BREVE_RATING, DESC_RATING, DT_INIZIO_VALIDITA, ID_PROVIDER)
 Values
   (5, 'B', 'Non sufficiente', 'Non sufficiente', TO_DATE('01/11/2021 09:04:00', 'MM/DD/YYYY HH24:MI:SS'), 1);
Insert into PBANDI_D_RATING
   (ID_RATING, CODICE_RATING, DESC_BREVE_RATING, DESC_RATING, DT_INIZIO_VALIDITA, ID_PROVIDER)
 Values
   (6, 'CCC', 'Scarsa ', 'Scarsa ', TO_DATE('01/11/2021 09:05:00', 'MM/DD/YYYY HH24:MI:SS'), 1);
Insert into PBANDI_D_RATING
   (ID_RATING, CODICE_RATING, DESC_BREVE_RATING, DESC_RATING, DT_INIZIO_VALIDITA, ID_PROVIDER)
 Values
   (7, 'CC', 'Critica', 'Critica ', TO_DATE('01/11/2021 09:06:00', 'MM/DD/YYYY HH24:MI:SS'), 1);
Insert into PBANDI_D_RATING
   (ID_RATING, CODICE_RATING, DESC_BREVE_RATING, DESC_RATING, DT_INIZIO_VALIDITA, ID_PROVIDER)
 Values
   (8, 'C', 'Nulla', 'Nulla', TO_DATE('01/11/2021 09:07:00', 'MM/DD/YYYY HH24:MI:SS'), 1);
insert into PBANDI_D_RATING
   (ID_RATING, CODICE_RATING, DESC_BREVE_RATING, DESC_RATING, DT_INIZIO_VALIDITA, ID_PROVIDER)
 Values
   (9, 'ND', 'nd finpiemonte', 'nd finpiemonte', TO_DATE('01/17/2023 13:50:00', 'MM/DD/YYYY HH24:MI:SS'), 1);
COMMIT;

--PBANDI_D_STATO_AZIENDA
Insert into PBANDI_D_STATO_AZIENDA
   (ID_STATO_AZIENDA, DESC_BREVE_STATO_AZIENDA, DESC_STATO_AZIENDA, DT_INIZIO_VALIDITA)
 Values
   (0, 'Finpiemonte', 'ND', TO_DATE('01/17/2023 12:52:54', 'MM/DD/YYYY HH24:MI:SS'));

Insert into PBANDI_D_STATO_AZIENDA
   (ID_STATO_AZIENDA, DESC_BREVE_STATO_AZIENDA, DESC_STATO_AZIENDA, DT_INIZIO_VALIDITA)
 Values
   (1, 'Attivo', 'Attivo', TO_DATE('01/01/2021 09:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_AZIENDA
   (ID_STATO_AZIENDA, DESC_BREVE_STATO_AZIENDA, DESC_STATO_AZIENDA, DT_INIZIO_VALIDITA)
 Values
   (2, 'Fallimento', 'Fallimento', TO_DATE('01/01/2021 09:01:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_AZIENDA
   (ID_STATO_AZIENDA, DESC_BREVE_STATO_AZIENDA, DESC_STATO_AZIENDA, DT_INIZIO_VALIDITA)
 Values
   (3, 'Scioglim Liquidaz', 'Scioglimento e Liquidazione', TO_DATE('01/01/2021 09:05:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_AZIENDA
   (ID_STATO_AZIENDA, DESC_BREVE_STATO_AZIENDA, DESC_STATO_AZIENDA, DT_INIZIO_VALIDITA)
 Values
   (4, 'Concordato', 'Concordato preventivo', TO_DATE('01/01/2021 09:15:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_AZIENDA
   (ID_STATO_AZIENDA, DESC_BREVE_STATO_AZIENDA, DESC_STATO_AZIENDA, DT_INIZIO_VALIDITA)
 Values
   (5, 'Amm straordinaria', 'Ammin straordinaria imprese', TO_DATE('01/01/2021 09:25:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_AZIENDA
   (ID_STATO_AZIENDA, DESC_BREVE_STATO_AZIENDA, DESC_STATO_AZIENDA, DT_INIZIO_VALIDITA)
 Values
   (6, 'Liquidaz coatta', 'Liquidaz coatta', TO_DATE('01/01/2021 09:30:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_AZIENDA
   (ID_STATO_AZIENDA, DESC_BREVE_STATO_AZIENDA, DESC_STATO_AZIENDA, DT_INIZIO_VALIDITA)
 Values
   (7, 'Cessata', 'Cessata', TO_DATE('01/01/2021 09:40:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_AZIENDA
   (ID_STATO_AZIENDA, DESC_BREVE_STATO_AZIENDA, DESC_STATO_AZIENDA, DT_INIZIO_VALIDITA)
 Values
   (8, 'Cancellata', 'Cancellata', TO_DATE('01/01/2021 09:41:00', 'MM/DD/YYYY HH24:MI:SS'));

Insert into PBANDI_D_STATO_AZIENDA
   (ID_STATO_AZIENDA, DESC_BREVE_STATO_AZIENDA, DESC_STATO_AZIENDA, DT_INIZIO_VALIDITA)
 Values
   (9, 'Crisi da sovraindeb', 'Crisi da sovraindebitamento L.3/12', TO_DATE('08/04/2022 15:20:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_AZIENDA
   (ID_STATO_AZIENDA, DESC_BREVE_STATO_AZIENDA, DESC_STATO_AZIENDA, DT_INIZIO_VALIDITA)
 Values
   (10, 'Inattiva', 'Inattiva', TO_DATE('08/04/2022 15:20:00', 'MM/DD/YYYY HH24:MI:SS'));

COMMIT;



--PBANDI_D_STATO_PROP_VAR_CRE
Insert into PBANDI_D_STATO_PROP_VAR_CRE
   (ID_STATO_PROP_VAR_CRE, DESC_BREVE_STATO_PROP_VAR_CRE, DESC_STATO_PROP_VAR_CRE, DT_INIZIO_VALIDITA)
 Values
   (1, 'Attivo', 'Attivo', TO_DATE('02/16/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_PROP_VAR_CRE
   (ID_STATO_PROP_VAR_CRE, DESC_BREVE_STATO_PROP_VAR_CRE, DESC_STATO_PROP_VAR_CRE, DT_INIZIO_VALIDITA)
 Values
   (2, 'Da lavorare', 'Da lavorare', TO_DATE('02/16/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_PROP_VAR_CRE
   (ID_STATO_PROP_VAR_CRE, DESC_BREVE_STATO_PROP_VAR_CRE, DESC_STATO_PROP_VAR_CRE, DT_INIZIO_VALIDITA)
 Values
   (3, 'Lavorata', 'Lavorata', TO_DATE('02/16/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_STATO_CREDITO_FP
Insert into PBANDI_D_STATO_CREDITO_FP
   (ID_STATO_CREDITO_FP, DESC_BREVE_STATO_CREDITO_FP, DESC_STATO_CREDITO_FP, DT_INIZIO_VALIDITA)
 Values
   (1, 'In bonis', 'In bonis', TO_DATE('01/01/2021 09:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_CREDITO_FP
   (ID_STATO_CREDITO_FP, DESC_BREVE_STATO_CREDITO_FP, DESC_STATO_CREDITO_FP, DT_INIZIO_VALIDITA)
 Values
   (2, 'Past due', 'Past due', TO_DATE('01/01/2021 09:01:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_CREDITO_FP
   (ID_STATO_CREDITO_FP, DESC_BREVE_STATO_CREDITO_FP, DESC_STATO_CREDITO_FP, DT_INIZIO_VALIDITA)
 Values
   (3, 'UTP', 'Unlikely to pay', TO_DATE('01/01/2021 09:02:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_CREDITO_FP
   (ID_STATO_CREDITO_FP, DESC_BREVE_STATO_CREDITO_FP, DESC_STATO_CREDITO_FP, DT_INIZIO_VALIDITA)
 Values
   (4, 'Sofferenze', 'Sofferenze', TO_DATE('01/01/2021 09:03:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_CREDITO_FP
   (ID_STATO_CREDITO_FP, DESC_BREVE_STATO_CREDITO_FP, DESC_STATO_CREDITO_FP, DT_INIZIO_VALIDITA)
 Values
   (5, 'Bonis non attive', 'Bonis non attive', TO_DATE('01/01/2021 09:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_CREDITO_FP
   (ID_STATO_CREDITO_FP, DESC_BREVE_STATO_CREDITO_FP, DESC_STATO_CREDITO_FP, DT_INIZIO_VALIDITA)
 Values
   (6, 'Warning', 'Warning', TO_DATE('01/01/2021 09:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;


--PBANDI_D_ESITO_ALL_PIANO_AMMOR
Insert into PBANDI_D_ESITO_ALL_PIANO_AMMOR
   (ID_ESITO_ALL_PIANO_AMMOR, DESC_BREVE_ESI_ALL_PIANO_AMMOR, DESC_ESITO_ALL_PIANO_AMMOR, DT_INIZIO_VALIDITA)
 Values
   (1, 'FAV', 'FAVOREVOLE', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ESITO_ALL_PIANO_AMMOR
   (ID_ESITO_ALL_PIANO_AMMOR, DESC_BREVE_ESI_ALL_PIANO_AMMOR, DESC_ESITO_ALL_PIANO_AMMOR, DT_INIZIO_VALIDITA)
 Values
   (2, 'SFAV', 'SFAVOREVOLE', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ESITO_ALL_PIANO_AMMOR
   (ID_ESITO_ALL_PIANO_AMMOR, DESC_BREVE_ESI_ALL_PIANO_AMMOR, DESC_ESITO_ALL_PIANO_AMMOR, DT_INIZIO_VALIDITA)
 Values
   (3, 'SOSP', 'SOSPESO', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ESITO_ALL_PIANO_AMMOR
   (ID_ESITO_ALL_PIANO_AMMOR, DESC_BREVE_ESI_ALL_PIANO_AMMOR, DESC_ESITO_ALL_PIANO_AMMOR, DT_INIZIO_VALIDITA)
 Values
   (4, 'DEC', 'DECADUTO', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ESITO_ALL_PIANO_AMMOR
   (ID_ESITO_ALL_PIANO_AMMOR, DESC_BREVE_ESI_ALL_PIANO_AMMOR, DESC_ESITO_ALL_PIANO_AMMOR, DT_INIZIO_VALIDITA)
 Values
   (5, 'LAV', 'IN LAVORAZIONE', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_TIPO_PROCED_CONCORS
Insert into PBANDI_D_TIPO_PROCED_CONCORS
   (ID_TIPO_PROCED_CONCORS, DESC_BREVE_TIPO_PROCED_CONCORS, DESC_TIPO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (1, 'LIQ_GIU', 'LIQUIDAZIONE GIUDIZIALE', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_PROCED_CONCORS
   (ID_TIPO_PROCED_CONCORS, DESC_BREVE_TIPO_PROCED_CONCORS, DESC_TIPO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (2, 'LIQ_COA_AMM', 'LIQUIDAZIONE COATTA AMMINISTRATIVA', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_PROCED_CONCORS
   (ID_TIPO_PROCED_CONCORS, DESC_BREVE_TIPO_PROCED_CONCORS, DESC_TIPO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (3, 'CONC_PREV', 'CONCORDATO PREVENTIVO', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_PROCED_CONCORS
   (ID_TIPO_PROCED_CONCORS, DESC_BREVE_TIPO_PROCED_CONCORS, DESC_TIPO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (4, 'AMM_STRA', 'AMMINISTRAZIONE STRAORDINARIA', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_PROCED_CONCORS
   (ID_TIPO_PROCED_CONCORS, DESC_BREVE_TIPO_PROCED_CONCORS, DESC_TIPO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (5, 'PROC_RISTR_DEB_CONS', 'PROCEDURA DI RISTRUTTURAZIONE DEI DEBITI DEL CONSUMATORE', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_PROCED_CONCORS
   (ID_TIPO_PROCED_CONCORS, DESC_BREVE_TIPO_PROCED_CONCORS, DESC_TIPO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (6, 'CONC_MIN', 'CONCORDATO MINORE', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_PROCED_CONCORS
   (ID_TIPO_PROCED_CONCORS, DESC_BREVE_TIPO_PROCED_CONCORS, DESC_TIPO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (7, 'LIQ_CONTR', 'LIQUIDAZIONE CONTROLLATA', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_PROCED_CONCORS
   (ID_TIPO_PROCED_CONCORS, DESC_BREVE_TIPO_PROCED_CONCORS, DESC_TIPO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (8, 'ACC_RISTR_DEB', 'ACCORDO DI RISTRUTTURAZIONE DEI DEBITI', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_PROCED_CONCORS
   (ID_TIPO_PROCED_CONCORS, DESC_BREVE_TIPO_PROCED_CONCORS, DESC_TIPO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (9, 'PIA_ATT_RIS', 'PIANO ATTESTATO DI RISANAMENTO', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_PROCED_CONCORS
   (ID_TIPO_PROCED_CONCORS, DESC_BREVE_TIPO_PROCED_CONCORS, DESC_TIPO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (10, 'PIA_RISTR_SOGG_OMO', 'PIANO DI RISTRUTTURAZIONE SOGGETTO A OMOLOGAZIONE', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_PROCED_CONCORS
   (ID_TIPO_PROCED_CONCORS, DESC_BREVE_TIPO_PROCED_CONCORS, DESC_TIPO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (11, 'ESD', 'ESDEBITAZIONE', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_STATO_INSINUA_CONCORS
Insert into PBANDI_D_STATO_INSINUA_CONCORS
   (ID_STATO_INSINUA_CONCORS, DESC_BREVE_STA_INSINUA_CONCORS, DESC_STATO_INSINUA_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (1, 'CI', 'CREDITO INSINUATO', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_INSINUA_CONCORS
   (ID_STATO_INSINUA_CONCORS, DESC_BREVE_STA_INSINUA_CONCORS, DESC_STATO_INSINUA_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (2, 'CA', 'CREDITO AMMESSO', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_INSINUA_CONCORS
   (ID_STATO_INSINUA_CONCORS, DESC_BREVE_STA_INSINUA_CONCORS, DESC_STATO_INSINUA_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (3, 'CNA', 'CREDITO NON AMMESSO', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_STATO_PROCED_CONCORS
Insert into PBANDI_D_STATO_PROCED_CONCORS
   (ID_STATO_PROCED_CONCORS, DESC_BREVE_STA_PROCED_CONCORS, DESC_STATO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (1, 'CCR', 'CHIUSA CON RIPARTI', TO_DATE('04/13/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_PROCED_CONCORS
   (ID_STATO_PROCED_CONCORS, DESC_BREVE_STA_PROCED_CONCORS, DESC_STATO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (2, 'CSR', 'CHIUSA SENZA RIPARTI', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_PROCED_CONCORS
   (ID_STATO_PROCED_CONCORS, DESC_BREVE_STA_PROCED_CONCORS, DESC_STATO_PROCED_CONCORS, DT_INIZIO_VALIDITA)
 Values
   (3, 'IC', 'IN CORSO', TO_DATE('04/13/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_R_AGEV_CREDITI_GARANZIE
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (1, 501, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (1, 502, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (1, 509, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (1, 512, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (1, 515, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (1, 522, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (1, 525, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (1, 720, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (4, 501, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (4, 502, 'S', 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (4, 507, 'S', 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (4, 508, 'S', 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (4, 509, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (4, 512, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (4, 513, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (4, 514, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (4, 515, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (4, 517, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (4, 524, 'S', 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (4, 525, 'S', 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (4, 527, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (4, 720, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (4, 723, 'S', 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 492, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 501, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 502, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 507, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 508, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 509, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 512, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 513, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 514, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 515, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 517, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 522, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 524, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 525, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 527, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 720, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 722, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (5, 723, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (6, 501, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (6, 502, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (6, 509, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (6, 512, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (6, 515, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (6, 522, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (6, 525, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (6, 720, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 492, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 501, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 502, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 507, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 508, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 509, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 512, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 513, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 514, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 515, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 517, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 522, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 524, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 525, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 527, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 720, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 722, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (9, 723, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (10, 501, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (10, 502, 'S', 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (10, 507, 'S', 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (10, 508, 'S', 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (10, 509, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (10, 512, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (10, 513, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (10, 514, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (10, 515, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (10, 517, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (10, 524, 'S', 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (10, 525, 'S', 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (10, 527, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, DT_INIZIO_VALIDITA)
 Values
   (10, 720, 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_AGEV_CREDITI_GARANZIE
   (ID_MODALITA_AGEVOLAZIONE, ID_ENTITA, FLAG_AREA_CREDITI, FLAG_GARANZIE, DT_INIZIO_VALIDITA)
 Values
   (10, 723, 'S', 'S', TO_DATE('04/19/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;



/* ---------------------------------------------------------------------- */
/* Script generated with: DeZign for Databases v6.2.1                     */
/* Target DBMS:           Oracle 11g                                      */
/* Project file:          PBAN_OPE_ERW_Modello_fisico_Anage.dez           */
/* Project name:                                                          */
/* Author:                                                                */
/* Script type:           Database creation script                        */
/* Created on:            2021-12-10 15:15                                */
/* ---------------------------------------------------------------------- */

/* ---------------------------------------------------------------------- */
/* Sequences                                                              */
/* ---------------------------------------------------------------------- */


/*******************************************/
/*   ESEGUIRE DOPO SCRIPT PER AREA CREDITI */
/*******************************************/
--PBANDI_T_ENTE_GIUR_SEZI
CREATE SEQUENCE SEQ_PBANDI_T_ENTE_GIUR_SEZI
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;

--PBANDI_T_SOGG_DOMANDA_BLOCCO	
CREATE SEQUENCE SEQ_PBANDI_T_SOGG_DOM_BLOCCO
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;

--PBANDI_T_SOGGETTO_DURC
CREATE SEQUENCE SEQ_PBANDI_T_SOGGETTO_DURC
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;

--PBANDI_T_SOGGETTO_ANTIMAFIA
CREATE SEQUENCE SEQ_PBANDI_T_SOGG_ANTIMAFIA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;

--PBANDI_T_SOGGETTO_DSAN	
CREATE SEQUENCE SEQ_PBANDI_T_SOGGETTO_DSAN
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;

--PBANDI_T_RICHIESTA
CREATE SEQUENCE SEQ_PBANDI_T_RICHIESTA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;

--PBANDI_T_TRACCIATURA_RICH	
CREATE SEQUENCE SEQ_PBANDI_T_TRACC_RICHIESTA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;
	
--PBANDI_T_CALC_DIM_IMPRESA
CREATE SEQUENCE SEQ_PBANDI_T_CALC_DIM_IMPRESA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;
/* ---------------------------------------------------------------------- */
/* Tables                                                                 */
/* ---------------------------------------------------------------------- */

/* ---------------------------------------------------------------------- */
/* ALTER table "PBANDI_T_RECAPITI"     (Già creta)                                         */
/* ---------------------------------------------------------------------- */

--ALTER TABLE PBANDI_T_RECAPITI 
--    ADD  PEC VARCHAR2(128);


/* ---------------------------------------------------------------------- */
/* ALTER table "PBANDI_T_ENTE_GIURIDICO"                                        */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_T_ENTE_GIURIDICO 
    ADD ID_STATO_ATTIVITA NUMBER(3);
	
ALTER TABLE PBANDI_T_ENTE_GIURIDICO 
    ADD DT_VALUTAZIONE_ESITO DATE;
	
ALTER TABLE PBANDI_T_ENTE_GIURIDICO 
    ADD PERIODO_SCADENZA_ESERCIZIO VARCHAR2(40);
	
ALTER TABLE PBANDI_T_ENTE_GIURIDICO 
    ADD DT_INIZIO_ATTIVITA_ESITO DATE;

ALTER TABLE PBANDI_T_ENTE_GIURIDICO 
    ADD FLAG_RATING_LEGALITA VARCHAR2(1);

ALTER TABLE PBANDI_T_ENTE_GIURIDICO ADD CONSTRAINT CK_PBANDI_T_ENTE_GIURIDICO_01 
    CHECK (FLAG_RATING_LEGALITA in ('S'));

CREATE INDEX IE_PBANDI_T_ENTE_GIURIDICO_1 ON PBANDI_T_ENTE_GIURIDICO (ID_STATO_ATTIVITA) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_T_SOGGETTO
    ADD NDG VARCHAR2(10);

CREATE INDEX IE2_PBANDI_T_SOGGETTO ON PBANDI_T_SOGGETTO (NDG) TABLESPACE PBANDI_IDX;
COMMENT ON COLUMN PBANDI_T_SOGGETTO.NDG IS 'Numero Direzione Generale';

/* ---------------------------------------------------------------------- */
/* ALTER table "PBANDI_D_TIPO_SOGG_CORRELATO"                                        */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_D_TIPO_SOGG_CORRELATO
   ADD FLAG_INDIPENDENTE VARCHAR2(1);
   
ALTER TABLE PBANDI_D_TIPO_SOGG_CORRELATO
   ADD ID_TIPO_SOGGETTO NUMBER(3);
   
ALTER TABLE PBANDI_D_TIPO_SOGG_CORRELATO ADD CONSTRAINT CC_PBANDI_D_TIPO_SOGG_CORR_02 
    CHECK (flag_indipendente in ('S','N'));

CREATE INDEX IDX_PBANDI_D_TIPO_SOGG_CORR_1 ON PBANDI_D_TIPO_SOGG_CORRELATO (ID_TIPO_SOGGETTO) TABLESPACE PBANDI_IDX;

COMMENT ON COLUMN PBANDI_D_TIPO_SOGG_CORRELATO.FLAG_INDIPENDENTE IS 'S=Indipendente (tutte le domande) N=Dipende dalla domanda/progetto';
   
/* ---------------------------------------------------------------------- */
/* ALTER table "PBANDI_R_SOGGETTO_PROGETTO "                                        */
/* ---------------------------------------------------------------------- */
ALTER TABLE PBANDI_R_SOGGETTO_PROGETTO
   ADD FLAG_IRES VARCHAR2(1);
COMMENT ON COLUMN PBANDI_R_SOGGETTO_PROGETTO.FLAG_IRES IS 'S=Soggetto a IRES';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_SEZIONE_SPECIALE"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_SEZIONE_SPECIALE (
    id_sezione_speciale NUMBER(3) NOT NULL,
    desc_sezione_speciale VARCHAR2(255) NOT NULL,
    desc_breve_sezione_speciale VARCHAR2(20),
    dt_inizio_validita DATE NOT NULL,
    dt_fine_validita DATE,
    CONSTRAINT PK_PBANDI_D_SEZIONE_SPECIALE PRIMARY KEY (id_sezione_speciale) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_ENTE_GIUR_SEZI"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_ENTE_GIUR_SEZI (
    id_ente_sezione NUMBER(3) NOT NULL,
    id_soggetto NUMBER(8) NOT NULL,
    id_sezione_speciale NUMBER(3),
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    dt_inizio_validita DATE NOT NULL,
    dt_fine_validita DATE,
    CONSTRAINT PK_PBANDI_T_ENTE_GIUR_SEZI PRIMARY KEY (id_ente_sezione) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_ENTE_GIUR_SEZI_1 ON PBANDI_T_ENTE_GIUR_SEZI (id_soggetto) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_ENTE_GIUR_SEZI_2 ON PBANDI_T_ENTE_GIUR_SEZI (id_sezione_speciale) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_TIPO_RICHIESTA"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_TIPO_RICHIESTA (
    id_tipo_richiesta NUMBER(3) NOT NULL,
    desc_tipo_richiesta VARCHAR2(255) NOT NULL,
    desc_breve_tipo_richiesta VARCHAR2(20),
    dt_inizio_validta DATE NOT NULL,
    dt_fine_validita DATE,
    CONSTRAINT PK_PBANDI_D_TIPO_RICHIESTA PRIMARY KEY (id_tipo_richiesta) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_RICHIESTA"                                         */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_RICHIESTA (
    id_richiesta NUMBER(8) NOT NULL,
    id_domanda NUMBER(8) NOT NULL,
    id_tipo_richiesta NUMBER(3) NOT NULL,
    id_stato_richiesta NUMBER(3) NOT NULL,
    id_utente_richiedente NUMBER(8) NOT NULL,
    dt_invio_richiesta DATE NOT NULL,
    dt_chiusura_richiesta DATE,
    flag_urgenza VARCHAR2(1),
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    dt_inizio_validita DATE NOT NULL,
    dt_fine_validita DATE,
    CONSTRAINT PK_PBANDI_T_RICHIESTA PRIMARY KEY (id_richiesta) USING INDEX TABLESPACE PBANDI_IDX
);

ALTER TABLE PBANDI_T_RICHIESTA ADD
    CHECK (flag_urgenza IN ('N','S'));

COMMENT ON COLUMN PBANDI_T_RICHIESTA.flag_urgenza IS 'Valori: S/N';

CREATE INDEX IE_PBANDI_T_RICHIESTA_1 ON PBANDI_T_RICHIESTA (id_domanda) TABLESPACE PBANDI_IDX;

CREATE INDEX IDX_PBANDI_T_RICHIESTA_2 ON PBANDI_T_RICHIESTA (id_tipo_richiesta) TABLESPACE PBANDI_IDX;

CREATE INDEX IDX_PBANDI_T_RICHIESTA_3 ON PBANDI_T_RICHIESTA (id_stato_richiesta) TABLESPACE PBANDI_IDX;

CREATE INDEX IDX_PBANDI_T_RICHIESTA_4 ON PBANDI_T_RICHIESTA (id_utente_richiedente) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_ATTIVITA"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_ATTIVITA (
    id_stato_attivita NUMBER(3) NOT NULL,
    desc_stato_attivita VARCHAR2(255) NOT NULL,
    desc_breve_stato_attivita VARCHAR2(20) NOT NULL,
    dt_inizio_validita DATE NOT NULL,
    dt_fine_validita DATE,
    CONSTRAINT PK_PBANDI_D_STATO_ATTIVITA PRIMARY KEY (id_stato_attivita) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_RICHIESTA"                                   */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_RICHIESTA (
    id_stato_richiesta NUMBER(3) NOT NULL,
    desc_stato_richiesta VARCHAR2(255) NOT NULL,
    desc_breve_stato_richiesta VARCHAR2(20) NOT NULL,
    dt_inizio_validita DATE NOT NULL,
    dt_fine_validita DATE,
    CONSTRAINT PK_PBANDI_D_STATO_RICHIESTA PRIMARY KEY (id_stato_richiesta) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_TRACCIATURA_RICH"                             */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_TRACCIATURA_RICH (
    id_tracciatura_rich NUMBER(8) NOT NULL,
    id_richiesta NUMBER(8) NOT NULL,
    id_tipo_comunicazione NUMBER(3),
    destinatario_mittente VARCHAR2(255),
    dt_comunicazione_esterna DATE,
    numero_protocollo VARCHAR2(20),
    motivazione VARCHAR2(255),
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    dt_inizio_validita DATE NOT NULL,
    dt_fine_validita DATE,
    CONSTRAINT PK_PBANDI_T_TRACCIATURA_RICH PRIMARY KEY (id_tracciatura_rich) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_TRACC_RICHIESTA_1 ON PBANDI_T_TRACCIATURA_RICH (id_richiesta) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_TRACC_RICHIESTA_2 ON PBANDI_T_TRACCIATURA_RICH (id_tipo_comunicazione) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_TIPO_COMUNICAZIONE"                                */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_TIPO_COMUNICAZIONE (
    id_tipo_comunicazione NUMBER(3) NOT NULL,
    desc_tipo_comunicazione VARCHAR2(255) NOT NULL,
    desc_breve_tipo_comunicazione VARCHAR2(40) NOT NULL,
    dt_inizio_validita DATE NOT NULL,
    dt_fine_validita DATE,
    CONSTRAINT PK_PBANDI_D_TIPO_COMUNICAZIONE PRIMARY KEY (id_tipo_comunicazione) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_SOGGETTO_DURC"                                     */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_SOGGETTO_DURC (
    id_soggetto_durc NUMBER(8) NOT NULL,
    id_soggetto NUMBER(8) NOT NULL,
    id_tipo_esito_durc NUMBER(3),
    dt_emissione_durc DATE NOT NULL,
    dt_scadenza DATE,
    num_protocollo_inps VARCHAR2(20),
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    dt_inizio_validita DATE NOT NULL,
    dt_fine_validita DATE,
    CONSTRAINT PK_PBANDI_T_SOGGETTO_DURC PRIMARY KEY (id_soggetto_durc) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_SOGGETTO_DURC_1 ON PBANDI_T_SOGGETTO_DURC (id_soggetto) TABLESPACE PBANDI_IDX;

CREATE INDEX IDX_PBANDI_T_SOGGETTO_DURC_2 ON PBANDI_T_SOGGETTO_DURC (id_tipo_esito_durc) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_TIPO_ESITO_RICHIESTE"                              */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_TIPO_ESITO_RICHIESTE (
    id_tipo_esito_richieste NUMBER(3) NOT NULL,
    desc_esito_richieste VARCHAR2(255),
    desc_breve_esito_richieste VARCHAR2(20),
    dt_inizio_validita DATE NOT NULL,
    dt_fine_validita DATE,
    CONSTRAINT PK_PBANDI_D_TIPO_ESITO_RICH PRIMARY KEY (id_tipo_esito_richieste) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_SOGGETTO_DSAN"                                     */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_SOGGETTO_DSAN (
    id_soggetto_dsan NUMBER(8) NOT NULL,
    id_domanda NUMBER(8) NOT NULL,
    --id_esito_dsan NUMBER(3),
    dt_emissione_dsan DATE NOT NULL,
    dt_scadenza DATE NOT NULL,
    --num_protocollo VARCHAR2(20),
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    dt_inizio_validita DATE NOT NULL,
    dt_fine_validita DATE,
    CONSTRAINT PK_PBANDI_T_SOGGETTO_DSAN PRIMARY KEY (id_soggetto_dsan) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_SOGGETTO_DSAN_1 ON PBANDI_T_SOGGETTO_DSAN (id_domanda) TABLESPACE PBANDI_IDX;

--CREATE INDEX IE_PBANDI_T_SOGGETTO_DSAN_2 ON PBANDI_T_SOGGETTO_DSAN (id_esito_dsan) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_SOGGETTO_ANTIMAFIA"                                */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_SOGGETTO_ANTIMAFIA (
    id_soggetto_antimafia NUMBER(8) NOT NULL,
    id_domanda NUMBER(8) NOT NULL,
    id_tipo_esito_antimafia NUMBER(3),
    dt_ricezione_bdna DATE NOT NULL,
    numer_protocollo_ricevuta VARCHAR2(50) NOT NULL,
    --numer_protocollo_ricevuta VARCHAR2(20) NOT NULL,
    dt_emissione DATE,
   -- esito_liberatoria_antimafia VARCHAR2(255),
    dt_scadenza_antimafia DATE,
    num_protocollo_prefettura VARCHAR2(50),
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    dt_inizio_validita DATE NOT NULL,
    dt_fine_validita DATE,
    CONSTRAINT PK_PBANDI_T_SOGGETTO_ANTIMAFIA PRIMARY KEY (id_soggetto_antimafia) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_SOGG_ANTI_MAF_1 ON PBANDI_T_SOGGETTO_ANTIMAFIA (id_domanda) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_SOGG_ANTI_MAF_2 ON PBANDI_T_SOGGETTO_ANTIMAFIA (id_tipo_esito_antimafia) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_CAUSALE_BLOCCO"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_CAUSALE_BLOCCO (
    id_causale_blocco NUMBER(3) NOT NULL,
    desc_causale_blocco VARCHAR2(255) NOT NULL,
    desc_breve_causale_blocco VARCHAR2(20) NOT NULL,
	flag_revoca  VARCHAR2(1),
	flag_blocco_anagrafico VARCHAR2(1) NOT NULL,
    desc_macroarea VARCHAR2(40) NOT NULL,
    ID_STATO_AZIENDA NUMBER(3),
    dt_inizio_validita DATE NOT NULL,
    dt_fine_validita DATE,
	FLAG_EROGAZIONE VARCHAR2(1),
    CONSTRAINT PK_PBANDI_D_CAUSALE_BLOCCO PRIMARY KEY (id_causale_blocco) USING INDEX TABLESPACE PBANDI_IDX
);

ALTER TABLE PBANDI_D_CAUSALE_BLOCCO ADD CONSTRAINT CK_PBANDI_D_CAUSALE_BLOCCO_01 
    CHECK (flag_revoca in ('S'));

ALTER TABLE PBANDI_D_CAUSALE_BLOCCO ADD CONSTRAINT CK_PBANDI_D_CAUSALE_BLOCCO_02 
    CHECK (flag_blocco_anagrafico in ('S', 'N'));

alter table PBANDI_D_CAUSALE_BLOCCO add constraint CHK_PBANDI_D_CAUSALE_BLOCCO   check (FLAG_EROGAZIONE IN ('S', 'N'));

COMMENT ON COLUMN PBANDI_D_CAUSALE_BLOCCO.flag_blocco_anagrafico IS 'N=Blocco singola domanda, S=Blocco del soggetto';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_SOGG_DOMANDA_BLOCCO"                               */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_SOGG_DOMANDA_BLOCCO (
    id_soggetto_domanda_blocco NUMBER(8) NOT NULL,
    progr_soggetto_domanda NUMBER(8),
    id_causale_blocco NUMBER(3),
    dt_inserimento_blocco DATE,
    dt_inserimento_sblocco DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    dt_inizio_validita DATE NOT NULL,
    dt_fine_validita DATE,
    CONSTRAINT PK_PBANDI_T_SOGG_DOMANDA_BLOC PRIMARY KEY (id_soggetto_domanda_blocco) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_SOGG_DOM_BLOC_1 ON PBANDI_T_SOGG_DOMANDA_BLOCCO (progr_soggetto_domanda) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_SOGG_DOM_BLOC_2 ON PBANDI_T_SOGG_DOMANDA_BLOCCO (id_causale_blocco) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_CALC_DIM_IMPRESA"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_CALC_DIM_IMPRESA (
    ID_CALC_DIM_IMPRESA NUMBER(8) NOT NULL,
    ID_SOGGETTO NUMBER NOT NULL,
    ID_PERIODO NUMBER(8),
    ULA NUMBER(8),
    IMP_FATTURATO NUMBER(13,2) NOT NULL,
    TOT_BILANCIO_ANNUO NUMBER(13,2),
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_T_CALC_DIM_IMPRESA PRIMARY KEY (ID_CALC_DIM_IMPRESA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_CALC_DIM_IMPRESA_1 ON PBANDI_T_CALC_DIM_IMPRESA (ID_SOGGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_CALC_DIM_IMPRESA_2 ON PBANDI_T_CALC_DIM_IMPRESA (ID_PERIODO) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_CAMPO_REGOLA"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_CAMPO_REGOLA (
    ID_CAMPO_REGOLA  NUMBER(3) NOT NULL,
    NOME_CAMPO VARCHAR2(100) NOT NULL,
    ID_REGOLA NUMBER(8) NOT NULL,
	ID_CAUSALE_BLOCCO NUMBER(8),
	DT_INIZIO_VALIDITA DATE NOT NULL,
	DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_CAMPO_REGOLA PRIMARY KEY (ID_CAMPO_REGOLA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE UNIQUE INDEX IE_PBANDI_D_CAMPO_REGOLA_1 ON PBANDI_D_CAMPO_REGOLA (ID_REGOLA) TABLESPACE PBANDI_IDX;
CREATE UNIQUE INDEX IE_PBANDI_D_CAMPO_REGOLA_2 ON PBANDI_D_CAMPO_REGOLA (NOME_CAMPO) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Foreign key constraints                                                */
/* ---------------------------------------------------------------------- */


ALTER TABLE PBANDI_D_CAMPO_REGOLA ADD CONSTRAINT FK_PBANDI_C_REGOLA_04 
    FOREIGN KEY (ID_REGOLA) REFERENCES PBANDI_C_REGOLA (ID_REGOLA);

ALTER TABLE PBANDI_D_CAMPO_REGOLA ADD CONSTRAINT FK_PBANDI_D_CAUSALE_BLOCCO_01
    FOREIGN KEY (ID_CAUSALE_BLOCCO) REFERENCES PBANDI_D_CAUSALE_BLOCCO (ID_CAUSALE_BLOCCO);


ALTER TABLE PBANDI_T_ENTE_GIURIDICO ADD CONSTRAINT FK_PBANDI_D_STATO_ATTIV_01 
    FOREIGN KEY (id_stato_attivita) REFERENCES PBANDI_D_STATO_ATTIVITA (id_stato_attivita);
	
ALTER TABLE PBANDI_T_ENTE_GIUR_SEZI ADD CONSTRAINT FK_PBANDI_D_SEZ_SPEC_01 
    FOREIGN KEY (id_sezione_speciale) REFERENCES PBANDI_D_SEZIONE_SPECIALE (id_sezione_speciale);

ALTER TABLE PBANDI_T_ENTE_GIUR_SEZI ADD CONSTRAINT FK_PBANDI_T_SOGGETTO_30 
    FOREIGN KEY (id_soggetto) REFERENCES PBANDI_T_SOGGETTO (id_soggetto);

ALTER TABLE PBANDI_T_RICHIESTA ADD CONSTRAINT FK_PBANDI_T_UTENTE_338 
    FOREIGN KEY (id_utente_richiedente) REFERENCES PBANDI_T_UTENTE (id_utente);

ALTER TABLE PBANDI_T_RICHIESTA ADD CONSTRAINT FK_PBANDI_D_TIPO_RICH_01 
    FOREIGN KEY (id_tipo_richiesta) REFERENCES PBANDI_D_TIPO_RICHIESTA (id_tipo_richiesta);

ALTER TABLE PBANDI_T_RICHIESTA ADD CONSTRAINT FK_PBANDI_D_STATO_RICH_01 
    FOREIGN KEY (id_stato_richiesta) REFERENCES PBANDI_D_STATO_RICHIESTA (id_stato_richiesta);

ALTER TABLE PBANDI_T_RICHIESTA ADD CONSTRAINT FK_PBANDI_T_DOMANDA_10 
    FOREIGN KEY (id_domanda) REFERENCES PBANDI_T_DOMANDA (id_domanda);

ALTER TABLE PBANDI_T_TRACCIATURA_RICH ADD CONSTRAINT FK_PBANDI_T_RICHIESTA_01 
    FOREIGN KEY (id_richiesta) REFERENCES PBANDI_T_RICHIESTA (id_richiesta);

ALTER TABLE PBANDI_T_TRACCIATURA_RICH ADD CONSTRAINT FK_D_TIPO_COMUNIC_01 
    FOREIGN KEY (id_tipo_comunicazione) REFERENCES PBANDI_D_TIPO_COMUNICAZIONE (id_tipo_comunicazione);

ALTER TABLE PBANDI_T_SOGGETTO_DURC ADD CONSTRAINT FK_PBANDI_D_TIPO_ESIT_RICH_01 
    FOREIGN KEY (id_tipo_esito_durc) REFERENCES PBANDI_D_TIPO_ESITO_RICHIESTE (id_tipo_esito_richieste);

ALTER TABLE PBANDI_T_SOGGETTO_DURC ADD CONSTRAINT FK_PBANDI_T_SOGGETTO_31 
    FOREIGN KEY (id_soggetto) REFERENCES PBANDI_T_SOGGETTO (id_soggetto);

--ALTER TABLE PBANDI_T_SOGGETTO_DSAN ADD CONSTRAINT FK_PBANDI_D_TIPO_ESIT_RICH_03 
--    FOREIGN KEY (id_esito_dsan) REFERENCES PBANDI_D_TIPO_ESITO_RICHIESTE (id_tipo_esito_richieste);

ALTER TABLE PBANDI_T_SOGGETTO_DSAN ADD CONSTRAINT FK_PBANDI_T_DOMANDA_09 
    FOREIGN KEY (id_domanda) REFERENCES PBANDI_T_DOMANDA (id_domanda);

ALTER TABLE PBANDI_T_SOGGETTO_ANTIMAFIA ADD CONSTRAINT FK_PBANDI_T_DOMANDA_08 
    FOREIGN KEY (id_domanda) REFERENCES PBANDI_T_DOMANDA (id_domanda);

ALTER TABLE PBANDI_T_SOGGETTO_ANTIMAFIA ADD CONSTRAINT FK_PBANDI_D_TIPO_ESIT_RICH_02 
    FOREIGN KEY (id_tipo_esito_antimafia) REFERENCES PBANDI_D_TIPO_ESITO_RICHIESTE (id_tipo_esito_richieste);

ALTER TABLE PBANDI_T_SOGG_DOMANDA_BLOCCO ADD CONSTRAINT FK_PBANDI_R_SOGG_DOMANDA_04 
    FOREIGN KEY (progr_soggetto_domanda) REFERENCES PBANDI_R_SOGGETTO_DOMANDA (progr_soggetto_domanda);

ALTER TABLE PBANDI_T_SOGG_DOMANDA_BLOCCO ADD CONSTRAINT FK_PBANDI_D_CAUS_BLOC_01 
    FOREIGN KEY (id_causale_blocco) REFERENCES PBANDI_D_CAUSALE_BLOCCO (id_causale_blocco);

ALTER TABLE PBANDI_D_CAUSALE_BLOCCO ADD CONSTRAINT FK_PBANDI_D_STATO_AZIENDA_03 
    FOREIGN KEY (ID_STATO_AZIENDA) REFERENCES PBANDI_D_STATO_AZIENDA (ID_STATO_AZIENDA);
	
ALTER TABLE PBANDI_D_TIPO_SOGG_CORRELATO ADD CONSTRAINT FK_PBANDI_D_TIPO_SOGGETTO_04 
    FOREIGN KEY (ID_TIPO_SOGGETTO) REFERENCES PBANDI_D_TIPO_SOGGETTO (ID_TIPO_SOGGETTO);

ALTER TABLE PBANDI_T_CALC_DIM_IMPRESA ADD CONSTRAINT FK_PBANDI_T_PERIODO_11 
    FOREIGN KEY (ID_PERIODO) REFERENCES PBANDI_T_PERIODO (id_periodo);

ALTER TABLE PBANDI_T_CALC_DIM_IMPRESA ADD CONSTRAINT FK_PBANDI_T_SOGGETTO_35 
    FOREIGN KEY (ID_SOGGETTO) REFERENCES PBANDI_T_SOGGETTO (id_soggetto);


ALTER TABLE PBANDI_T_ENTE_GIUR_SEZI ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_339
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_340
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
	
ALTER TABLE PBANDI_T_SOGG_DOMANDA_BLOCCO ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_341
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_342
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
	
ALTER TABLE PBANDI_T_SOGGETTO_DURC ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_343
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_344
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
	
ALTER TABLE PBANDI_T_SOGGETTO_ANTIMAFIA ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_345
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_346
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
	
ALTER TABLE PBANDI_T_SOGGETTO_DSAN ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_347
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_348
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
	
ALTER TABLE PBANDI_T_RICHIESTA ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_349
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_350
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
	
ALTER TABLE PBANDI_T_TRACCIATURA_RICH ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_351
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_352
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

ALTER TABLE PBANDI_T_CALC_DIM_IMPRESA ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_390
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_391
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);


-- Configurazione
--PBANDI_D_TIPO_ISCRIZIONE
/*
Insert into PBANDI_D_TIPO_ISCRIZIONE
   (ID_TIPO_ISCRIZIONE, COD_TIPO_ISCRIZIONE, DESC_TIPO_ISCRIZIONE, DT_INIZIO_VALIDITA)
 Values
   (1, 'CCIAA', 'Registro imprese', TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ISCRIZIONE
   (ID_TIPO_ISCRIZIONE, COD_TIPO_ISCRIZIONE, DESC_TIPO_ISCRIZIONE, DT_INIZIO_VALIDITA)
 Values
   (2, 'ALART', 'Albo imprese', TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
*/
Insert into PBANDI_D_TIPO_ISCRIZIONE
   (ID_TIPO_ISCRIZIONE, COD_TIPO_ISCRIZIONE, DESC_TIPO_ISCRIZIONE, DT_INIZIO_VALIDITA)
 Values
   (3, 'REA', 'Registro delle imprese', TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;


--PBANDI_D_SEZIONE_SPECIALE
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (1, 'IMPRESA AGRICOLA', 'IMPAGR', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (2, 'PICCOLO IMPRENDITORE E/O COLTIBATORE DIRETTO', 'PICCIMPR', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (3, 'SOCIETA'' SEMPLICE', 'SOCSEMP', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (4, 'IMPRESA ARTIGIANA', 'IMPART', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (5, 'SOCIETA'' DI PERSONA O DI CAPITALI', 'SOCPERSCAP', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (6, 'CONSORZI CON ATTIVITA'' ESTERNA E SOCIETA CONSORTILI', 'CONSATTEST', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (7, 'SOCIETA'' COSTITUITE ALL''ESTERO CON SEDE AMMINISTRATIVA O SECONDARIA SUL TERRITORIO ITALIANO', 'SOCCOSTEST', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (8, 'GRUPPI EUROPEI DI INTERESSE ECONOMICO', 'GRUPECO', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (9, 'ENTI PUBBLICI CHE HANNO PER OGGETTO ESCLUSIVO O PRONCIPALE UNA ATIVITA'' COMMERCIALE', 'ENTPUBCOMM', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (10, 'IMPRENDITORI COMMERCIALI INDIVIDUALI (NON PICCOLI)', 'IMPCOM', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (11, 'START-UP INNOVATIVA', 'STARTUP', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (12, 'INCUBATORE CERTIFICATO', 'INCCERT', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (13, 'PMI INNOVATIVA', 'PMIINN', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (14, 'IMPRESA SOCIALE', 'IMPSOC', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_SEZIONE_SPECIALE
   (ID_SEZIONE_SPECIALE, DESC_SEZIONE_SPECIALE, DESC_BREVE_SEZIONE_SPECIALE, DT_INIZIO_VALIDITA)
 Values
   (15, 'SOGGETTO CHE ESERCITA ATTIVITA'' DI DIREZIONE E COORDINAMENTO E QUELLO CHE VI E'' SOGGETTO (LEGAMI DI GRUPPO)', 'KEGGRUP', TO_DATE('01/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;


--PBANDI_D_STATO_ATTIVITA
Insert into PBANDI_D_STATO_ATTIVITA
   (ID_STATO_ATTIVITA, DESC_STATO_ATTIVITA, DESC_BREVE_STATO_ATTIVITA, DT_INIZIO_VALIDITA)
 Values
   (1, 'ATTIVA', 'ATT', TO_DATE('06/25/2008 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_ATTIVITA
   (ID_STATO_ATTIVITA, DESC_STATO_ATTIVITA, DESC_BREVE_STATO_ATTIVITA, DT_INIZIO_VALIDITA)
 Values
   (2, 'INATTIVA', 'INATT', TO_DATE('06/25/2008 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;


--PBANDI_D_CAUSALE_BLOCCO
insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (1, 'Past due', 'Past due', '', 'S', 'Stato credito', null, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (2, 'Durc', 'Durc', '', 'S', 'Anagrafica', null, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'S');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (3, 'Liquidazione coatta amministrativa', 'Liquidazione', 'S', 'S', 'Stato azienda', 6, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'S');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (4, 'Scioglimento e liquidazione', 'Scioglim e liquidaz', 'S', 'S', 'Stato azienda', 3, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'S');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (5, 'Concordato preventivo', 'Concordato preventiv', 'S', 'S', 'Stato azienda', 4, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'S');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (6, 'Amministrazione straordinaria grandi imprese', 'amministr straord GI', 'S', 'S', 'Stato azienda', 5, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'S');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (7, 'Fallimento', 'Fallimento', 'S', 'S', 'Stato azienda', 2, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'S');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (8, 'Cessata', 'Cessata', 'S', 'S', 'Stato azienda', 7, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'S');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (9, 'Cancellata', 'Cancellata', 'S', 'S', 'Stato azienda', 8, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'S');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (10, 'Inattiva', 'Inattiva', 'S', 'S', 'Stato azienda', 10, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'S');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (11, 'Revoca bancaria', 'Revoca bancaria', 'S', 'N', 'Stato credito', null, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'S');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (12, 'Unlikely to pay', 'Unlikely to pay', '', 'S', 'Stato credito', null, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (13, 'Sofferenze', 'Sofferenze', 'S', 'S', 'Stato credito', null, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (14, 'Bonis non attive', 'Bonis non attive', '', 'N', 'Stato credito', null, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (15, 'Antimafia', 'Antimafia', 'S', 'N', 'Anagrafica', null, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (17, 'Crisi da sovraindebitamento L.3/12', 'Crisi da sovraindeb', 'S', 'S', 'Stato azienda', 9, to_date('08-04-2022', 'dd-mm-yyyy'), null, 'S');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (18, 'Esiti di Controllo in loco', 'Esiti CL', 'S', 'N', 'Controllo in loco', null, to_date('15-02-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (19, 'Mancata rendicontazione', 'Mancata rend', 'S', 'N', 'Rendicontazione', null, to_date('01-07-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (20, 'Esito della dichiarazione di spesa', 'Esito dichiaraz', 'S', 'N', 'Dichiarazione spesa', null, to_date('01-07-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (21, 'Variazione piano finanziario in itinere', 'Variaz piano finanz', 'S', 'N', 'Rendicontazione', null, to_date('01-07-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (22, 'Rinuncia', 'Rinuncia', 'S', 'N', 'Rendicontazione', null, to_date('01-07-2022', 'dd-mm-yyyy'), null, 'S');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (23, 'Altri controlli', 'Altri controlli', 'S', 'N', 'Revoca', null, to_date('01-07-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (24, 'Esito della dichiarazione di spesa con erogazione', 'Esito dich con erog', 'S', 'N', 'Dichiarazione spesa', null, to_date('25-11-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (25, 'Variazione Forma Giuridica', 'forma giuridica', '', 'N', 'Anagrafica', null, to_date('25-11-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (26, 'Altro', 'Altro', 'S', 'N', 'Revoca', null, to_date('25-11-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (27, 'Indagini in corso', 'Indagini in corso', '', 'S', 'Anagrafica', null, to_date('25-11-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (28, 'Varaizione pubblico privato', 'pubblico privato', '', 'N', 'Anagrafica', null, to_date('25-11-2022', 'dd-mm-yyyy'), null, 'N');

insert into pbandi_d_causale_blocco (ID_CAUSALE_BLOCCO, DESC_CAUSALE_BLOCCO, DESC_BREVE_CAUSALE_BLOCCO, FLAG_REVOCA, FLAG_BLOCCO_ANAGRAFICO, DESC_MACROAREA, ID_STATO_AZIENDA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, FLAG_EROGAZIONE)
values (29, 'Variazione sede legale beneficiario', 'sede legale benefic.', '', 'N', 'Anagrafica', null, to_date('25-11-2022', 'dd-mm-yyyy'), null, 'N');

COMMIT;


--PBANDI_D_STATO_RICHIESTA
Insert into PBANDI_D_STATO_RICHIESTA
   (ID_STATO_RICHIESTA, DESC_STATO_RICHIESTA, DESC_BREVE_STATO_RICHIESTA, DT_INIZIO_VALIDITA)
 Values
   (1, 'DA ELABORARE', 'DE', TO_DATE('01/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_RICHIESTA
   (ID_STATO_RICHIESTA, DESC_STATO_RICHIESTA, DESC_BREVE_STATO_RICHIESTA, DT_INIZIO_VALIDITA)
 Values
   (2, 'IN ELABORAZIONE', 'IE', TO_DATE('01/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_RICHIESTA
   (ID_STATO_RICHIESTA, DESC_STATO_RICHIESTA, DESC_BREVE_STATO_RICHIESTA, DT_INIZIO_VALIDITA)
 Values
   (3, 'IN ISTRUTTORIA BDNA', 'IST ', TO_DATE('01/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_RICHIESTA
   (ID_STATO_RICHIESTA, DESC_STATO_RICHIESTA, DESC_BREVE_STATO_RICHIESTA, DT_INIZIO_VALIDITA)
 Values
   (4, 'COMPLETATA', 'C', TO_DATE('01/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_RICHIESTA
   (ID_STATO_RICHIESTA, DESC_STATO_RICHIESTA, DESC_BREVE_STATO_RICHIESTA, DT_INIZIO_VALIDITA)
 Values
   (5, 'ANNULLATA', 'A', TO_DATE('01/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_RICHIESTA
   (ID_STATO_RICHIESTA, DESC_STATO_RICHIESTA, DESC_BREVE_STATO_RICHIESTA, DT_INIZIO_VALIDITA)
 Values
   (40, 'nd finpiemonte', 'nd', TO_DATE('01/17/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_RICHIESTA
   (ID_STATO_RICHIESTA, DESC_STATO_RICHIESTA, DESC_BREVE_STATO_RICHIESTA, DT_INIZIO_VALIDITA)
 Values
   (90, 'nd finpiemonte ', 'nd', TO_DATE('01/17/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_TIPO_COMUNICAZIONE
Insert into PBANDI_D_TIPO_COMUNICAZIONE
   (ID_TIPO_COMUNICAZIONE, DESC_TIPO_COMUNICAZIONE, DESC_BREVE_TIPO_COMUNICAZIONE, DT_INIZIO_VALIDITA)
 Values
   (1, 'INVIO', 'INVIO', TO_DATE('12/01/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_COMUNICAZIONE
   (ID_TIPO_COMUNICAZIONE, DESC_TIPO_COMUNICAZIONE, DESC_BREVE_TIPO_COMUNICAZIONE, DT_INIZIO_VALIDITA)
 Values
   (2, 'RICEZIONE', 'RICEZIONE', TO_DATE('12/01/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_TIPO_RICHIESTA
Insert into PBANDI_D_TIPO_RICHIESTA
   (ID_TIPO_RICHIESTA, DESC_TIPO_RICHIESTA, DESC_BREVE_TIPO_RICHIESTA, DT_INIZIO_VALIDTA)
 Values
   (1, 'DURC', 'DURC', TO_DATE('01/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_RICHIESTA
   (ID_TIPO_RICHIESTA, DESC_TIPO_RICHIESTA, DESC_BREVE_TIPO_RICHIESTA, DT_INIZIO_VALIDTA)
 Values
   (2, 'DSAN in assenza di DURC', 'DSAN', TO_DATE('01/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_RICHIESTA
   (ID_TIPO_RICHIESTA, DESC_TIPO_RICHIESTA, DESC_BREVE_TIPO_RICHIESTA, DT_INIZIO_VALIDTA)
 Values
   (3, 'ANTIMAFIA', 'ANTIMAFIA', TO_DATE('01/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_RICHIESTA
   (ID_TIPO_RICHIESTA, DESC_TIPO_RICHIESTA, DESC_BREVE_TIPO_RICHIESTA, DT_INIZIO_VALIDTA)
 Values
   (4, 'DEGGENDORF', 'DEGGENDORF', TO_DATE('01/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;




--PBANDI_D_STATO_DOMANDA
Insert into PBANDI_D_STATO_DOMANDA
   (ID_STATO_DOMANDA, DESC_BREVE_STATO_DOMANDA, DESC_STATO_DOMANDA, DT_INIZIO_VALIDITA)
 Values
   (13, 'RR', 'Respita in ricevibilita', TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_DOMANDA
   (ID_STATO_DOMANDA, DESC_BREVE_STATO_DOMANDA, DESC_STATO_DOMANDA, DT_INIZIO_VALIDITA)
 Values
   (14, 'RA', 'Respinta in ammissibilita', TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_DOMANDA
   (ID_STATO_DOMANDA, DESC_BREVE_STATO_DOMANDA, DESC_STATO_DOMANDA, DT_INIZIO_VALIDITA)
 Values
   (15, 'RV', 'Respinta in Valutazione', TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_DOMANDA
   (ID_STATO_DOMANDA, DESC_BREVE_STATO_DOMANDA, DESC_STATO_DOMANDA, DT_INIZIO_VALIDITA)
 Values
   (16, 'RB', 'Respinta in Banca', TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_DOMANDA
   (ID_STATO_DOMANDA, DESC_BREVE_STATO_DOMANDA, DESC_STATO_DOMANDA, DT_INIZIO_VALIDITA)
 Values
   (17, 'RVAC', 'Respinta in Valutazione Area Crediti', TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_DOMANDA
   (ID_STATO_DOMANDA, DESC_BREVE_STATO_DOMANDA, DESC_STATO_DOMANDA, DT_INIZIO_VALIDITA)
 Values
   (18, 'RP', 'Respinta in Pre Concessione', TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;





/* ---------------------------------------------------------------------- */
/* Script generated with: DeZign for Databases v6.2.1                     */
/* Target DBMS:           Oracle 11g                                      */
/* Project file:          Amministrativo contabile.dez                 */
/* Project name:                                                          */
/* Author:                                                                */
/* Script type:           Database creation script                        */
/* Created on:            2022-01-10 20:23                                */
/* ---------------------------------------------------------------------- */


/* ---------------------------------------------------------------------- */
/* Sequences                                                              */
/* ---------------------------------------------------------------------- */


--PBANDI_T_MON_SERV_AMMVO_CONTAB
CREATE SEQUENCE SEQ_PBANDI_T_MON_SERV_AMM_CONT
  START WITH 1
  INCREMENT BY 1
  NOMINVALUE
  NOMAXVALUE
  NOCYCLE
  NOCACHE
  NOORDER;
  
--PBANDI_T_SOGG_AMMVO_CONTAB
CREATE SEQUENCE SEQ_PBANDI_T_SOGG_AMMVO_CONTAB
  START WITH 1
  INCREMENT BY 1
  NOMINVALUE
  NOMAXVALUE
  NOCYCLE
  NOCACHE
  NOORDER;
  
/* ---------------------------------------------------------------------- */
/* Tables                                                                 */
/* ---------------------------------------------------------------------- */

-- PBANDI_R_BANDO_MODALITA_AGEVOL
-- Commentato perchè già eseguita in produzione 24/10/2023
--ALTER TABLE PBANDI_R_BANDO_MODALITA_AGEVOL RENAME COLUMN IMPORTO_DA_EROGARE TO PERCENTUALE_IMPORTO_DA_EROGARE;
--ALTER TABLE PBANDI_R_BANDO_MODALITA_AGEVOL MODIFY(PERCENTUALE_IMPORTO_DA_EROGARE NUMBER(5,2));


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_SERVIZI_AMMVO_CONTAB"                                        */
/* ---------------------------------------------------------------------- */
CREATE TABLE PBANDI_D_SERVIZI_AMMVO_CONTAB
(ID_SERVIZIO  Number  Not null,   
 NOME_SERVIZIO  VARCHAR2(40) Not null,    
 DESCRIZIONE  VARCHAR2(300),     
 TIPOLOGIA  Varchar2(1),		
 DT_INIZIO_VALIDITA	Date Not null,		
 DT_FINE_VALIDITA	Date,		
 PARAMETRI_DI_INPUT	VARCHAR2(200)	Not null,		
 PARAMETRI_DI_OUTPUT	VARCHAR2(200)	Not null,
 CONSTRAINT PK_PBANDI_D_SERVIZI_AMMVO_CONT PRIMARY KEY (ID_SERVIZIO) USING INDEX TABLESPACE PBANDI_IDX
);

--
COMMENT ON COLUMN PBANDI_D_SERVIZI_AMMVO_CONTAB.ID_SERVIZIO IS 'Identificativo interno del servizio';
COMMENT ON COLUMN PBANDI_D_SERVIZI_AMMVO_CONTAB.NOME_SERVIZIO IS 'Nome del servizio chiamato nel codice';
COMMENT ON COLUMN PBANDI_D_SERVIZI_AMMVO_CONTAB.DESCRIZIONE IS 'Testo descrittivo del servizio';
COMMENT ON COLUMN PBANDI_D_SERVIZI_AMMVO_CONTAB.TIPOLOGIA IS 'Se in lettura o scrittura (Valori R o W)';
COMMENT ON COLUMN PBANDI_D_SERVIZI_AMMVO_CONTAB.PARAMETRI_DI_INPUT IS 'Concatenazione con separatore';
COMMENT ON COLUMN PBANDI_D_SERVIZI_AMMVO_CONTAB.PARAMETRI_DI_OUTPUT IS 'Concatenazione con separatore';

-- PBANDI_T_MON_SERV_AMMVO_CONTAB
CREATE TABLE PBANDI_T_MON_SERV_AMMVO_CONTAB
(ID_MONIT_AMMVO_CONT	Number(38) not null,
    ID_SERVIZIO	Number		not null,		
    ID_UTENTE	Number		not null,		
    MODALITA_CHIAMATA	Varchar2(1)	not null	,    	
    ESITO 	Varchar2(2),		
    CODICE_ERRORE	Varchar2(10),		
    MESSAGGIO_ERRORE	Varchar2(4000),		
    DATETIME_INIZIO_CHIAMATA	Date	not null,		
    DATETIME_FINE_CHIAMATA	Date,		
    PARAMETRI_DI_INPUT	VARCHAR2(4000) not null,		
    PARAMETRI_DI_OUTPUT	VARCHAR2(4000),		
    ID_ENTITA	NUMBER(3,0) not null,		
    ID_TARGET	NUMBER(8,0)	not null,
    CONSTRAINT PK_PBANDI_T_MON_SERV_AMMVO_CON PRIMARY KEY (ID_MONIT_AMMVO_CONT) USING INDEX TABLESPACE PBANDI_IDX	
);


-- idx
CREATE INDEX IE1_PBANDI_T_MON_SER_AMM_CONT ON PBANDI_T_MON_SERV_AMMVO_CONTAB (ID_SERVIZIO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE2_PBANDI_T_MON_SER_AMM_CONT ON PBANDI_T_MON_SERV_AMMVO_CONTAB (ID_UTENTE) TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_T_MON_SER_AMM_CONT ON PBANDI_T_MON_SERV_AMMVO_CONTAB (ID_ENTITA,ID_TARGET) TABLESPACE PBANDI_IDX;

-- 
COMMENT ON COLUMN PBANDI_T_MON_SERV_AMMVO_CONTAB.ID_MONIT_AMMVO_CONT IS 'Identificativo interno valorizzato tramite sequence';
COMMENT ON COLUMN PBANDI_T_MON_SERV_AMMVO_CONTAB.ID_UTENTE IS 'Identificativo dell''utente applicativo che effettua la chiamata';
COMMENT ON COLUMN PBANDI_T_MON_SERV_AMMVO_CONTAB.MODALITA_CHIAMATA IS 'Possibili valori I (Insert), U (Update), nel caso di angrafica fondo e iban cancellazione non permessa';
COMMENT ON COLUMN PBANDI_T_MON_SERV_AMMVO_CONTAB.ESITO IS 'Valori (OK/KO)';
COMMENT ON COLUMN PBANDI_T_MON_SERV_AMMVO_CONTAB.PARAMETRI_DI_INPUT IS 'Concatenazione con separatore';
COMMENT ON COLUMN PBANDI_T_MON_SERV_AMMVO_CONTAB.PARAMETRI_DI_OUTPUT IS 'Concatenazione con separatore';


CREATE TABLE PBANDI_W_CARICAMENTO_AMMCO_XML
(
  ID_CARICAMENTO   NUMBER                  NOT NULL,
  FILE_XML         SYS.XMLTYPE,
  NOME_FILE        VARCHAR2(255)           NOT NULL,
  FLAG_CARICATO    VARCHAR2(2),
  FONTE            VARCHAR2(20)            NOT NULL, --(MONIT_CREDITI,RECUPERI,EROGAZIONI)
  DT_INSERIMENTO   DATE                    DEFAULT sysdate,
  FLAG_ANOMALIE    VARCHAR2(2)
)
TABLESPACE PBANDI_TBL
XMLTYPE FILE_XML STORE AS CLOB 
      ( TABLESPACE  PBANDI_LOB 
        ENABLE      STORAGE IN ROW
        CHUNK       8192
        RETENTION
        NOCACHE
        INDEX       (
          TABLESPACE PBANDI_LOB
                    )
      );

ALTER TABLE PBANDI_W_CARICAMENTO_AMMCO_XML 
ADD  CONSTRAINT PK_PBANDI_W_CARIC_AMMCO_XML PRIMARY KEY (ID_CARICAMENTO) USING INDEX TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_SOGG_AMMVO_CONTAB"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_SOGG_AMMVO_CONTAB (
    ID_SOGG_AMMVO_CONTAB NUMBER(8) NOT NULL,
    COD_BENEFICIARIO VARCHAR2(10) NOT NULL,
    RAGIONE_SOCIALE VARCHAR2(255),
    COGNOME VARCHAR2(150),
    NOME VARCHAR2(150),
    ID_NAZIONE NUMBER(4),
    ID_PROVINCIA NUMBER(4),
    ID_COMUNE NUMBER(4),
    INDIRIZZO VARCHAR2(255),
    CAP VARCHAR2(5),
    CODICE_FISCALE VARCHAR2(32),
    PARTITA_IVA VARCHAR2(20),
    EMAIL VARCHAR2(128),
    PEC VARCHAR2(128),
    TELEFONO VARCHAR2(24),
    DITTA NUMBER(4),
    TOP011_CLIFOR_CG44 INTEGER,
    DATA_INVIO DATE,
    TIPO_INVIO CHAR(1),
    ESITO VARCHAR2(40),
    CONSTRAINT PK_PBANDI_T_SOGG_AMMVO_CONTAB PRIMARY KEY (ID_SOGG_AMMVO_CONTAB) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_SOGG_AMMVO_CONTAB ON PBANDI_T_SOGG_AMMVO_CONTAB (COD_BENEFICIARIO) TABLESPACE PBANDI_IDX;

COMMENT ON TABLE PBANDI_T_SOGG_AMMVO_CONTAB IS 'Tabella di interfaccia con Amministrativo Contabile. Sono memorizzati i nuovi soggetti e soggetti con variazioni';

COMMENT ON COLUMN PBANDI_T_SOGG_AMMVO_CONTAB.TIPO_INVIO IS 'I=Inserimento U=Modifica';

COMMENT ON COLUMN PBANDI_T_SOGG_AMMVO_CONTAB.ESITO IS 'OK,KO';


-- VIEW
CREATE OR REPLACE VIEW PBANDI_V_SOGG_AMMVO_CONTAB_B AS
SELECT DISTINCT
         s.id_sogg_ammvo_contab as id_sogg_ammvo_contab,  
         h.ndg as COD_BENEFICIARIO,
         h1.denominazione_ente_giuridico as RAGIONE_SOCIALE,
         o.cognome as COGNOME,
         o.nome as NOME,
         86 as ID_NAZIONE,
         n.id_provincia as ID_PROVINCIA,
         n.id_comune as ID_COMUNE,
         upper(n.desc_indirizzo) as INDIRIZZO,
         n.cap as CAP,
         h.codice_fiscale_soggetto as CODICE_FISCALE,
         h.codice_fiscale_soggetto as PARTITA_IVA,
         p.email as EMAIL,
         p.pec as PEC,
         p.telefono as TELEFONO,
         1 as DITTA,
         null as TOP011_CLIFOR_CG44,
		 s.data_invio as data_invio,
		 s.tipo_invio as tipo_invio,
		 s.esito as esito
		 --,AMMVO_CONTAB_CALC_VARIAZ(h.ndg) as FLAG_VARIAZIONE
FROM PBANDI_R_BANDO_LINEA_ENTE_COMP a
JOIN PBANDI_T_ENTE_COMPETENZA b on b.id_ente_competenza = a.id_ente_competenza and b.desc_ente = 'FINPIEMONTE'
JOIN PBANDI_D_RUOLO_ENTE_COMPETENZA c on c.id_ruolo_ente_competenza = a.id_ruolo_ente_competenza and c.desc_breve_ruolo_ente = 'DESTINATARIO'
JOIN PBANDI_R_BANDO_LINEA_INTERVENT d on d.progr_bando_linea_intervento = a.progr_bando_linea_intervento
JOIN PBANDI_T_DOMANDA e on e.progr_bando_linea_intervento = a.progr_bando_linea_intervento
--JOIN PBANDI_T_PROGETTO f on f.id_domanda = e.id_domanda
JOIN PBANDI_R_SOGGETTO_DOMANDA g on g.id_domanda = e.id_domanda and g.id_tipo_anagrafica = 1 and g.id_tipo_beneficiario <> 4 and g.dt_fine_validita is null
LEFT JOIN PBANDI_T_ENTE_GIURIDICO h1 on h1.id_ente_giuridico = g.id_ente_giuridico
JOIN PBANDI_T_SOGGETTO h on h.id_soggetto = h1.id_soggetto
LEFT JOIN PBANDI_R_SOGGETTO_DOMANDA_SEDE g1 on g1.progr_soggetto_domanda = g.progr_soggetto_domanda
LEFT JOIN PBANDI_T_INDIRIZZO n on n.id_indirizzo = nvl(g1.id_indirizzo,g.id_indirizzo_persona_fisica)
LEFT JOIN PBANDI_T_PERSONA_FISICA o on o.id_persona_fisica = g.id_persona_fisica
LEFT JOIN PBANDI_T_RECAPITI p on p.id_recapiti = nvl(g1.id_recapiti,g.id_recapiti_persona_fisica)
LEFT JOIN PBANDI_T_SOGG_AMMVO_CONTAB s on s.cod_beneficiario = h.ndg
where nvl(g1.id_tipo_sede,1) = 1 -- Sede Leg
and nvl(g.id_ente_giuridico,0) = nvl((select max(id_ente_giuridico)
                              from PBANDI_R_SOGGETTO_PROGETTO
                             where id_soggetto = g.id_soggetto),0)
and nvl(s.data_invio,to_date('31129999','ddmmyyyy')) = nvl((select max(data_invio)
                                                          from PBANDI_T_SOGG_AMMVO_CONTAB
					                                     where cod_beneficiario = h.ndg),to_date('31129999','ddmmyyyy'));------------------														 
-- FUNCTION
-----------------
CREATE OR REPLACE FUNCTION 	AMMVO_CONTAB_CALC_VARIAZ (P_COD_BENEFICIARIO  IN VARCHAR2) RETURN VARCHAR2 IS

  CURSOR c1 (c_cod_beneficiario VARCHAR2) IS
   SELECT 
	    RAGIONE_SOCIALE,
		COGNOME,
		NOME,
		ID_NAZIONE,
		ID_PROVINCIA,
		ID_COMUNE,
		INDIRIZZO,
		CAP,
		CODICE_FISCALE,
		PARTITA_IVA,
		EMAIL,
		PEC,
		TELEFONO
	FROM PBANDI_T_SOGG_AMMVO_CONTAB
   WHERE COD_BENEFICIARIO = c_cod_beneficiario
     AND DATA_INVIO = (SELECT MAX(DATA_INVIO)
	                     FROM PBANDI_T_SOGG_AMMVO_CONTAB
						WHERE COD_BENEFICIARIO = c_cod_beneficiario)
   MINUS
   SELECT 
	    RAGIONE_SOCIALE,
		COGNOME,
		NOME,
		ID_NAZIONE,
		ID_PROVINCIA,
		ID_COMUNE,
		INDIRIZZO,
		CAP,
		CODICE_FISCALE,
		PARTITA_IVA,
		EMAIL,
		PEC,
		TELEFONO
	FROM PBANDI_V_SOGG_AMMVO_CONTAB_B
   WHERE COD_BENEFICIARIO = c_cod_beneficiario;
   
   r1 c1%ROWTYPE;
   
  v_flag_variazione varchar2(1);
  
BEGIN

  OPEN c1(P_COD_BENEFICIARIO);
  FETCH c1 INTO r1;
  IF c1%FOUND THEN
     v_flag_variazione := 'S';
  ELSE
     v_flag_variazione := 'N';
  END IF;
  
  CLOSE c1;

  RETURN v_flag_variazione;
END AMMVO_CONTAB_CALC_VARIAZ;												 


CREATE OR REPLACE FORCE VIEW PBANDI.PBANDI_V_SOGG_AMMVO_CONTAB AS
SELECT 
   ID_SOGG_AMMVO_CONTAB,
   COD_BENEFICIARIO,
   RAGIONE_SOCIALE,
   COGNOME,
   NOME,
   ID_NAZIONE,
   ID_PROVINCIA,
   ID_COMUNE,
   INDIRIZZO,
   CAP,
   CODICE_FISCALE,
   PARTITA_IVA,
   EMAIL,
   PEC,
   TELEFONO,
   DITTA,
   TOP011_CLIFOR_CG44,
   DATA_INVIO,
   TIPO_INVIO,
   ESITO,
   AMMVO_CONTAB_CALC_VARIAZ(COD_BENEFICIARIO) as FLAG_VARIAZIONE
FROM PBANDI_V_SOGG_AMMVO_CONTAB_B;
                            
/* ---------------------------------------------------------------------- */
/* Foreign key constraints                                                */
/* ---------------------------------------------------------------------- */
ALTER TABLE PBANDI_T_MON_SERV_AMMVO_CONTAB ADD CONSTRAINT FK_PBANDI_C_ENTITA_15 
    FOREIGN KEY (ID_ENTITA) REFERENCES PBANDI_C_ENTITA (ID_ENTITA);

ALTER TABLE PBANDI_T_MON_SERV_AMMVO_CONTAB ADD CONSTRAINT FK_PBANDI_D_SERV_AMMVO_CONT_01 
    FOREIGN KEY (ID_SERVIZIO) REFERENCES PBANDI_D_SERVIZI_AMMVO_CONTAB (ID_SERVIZIO);

ALTER TABLE PBANDI_T_MON_SERV_AMMVO_CONTAB ADD CONSTRAINT FK_PBANDI_T_UTENTE_406 
    FOREIGN KEY (ID_UTENTE) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

-- Configurazione
--PBANDI_D_SERVIZI_AMMVO_CONTAB
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (1, 'StatoDistinte.StatoDistinte', 'Il servizio prevede la valorizzazione della tabella PBANDI_T_DISTINTA a seguito del cambio di stato della distinta sulla base degli avanzamenti del workflow autorizzativo su AMMVO CONTABILE', 'R', TO_DATE('01/07/2024 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'id_distinta', 'stato_distinta, data_stato');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (2, 'DistintaErogazione.Contributo', 'Il servizio consente di passare all’amministrativo contabile i dati collegati alle erogazioni delle agevolazioni di tipo contributo derivati dalle lavorazioni su PBAN.', 'R', TO_DATE('01/07/2024 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'id_distinta', 'esito_operazione');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (3, 'DistintaErogazione.Finanziamento', 'Il servizio consente di passare all’amministrativo contabile i dati collegati alle erogazioni delle agevolazioni di tipo finanziamento con cofinanziamento bancario derivati dalle lavorazioni su PBAN.', 'R', TO_DATE('01/07/2024 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'id_distinta', 'esito_operazione');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (4, 'DistintaErogazione.Garanzia', 'Il servizio consente di passare all’amministrativo contabile i dati collegati alle erogazioni (concessioni) delle agevolazioni di tipo garanzia che prevedono la creazione di un piano di ammortamento parallelo a quello del finanziamento sottostante la garanzia concessa dall’ente.', 'R', TO_DATE('01/07/2024 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'id_distinta', 'esito_operazione');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (5, 'DebitoResiduo.DebitoResiduo', 'Consente di reperire da amministrativo contabile i dati per il popolamento della singolo campo debito residuo a livello di progetto - tipo agevolazione', 'R', TO_DATE('08/01/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Codice_Bando;Codice_Beneficiario;IBAN_Bando;Codice_Progetto;Tipo_Agevolazione', 'Codice_Bando;Codice_Progetto;Debito_Residuo');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (6, 'ImportiRevoche', 'Consente di reperire da amministrativo contabile l''importo erogato, l''importo rimborsato e l''importo recuperato per ciascuna modalità di agevolazione per il singolo progetto', 'R', TO_DATE('08/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Codice Bando; Codice Beneficiario; IBAN Bando; Codice Progetto; Data di riferimento; Tipologia Agevolazione', 'Codice Bando; Codice Progetto; Codice Beneficiario; Importo Erogato; Importo Rimborsato; Importo Recuperato; Tipologia Agevolazione');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (7, 'AnagraficaFondo.Anagrafica', 'L’operazione Anagrafica consente di censire lato amministrativo contabile i principali dati del nuovo bando in apertura', 'W', TO_DATE('08/01/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Codice Bando;Ditta;Descrizione;Contropartita;Codice Natura Bando;Codice Direzione;Note;Tipologia Invio', 'esito_operazione');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (8, 'AnagraficaFondo.IbanFondo', 'L’operazione IbanFondo consente di censire lato amministrativo_contabile i dati dei rapporti bancari collegati ai fondi in censimento', 'W', TO_DATE('08/01/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Codice Bando;Iban;Ditta;Agevolazione;Moltiplicatore;Note;Tipo Conto;Tipologia Invio', 'esito_operazione');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (9, 'DistinaErogazione.Escussione', 'Il servizio consente di passare all''amministrativo contabile i dati collegati alle escussione  per l''invio di un bonifico', 'R', TO_DATE('08/01/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'id_distinta', 'esito_operazione');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (10, 'DistintaErogazione.Revoca', 'Il servizio consente di passare all''amminastrivo contabile i dati relativi ai recuperi del provvedimento di revoca per modalità di agevolazione', 'W', TO_DATE('08/01/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Id_disitnta; Cod.Bando; Cod.Beneficiario; Cod.Progetto; Data Erogazione; Importo Revoca Capitale; Importo Revoca Interessi; ID Revoca; Tipologia Distinta; Tipologia Agevolazione; Tipologia Revoca', 'esito_operazione');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (11, 'EstrattoContoFondo.EstrattoConto', 'Il servizio prevede la valorizzazione della tabella PBANDI_T_DISTINTA a seguito del cambio di stato della distinta sulla base degli avanzamenti del workflow autorizzativo su AMMVO CONTABILE', 'R', TO_DATE('08/01/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Codice_Bando;Codice_Beneficiario;IBAN_Bando;Codice_Progetto;Tipo_Agevolazione', 'esito_operazione');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (12, 'PianoAmmortamento.PianoAmmortamento', 'Il servizio prevede la valorizzazione della tabella PBANDI_T_DISTINTA a seguito del cambio di stato della distinta sulla base degli avanzamenti del workflow autorizzativo su AMMVO CONTABILE', 'R', TO_DATE('08/01/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Codice_Bando;Codice_Beneficiario;IBAN_Bando;Codice_Progetto;Tipo_Agevolazione', 'esito_operazione');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (13, 'DistintaErogazione.Perdita', 'Il servizio consente di passare all’amministrativo contabile i dati collegati alle perdite delle agevolazioni di tipo garanzia che prevedono la creazione di un piano di ammortamento parallelo a quello del finanziamento sottostante la garanzia concessa dall’ente.', 'W', TO_DATE('01/07/2024 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'taaaanti', 'esito_operazione');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (14, 'DistintaErogazione.SaldoStralcio', 'Il servizio consente di passare all’amministrativo contabile i dati collegati alle perdite delle agevolazioni di tipo garanzia che prevedono la creazione di un piano di ammortamento parallelo a quello del finanziamento sottostante la garanzia concessa dall’ente.', 'W', TO_DATE('01/07/2024 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'taaaanti', 'esito_operazione');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (15, 'DistintaErogazione.Cessione', 'Il servizio consente di passare all’amministrativo contabile i dati collegati alle perdite delle agevolazioni di tipo garanzia che prevedono la creazione di un piano di ammortamento parallelo a quello del finanziamento sottostante la garanzia concessa dall’ente.', 'W', TO_DATE('01/07/2024 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'taaaanti', 'esito_operazione');
Insert into PBANDI_D_SERVIZI_AMMVO_CONTAB
   (ID_SERVIZIO, NOME_SERVIZIO, DESCRIZIONE, TIPOLOGIA, DT_INIZIO_VALIDITA, PARAMETRI_DI_INPUT, PARAMETRI_DI_OUTPUT)
 Values
   (16, 'Beneficiario.Beneficiario', 'Il servizio consente di passare all’amministrativo contabile i beneficiari da modificare/salvare', 'W', TO_DATE('04/24/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'taaaanti', 'esito_operazione');
COMMIT;

--PBANDI_D_NOME_BATCH
Insert into PBANDI_D_NOME_BATCH
   (ID_NOME_BATCH, NOME_BATCH, DESC_BATCH)
 Values
   (29, 'PBAN-XMLBAT02', 'Caricamento XML Domande migrazione Finpis');

Insert into PBANDI_D_NOME_BATCH
   (ID_NOME_BATCH, NOME_BATCH, DESC_BATCH)
 Values
   (30, 'PBAN-XMLAMMCO-RATE', 'Caricamento XML rate scadute e non pagate da Amministrativo contabile');
Insert into PBANDI_D_NOME_BATCH
   (ID_NOME_BATCH, NOME_BATCH, DESC_BATCH)
 Values
   (31, 'PBAN-XMLAMMCO-RECUPERI', 'Caricamento XML Recuperi da Amministrativo contabile');
Insert into PBANDI_D_NOME_BATCH
   (ID_NOME_BATCH, NOME_BATCH, DESC_BATCH)
 Values
   (32, 'PBAN-XMLAMMCO-EROGAZIONI', 'Caricamento XML Erogazioni da Amministrativo contabile');

   
--PBANDI_D_ERRORE_BATCH
Insert into PBANDI_D_ERRORE_BATCH
   (CODICE_ERRORE, DESCRIZIONE)
 Values
   ('E181', 'Errore su xml Amministrativo contabile');


Insert into PBANDI_D_ERRORE_BATCH
   (CODICE_ERRORE, DESCRIZIONE)
 Values
   ('E189', 'Errore su valorizzazione piano ammortamento per il progetto');

Insert into PBANDI_D_ERRORE_BATCH
   (CODICE_ERRORE, DESCRIZIONE)
 Values
   ('E190', 'Errore accesso delibera per  valorizzazione piano ammortamento per il progetto');

COMMIT;

   
--PBANDI_T_UTENTE
Insert into PBANDI_T_UTENTE
   (ID_UTENTE, CODICE_UTENTE, ID_TIPO_ACCESSO, DT_INSERIMENTO)
 Values
   (-17, 'BATCH_AMMCO', 5, TO_DATE('02/22/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));   
COMMIT;


/* ---------------------------------------------------------------------- */
/* Script generated with: DeZign for Databases v6.2.1                     */
/* Target DBMS:           Oracle 11g                                      */
/* Project file:          Campionamento_modello_fisico.dez                 */
/* Project name:                                                          */
/* Author:                                                                */
/* Script type:           Database creation script                        */
/* Created on:            2022-01-10 20:23                                */
/* ---------------------------------------------------------------------- */


/* ---------------------------------------------------------------------- */
/* Sequences                                                              */
/* ---------------------------------------------------------------------- */


--PBANDI_T_CAMPIONAMENTO_FINP
CREATE SEQUENCE SEQ_PBANDI_T_CAMPIONAMENT_FINP
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_CONTROLLO_LOCO
CREATE SEQUENCE SEQ_PBANDI_T_CONTROLLO_LOCO
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_CONTROLLO_LOCO_ALTRI
CREATE SEQUENCE SEQ_PBANDI_T_CONTR_LOCO_ALTRI
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_RICHIESTA_INTEGRAZ
CREATE SEQUENCE SEQ_PBANDI_T_RICH_INTEGRAZ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;	

/* ---------------------------------------------------------------------- */
/* Tables                                                                 */
/* ---------------------------------------------------------------------- */

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_CAMP_STATO"                                        */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_CAMP_STATO (
    ID_STATO_CAMP NUMBER(3) NOT NULL,
    DESC_BREVE_STATO_CAMP VARCHAR2(20) NOT NULL,
    DESC_STATO_CAMP VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_CAMP_STATO PRIMARY KEY (ID_STATO_CAMP) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_FASE_CAMP"                                         */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_FASE_CAMP (
    ID_FASE_CAMP NUMBER(3) NOT NULL,
    DESC_BREVE_FASE_CAMP VARCHAR2(20) NOT NULL,
    DESC_FASE_CAMP VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_FASE_CAMP PRIMARY KEY (ID_FASE_CAMP) USING INDEX TABLESPACE PBANDI_IDX
);


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_TIPO_CAMP"                                         */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_TIPO_CAMP (
    ID_TIPO_CAMP NUMBER(3) NOT NULL,
    DESC_BREVE_TIPO_CAMP VARCHAR2(20) NOT NULL,
    DESC_TIPO_CAMP VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_TIPO_CAMP PRIMARY KEY (ID_TIPO_CAMP) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_ATTIV_CONTROLLO_LOCO"                              */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_ATTIV_CONTROLLO_LOCO (
    ID_ATTIV_CONTR_LOCO NUMBER(3) NOT NULL,
    DESC_BREVE_ATTIV_CONTR_LOCO VARCHAR2(20) NOT NULL,
    DESC_ATTIV_CONTR_LOCO VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_ATTIV_CONTR_LOCO PRIMARY KEY (ID_ATTIV_CONTR_LOCO) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_CHECKLIST"                                   */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_CHECKLIST (
    ID_STATO_CHECKLIST NUMBER(3) NOT NULL,
    DESC_BREVE_STATO_CHECKLIST VARCHAR2(20) NOT NULL,
    DESC_STATO_CHECKLIST VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_CHECKLIST PRIMARY KEY (ID_STATO_CHECKLIST)  USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_CAMPIONAMENTO_FINP"                                */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_CAMPIONAMENTO_FINP (
    ID_CAMPIONAMENTO NUMBER(8) NOT NULL,
    ID_FASE_CAMP NUMBER(3) NOT NULL,
    ID_TIPO_CAMP NUMBER(3) NOT NULL,
    FLAG_ANNULLATO VARCHAR2(1),
    DESC_CAMPIONAMENTO VARCHAR2(400),
    DT_CAMPIONAMENTO DATE,
    NUM_PROGETTI_SEL INTEGER,
    IMPORTO_VALIDATO NUMBER(17,2),
    PERC_ESTRATTA NUMBER(5,2),
    IMP_VAL_PERC_ESTRATTA NUMBER(17,2),
	NUM_CAMPIONAMENTO_ESTERNO  NUMBER(8),
	FLAG_CAMPIONAMENTO_ESTERNO VARCHAR2(1),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_CAMPIONAMENTO_FINP PRIMARY KEY (ID_CAMPIONAMENTO) USING INDEX TABLESPACE PBANDI_IDX
);

ALTER TABLE PBANDI_T_CAMPIONAMENTO_FINP ADD CONSTRAINT CC_PBANDI_T_CAMPIONAM_FINP_01 
    CHECK (FLAG_ANNULLATO='S');

ALTER TABLE PBANDI_T_CAMPIONAMENTO_FINP ADD CONSTRAINT CC_PBANDI_T_CAMPIONAM_FINP_02
    CHECK (FLAG_CAMPIONAMENTO_ESTERNO='S');


CREATE INDEX IE_PBANDI_T_CAMP_FINP_1 ON PBANDI_T_CAMPIONAMENTO_FINP (ID_FASE_CAMP) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_CAMP_FINP_2 ON PBANDI_T_CAMPIONAMENTO_FINP (ID_TIPO_CAMP) TABLESPACE PBANDI_IDX;

COMMENT ON COLUMN PBANDI_T_CAMPIONAMENTO_FINP.NUM_CAMPIONAMENTO_ESTERNO IS 'Parametro valorizzato per i campionamenti effettuati esternamente da Finpiemonte';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_CAMP_PROGETTI"                                     */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_R_CAMP_PROGETTI (
    ID_CAMPIONAMENTO NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
    DT_ULTIMO_CONTROLLO DATE,
    FLAG_ESCLUDI VARCHAR2(1),
    FLAG_ESTRATTO VARCHAR2(1),
    FLAG_CAMPIONATO VARCHAR2(1),
    MOTIVO_ESCLUSIONE VARCHAR2(4000),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_R_CAMP_PROGETTI PRIMARY KEY (ID_CAMPIONAMENTO, ID_PROGETTO) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_R_CAMP_PROGETTI_1 ON PBANDI_R_CAMP_PROGETTI (ID_PROGETTO) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_R_CAMP_PROGETTI ADD CONSTRAINT CC_PBANDI_R_CAMP_PROGETTI_01 
    CHECK (FLAG_ESCLUDI='S');

ALTER TABLE PBANDI_R_CAMP_PROGETTI ADD CONSTRAINT CC_PBANDI_R_CAMP_PROGETTI_02 
    CHECK (FLAG_ESTRATTO='S');

ALTER TABLE PBANDI_R_CAMP_PROGETTI ADD CONSTRAINT CC_PBANDI_R_CAMP_PROGETTI_03 
    CHECK (FLAG_CAMPIONATO='S');


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_RIC_CAMP_TIPO_DICH_SP"                             */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_R_RIC_CAMP_TIPO_DICH_SP (
    ID_CAMPIONAMENTO NUMBER(8) NOT NULL,
    ID_TIPO_DICHIARAZ_SPESA NUMBER(3) NOT NULL,
    CONSTRAINT PK_PBANDI_R_RIC_CAMP_TIPO_DSP PRIMARY KEY (ID_CAMPIONAMENTO, ID_TIPO_DICHIARAZ_SPESA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_R_RIC_CAMP_TIP_DS_1 ON PBANDI_R_RIC_CAMP_TIPO_DICH_SP (ID_TIPO_DICHIARAZ_SPESA) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_RIC_CAMP_BANDO_LINEA"                              */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_R_RIC_CAMP_BANDO_LINEA (
    ID_CAMPIONAMENTO NUMBER(8) NOT NULL,
    PROGR_BANDO_LINEA_INTERVENTO NUMBER(8) NOT NULL,
    CONSTRAINT PK_PBANDI_R_RIC_CAMP_BANDO_LIN PRIMARY KEY (ID_CAMPIONAMENTO, PROGR_BANDO_LINEA_INTERVENTO) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_R_RIC_CAMP_BL_01 ON PBANDI_R_RIC_CAMP_BANDO_LINEA (PROGR_BANDO_LINEA_INTERVENTO) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_RIC_CAMP_DICH_SP"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_RIC_CAMP_DICH_SP (
    ID_CAMPIONAMENTO NUMBER(8) NOT NULL,
    DT_RICEZIONE_DA DATE,
    DT_RICEZIONE_A DATE,
    DT_ULTIMO_ESITO_DA DATE,
    DT_ULTIMO_ESITO_A DATE,
    IMP_RENDICONTATO_DA NUMBER(17,2),
    IMP_RENDICONTATO_A NUMBER(13,2),
    IMP_VALIDATO_DA NUMBER(17,2),
    IMP_VALIDATO_A NUMBER(17,2),
    CONSTRAINT PK_PBANDI_T_RIC_CAMP_DICH_SP PRIMARY KEY (ID_CAMPIONAMENTO) USING INDEX TABLESPACE PBANDI_IDX
);

-- Controlli in loco
/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_CONTR_LOCO"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_CONTR_LOCO (
    ID_STATO_CONTR_LOCO NUMBER(3) NOT NULL,
    DESC_BREVE_STATO_CONTR_LOCO VARCHAR2(20) NOT NULL,
    DESC_STATO_CONTR_LOCO VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_CONTR_LOCO PRIMARY KEY (ID_STATO_CONTR_LOCO) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_RICH_INTEGRAZ"                               */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_RICH_INTEGRAZ (
    ID_STATO_RICHIESTA NUMBER(3) NOT NULL,
    DESC_BREVE_STATO_RICHIESTA VARCHAR2(20) NOT NULL,
    DESC_STATO_RICHIESTA VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_RICH_INTEGR PRIMARY KEY (ID_STATO_RICHIESTA) USING INDEX TABLESPACE PBANDI_IDX
);


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_CONTROLLO_LOCO"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_CONTROLLO_LOCO (
    ID_CONTROLLO_LOCO INTEGER NOT NULL,
    ID_STATO_CONTR_LOCO NUMBER(3),
    DT_AVVIO_CONTROLLI DATE,
    DT_INIZIO_CONTROLLI DATE,
    DT_FINE_CONTROLLI DATE,
    IMP_DA_CONTROLLARE NUMBER(17,2),
    IMP_IRREGOLARITA NUMBER(17,2),
    IMP_AGEVOLAZ_IRREG NUMBER(17,2),
    DT_VISITA_CONTROLLO DATE,
    TIPO_VISITA VARCHAR2(255),
    ISTRUTTORE_VISITA VARCHAR2(255),
    ID_CATEG_ANAGRAFICA NUMBER(3),
    ID_ATTIV_CONTR_LOCO NUMBER(3),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_CONTROLLO_LOCO PRIMARY KEY (ID_CONTROLLO_LOCO) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IDX_PBANDI_T_CONTROLLO_LOCO_1 ON PBANDI_T_CONTROLLO_LOCO (ID_STATO_CONTR_LOCO) TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_T_CONTROLLO_LOCO_2 ON PBANDI_T_CONTROLLO_LOCO (ID_CATEG_ANAGRAFICA) TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_T_CONTROLLO_LOCO_3 ON PBANDI_T_CONTROLLO_LOCO (ID_ATTIV_CONTR_LOCO) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_CAMP_CONTR_LOCO"                                   */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_R_CAMP_CONTR_LOCO (
    ID_CAMPIONAMENTO NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
    ID_CONTROLLO_LOCO INTEGER NOT NULL,
    CONSTRAINT PK_PBANDI_R_CAMP_CONTR_LOCO PRIMARY KEY (ID_CAMPIONAMENTO, ID_PROGETTO, ID_CONTROLLO_LOCO) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IDX_PBANDI_R_CAMP_CONTR_LOCO_1 ON PBANDI_R_CAMP_CONTR_LOCO (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IDX_PBANDI_R_CAMP_CONTR_LOCO_2 ON PBANDI_R_CAMP_CONTR_LOCO (ID_CONTROLLO_LOCO) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_CONTROLLO_LOCO_ALTRI"                              */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_CONTROLLO_LOCO_ALTRI (
    ID_CONTROLLO INTEGER NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
    ID_STATO_CONTR_LOCO NUMBER(3) NOT NULL,
    DT_INIZIO_CONTROLLI DATE,
    DT_FINE_CONTROLLI DATE,
    IMP_DA_CONTROLLARE NUMBER(17,2),
    IMP_IRREGOLARITA NUMBER(17,2),
    IMP_AGEVOLAZ_IRREG NUMBER(17,2),
    ID_CATEG_ANAGRAFICA NUMBER(3) NOT NULL,
    TIPO_CONTROLLI VARCHAR2(1),
    ISTRUTTORE_VISITA VARCHAR2(255),
    ID_ATTIV_CONTR_LOCO NUMBER(3),
    DT_AVVIO_CONTROLLI DATE,
    DT_VISITA_CONTROLLO DATE,
    TIPO_VISITA VARCHAR2(255),
    NUM_PROTOCOLLO VARCHAR2(30),
    ID_STATO_CHECKLIST NUMBER(3),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_CONTR_LOCO_ALTRI PRIMARY KEY (ID_CONTROLLO) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IDX_PBANDI_T_CONTR_LOCO_ALTR_1 ON PBANDI_T_CONTROLLO_LOCO_ALTRI (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IDX_PBANDI_T_CONTR_LOCO_ALTR_2 ON PBANDI_T_CONTROLLO_LOCO_ALTRI (ID_STATO_CONTR_LOCO) TABLESPACE PBANDI_IDX;

CREATE INDEX IDX_PBANDI_T_CONTR_LOCO_ALTR_3 ON PBANDI_T_CONTROLLO_LOCO_ALTRI (ID_CATEG_ANAGRAFICA) TABLESPACE PBANDI_IDX;

CREATE INDEX IDX_PBANDI_T_CONTR_LOCO_ALTR_4 ON PBANDI_T_CONTROLLO_LOCO_ALTRI (ID_ATTIV_CONTR_LOCO) TABLESPACE PBANDI_IDX;

CREATE INDEX IDX_PBANDI_T_CONTR_LOCO_ALTR_5 ON PBANDI_T_CONTROLLO_LOCO_ALTRI (ID_STATO_CHECKLIST) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_T_CONTROLLO_LOCO_ALTRI ADD CONSTRAINT CC_PBANDI_T_CONTR_LOCO_ALTR_01 
    CHECK (TIPO_CONTROLLI IN ('D','L'));

COMMENT ON COLUMN PBANDI_T_CONTROLLO_LOCO_ALTRI.TIPO_CONTROLLI IS 'D=Documentale L=Loco';
/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_RICHIESTA_INTEGRAZ"                                */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_RICHIESTA_INTEGRAZ (
    ID_RICHIESTA_INTEGRAZ NUMBER(8) NOT NULL,
    ID_ENTITA NUMBER(3) NOT NULL,
    ID_TARGET NUMBER(8) NOT NULL,
    DT_RICHIESTA DATE NOT NULL,
    DT_INVIO DATE,
    ID_UTENTE_RICHIESTA NUMBER(8) NOT NULL,
    ID_UTENTE_INVIO NUMBER(8),
    DT_NOTIFICA DATE,
    NUM_GIORNI_SCADENZA NUMBER(4),
    DT_CHIUSURA_UFFICIO DATE,
    ID_STATO_RICHIESTA NUMBER(3) NOT NULL,
    DT_SCADENZA DATE,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_RICHIESTA_INTEGRAZ PRIMARY KEY (ID_RICHIESTA_INTEGRAZ) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IDX_PBANDI_T_RICH_INTEGRAZ_1 ON PBANDI_T_RICHIESTA_INTEGRAZ (ID_ENTITA,ID_TARGET) TABLESPACE PBANDI_IDX;

CREATE INDEX IDX_PBANDI_T_RICH_INTEGRAZ_2 ON PBANDI_T_RICHIESTA_INTEGRAZ (ID_STATO_RICHIESTA) TABLESPACE PBANDI_IDX;

CREATE INDEX IDX_PBANDI_T_RICH_INTEGRAZ_3 ON PBANDI_T_RICHIESTA_INTEGRAZ (ID_UTENTE_RICHIESTA) TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_T_RICH_INTEGRAZ_4 ON PBANDI_T_RICHIESTA_INTEGRAZ (ID_UTENTE_INVIO) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Foreign key constraints                                                */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_T_CAMPIONAMENTO_FINP ADD CONSTRAINT FK_PBANDI_D_FASE_CAMP_01 
    FOREIGN KEY (ID_FASE_CAMP) REFERENCES PBANDI_D_FASE_CAMP (ID_FASE_CAMP);

ALTER TABLE PBANDI_T_CAMPIONAMENTO_FINP ADD CONSTRAINT FK_PBANDI_D_TIPO_CAMP_01 
    FOREIGN KEY (ID_TIPO_CAMP) REFERENCES PBANDI_D_TIPO_CAMP (ID_TIPO_CAMP);

ALTER TABLE PBANDI_R_CAMP_PROGETTI ADD CONSTRAINT FK_PBANDI_T_PROGETTO_76 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO);

ALTER TABLE PBANDI_R_CAMP_PROGETTI ADD CONSTRAINT FK_PBANDI_T_CAMP_FINP_02 
    FOREIGN KEY (ID_CAMPIONAMENTO) REFERENCES PBANDI_T_CAMPIONAMENTO_FINP (ID_CAMPIONAMENTO);

ALTER TABLE PBANDI_R_RIC_CAMP_TIPO_DICH_SP ADD CONSTRAINT FK_PBANDI_T_DICHIARAZ_SPESA_08 
    FOREIGN KEY (ID_TIPO_DICHIARAZ_SPESA) REFERENCES PBANDI_D_TIPO_DICHIARAZ_SPESA (ID_TIPO_DICHIARAZ_SPESA);

ALTER TABLE PBANDI_R_RIC_CAMP_TIPO_DICH_SP ADD CONSTRAINT FK_PBANDI_T_CAMP_FINP_03 
    FOREIGN KEY (ID_CAMPIONAMENTO) REFERENCES PBANDI_T_CAMPIONAMENTO_FINP (ID_CAMPIONAMENTO);

ALTER TABLE PBANDI_R_RIC_CAMP_BANDO_LINEA ADD CONSTRAINT FK_PBANDI_T_CAMP_FINP_01 
    FOREIGN KEY (ID_CAMPIONAMENTO) REFERENCES PBANDI_T_CAMPIONAMENTO_FINP (ID_CAMPIONAMENTO);

ALTER TABLE PBANDI_R_RIC_CAMP_BANDO_LINEA ADD CONSTRAINT FK_PBANDI_R_BANDO_LINEA_INT_31 
    FOREIGN KEY (PROGR_BANDO_LINEA_INTERVENTO) REFERENCES PBANDI_R_BANDO_LINEA_INTERVENT (PROGR_BANDO_LINEA_INTERVENTO);

ALTER TABLE PBANDI_T_RIC_CAMP_DICH_SP ADD CONSTRAINT FK_PBANDI_T_CAMP_FINP_04 
    FOREIGN KEY (ID_CAMPIONAMENTO) REFERENCES PBANDI_T_CAMPIONAMENTO_FINP (ID_CAMPIONAMENTO);
	
ALTER TABLE PBANDI_T_CONTROLLO_LOCO ADD CONSTRAINT FK_PBANDI_D_STATO_CONTR_LOCO_1 
    FOREIGN KEY (ID_STATO_CONTR_LOCO) REFERENCES PBANDI_D_STATO_CONTR_LOCO (ID_STATO_CONTR_LOCO);
	
ALTER TABLE PBANDI_T_CONTROLLO_LOCO ADD CONSTRAINT FK_PBANDI_D_CATEG_ANAG_10 
    FOREIGN KEY (ID_CATEG_ANAGRAFICA) REFERENCES PBANDI.PBANDI_D_CATEG_ANAGRAFICA (ID_CATEG_ANAGRAFICA);

ALTER TABLE PBANDI_R_CAMP_CONTR_LOCO ADD CONSTRAINT FK_PBANDI_R_CAMP_PROGETTI_1 
    FOREIGN KEY (ID_CAMPIONAMENTO, ID_PROGETTO) REFERENCES PBANDI_R_CAMP_PROGETTI (ID_CAMPIONAMENTO,ID_PROGETTO);

ALTER TABLE PBANDI_R_CAMP_CONTR_LOCO ADD CONSTRAINT FK_PBANDI_T_CONTR_LOCO_1 
    FOREIGN KEY (ID_CONTROLLO_LOCO) REFERENCES PBANDI_T_CONTROLLO_LOCO (ID_CONTROLLO_LOCO);


ALTER TABLE PBANDI_T_CONTROLLO_LOCO_ALTRI ADD CONSTRAINT FK_PBANDI_T_PROGETTO_83 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO);

ALTER TABLE PBANDI_T_CONTROLLO_LOCO_ALTRI ADD CONSTRAINT FK_PBANDI_D_STATO_CONTR_LOCO_2 
    FOREIGN KEY (ID_STATO_CONTR_LOCO) REFERENCES PBANDI_D_STATO_CONTR_LOCO (ID_STATO_CONTR_LOCO);

ALTER TABLE PBANDI_T_CONTROLLO_LOCO_ALTRI ADD CONSTRAINT FK_PBANDI_D_CATEG_ANAG_11 
    FOREIGN KEY (ID_CATEG_ANAGRAFICA) REFERENCES PBANDI.PBANDI_D_CATEG_ANAGRAFICA (ID_CATEG_ANAGRAFICA);

ALTER TABLE PBANDI_T_RICHIESTA_INTEGRAZ ADD CONSTRAINT FK_PBANDI_C_ENTITA_11 
    FOREIGN KEY (ID_ENTITA) REFERENCES PBANDI.PBANDI_C_ENTITA (ID_ENTITA);

ALTER TABLE PBANDI_T_RICHIESTA_INTEGRAZ ADD CONSTRAINT FK_PBANDI_D_STATO_RICH_INT_02 
    FOREIGN KEY (ID_STATO_RICHIESTA) REFERENCES PBANDI.PBANDI_D_STATO_RICH_INTEGRAZ (ID_STATO_RICHIESTA);

ALTER TABLE PBANDI_T_CONTROLLO_LOCO ADD CONSTRAINT FK_PBANDI_D_ATTIV_CONTR_LOCO_1 
    FOREIGN KEY (ID_ATTIV_CONTR_LOCO) REFERENCES PBANDI.PBANDI_D_ATTIV_CONTROLLO_LOCO (ID_ATTIV_CONTR_LOCO);

ALTER TABLE PBANDI_T_CONTROLLO_LOCO_ALTRI ADD CONSTRAINT FK_PBANDI_D_ATTIV_CONTR_LOCO_2 
    FOREIGN KEY (ID_ATTIV_CONTR_LOCO) REFERENCES PBANDI.PBANDI_D_ATTIV_CONTROLLO_LOCO (ID_ATTIV_CONTR_LOCO);

ALTER TABLE PBANDI_T_CONTROLLO_LOCO_ALTRI ADD CONSTRAINT FK_PBANDI_D_STATO_CHECKLIST_01 
    FOREIGN KEY (ID_STATO_CHECKLIST) REFERENCES PBANDI_D_STATO_CHECKLIST (ID_STATO_CHECKLIST);


ALTER TABLE PBANDI_T_CAMPIONAMENTO_FINP ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_354 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_355 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
    
ALTER TABLE PBANDI_R_CAMP_PROGETTI ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_356 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_357 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);
 
ALTER TABLE PBANDI_T_CONTROLLO_LOCO ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_374 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_375 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

ALTER TABLE PBANDI_T_CONTROLLO_LOCO_ALTRI ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_384
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_385 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

ALTER TABLE PBANDI_T_RICHIESTA_INTEGRAZ ADD
(
 CONSTRAINT FK_PBANDI_T_UTENTE_386
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_387 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_388 
 FOREIGN KEY (ID_UTENTE_RICHIESTA) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_389 
 FOREIGN KEY (ID_UTENTE_INVIO) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE)
    ON DELETE SET NULL);

	
-- configurazione
--PBANDI_D_STATO_CONTR_LOCO
Insert into PBANDI_D_STATO_CONTR_LOCO
   (ID_STATO_CONTR_LOCO, DESC_BREVE_STATO_CONTR_LOCO, DESC_STATO_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (1, 'ISTR', 'ISTRUTTORIA', TO_DATE('02/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_CONTR_LOCO
   (ID_STATO_CONTR_LOCO, DESC_BREVE_STATO_CONTR_LOCO, DESC_STATO_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (2, 'REG', 'REGOLARE', TO_DATE('02/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_CONTR_LOCO
   (ID_STATO_CONTR_LOCO, DESC_BREVE_STATO_CONTR_LOCO, DESC_STATO_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (3, 'SOSP', 'SOSPESO', TO_DATE('02/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_CONTR_LOCO
   (ID_STATO_CONTR_LOCO, DESC_BREVE_STATO_CONTR_LOCO, DESC_STATO_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (4, 'PARZ_NEG', 'PARZIALMENTE NEGATIVO', TO_DATE('02/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_CONTR_LOCO
   (ID_STATO_CONTR_LOCO, DESC_BREVE_STATO_CONTR_LOCO, DESC_STATO_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (5, 'NEG', 'NEGATIVO', TO_DATE('02/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_CAMP_STATO
Insert into PBANDI_D_CAMP_STATO
   (ID_STATO_CAMP, DESC_BREVE_STATO_CAMP, DESC_STATO_CAMP, DT_INIZIO_VALIDITA)
 Values
   (1, 'Tutte', 'Tutte', TO_DATE('01/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_CAMP_STATO
   (ID_STATO_CAMP, DESC_BREVE_STATO_CAMP, DESC_STATO_CAMP, DT_INIZIO_VALIDITA)
 Values
   (2, 'Non annull', 'Non Annullata', TO_DATE('01/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_CAMP_STATO
   (ID_STATO_CAMP, DESC_BREVE_STATO_CAMP, DESC_STATO_CAMP, DT_INIZIO_VALIDITA)
 Values
   (3, 'Ann', 'Annullata', TO_DATE('01/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_FASE_CAMP
Insert into PBANDI_D_FASE_CAMP
   (ID_FASE_CAMP, DESC_BREVE_FASE_CAMP, DESC_FASE_CAMP, DT_INIZIO_VALIDITA)
 Values
   (1, 'Elab', 'Elaborazione', TO_DATE('01/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_FASE_CAMP
   (ID_FASE_CAMP, DESC_BREVE_FASE_CAMP, DESC_FASE_CAMP, DT_INIZIO_VALIDITA)
 Values
   (2, 'Estr', 'Estrazione', TO_DATE('01/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_FASE_CAMP
   (ID_FASE_CAMP, DESC_BREVE_FASE_CAMP, DESC_FASE_CAMP, DT_INIZIO_VALIDITA)
 Values
   (3, 'Campionamento', 'Campionamento', TO_DATE('01/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_TIPO_CAMP
Insert into PBANDI_D_TIPO_CAMP
   (ID_TIPO_CAMP, DESC_BREVE_TIPO_CAMP, DESC_TIPO_CAMP, DT_INIZIO_VALIDITA)
 Values
   (1, 'Num_Aziende', 'Numero Aziende', TO_DATE('01/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_CAMP
   (ID_TIPO_CAMP, DESC_BREVE_TIPO_CAMP, DESC_TIPO_CAMP, DT_INIZIO_VALIDITA)
 Values
   (2, 'Q_cert', 'Quota Certificata', TO_DATE('01/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;


--PBANDI_D_ATTIV_CONTROLLO_LOCO
Insert into PBANDI_D_ATTIV_CONTROLLO_LOCO
   (ID_ATTIV_CONTR_LOCO, DESC_BREVE_ATTIV_CONTR_LOCO, DESC_ATTIV_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (1, 'ITER_AVVIO_CL', 'Avviato iter autorizzativo di avvio controllo in loco', TO_DATE('09/20/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIV_CONTROLLO_LOCO
   (ID_ATTIV_CONTR_LOCO, DESC_BREVE_ATTIV_CONTR_LOCO, DESC_ATTIV_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (2, 'ITER_AVVIO_CL_APPROV', 'iter autorizzativo di avvio controllo in loco approvato', TO_DATE('09/20/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIV_CONTROLLO_LOCO
   (ID_ATTIV_CONTR_LOCO, DESC_BREVE_ATTIV_CONTR_LOCO, DESC_ATTIV_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (3, 'ITER_AVVIO_CL_RIFIUT', 'iter autorizzativo di avvio controllo in loco rifiutato', TO_DATE('09/20/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIV_CONTROLLO_LOCO
   (ID_ATTIV_CONTR_LOCO, DESC_BREVE_ATTIV_CONTR_LOCO, DESC_ATTIV_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (4, 'ITER_INTEGR_CL', 'Avviato iter autorizzativo di richiesta di integrazione', TO_DATE('09/20/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIV_CONTROLLO_LOCO
   (ID_ATTIV_CONTR_LOCO, DESC_BREVE_ATTIV_CONTR_LOCO, DESC_ATTIV_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (5, 'ITER_INTEGR_CL_APPRO', 'Iter autorizzativo di richiesta di integrazione approvato', TO_DATE('09/20/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIV_CONTROLLO_LOCO
   (ID_ATTIV_CONTR_LOCO, DESC_BREVE_ATTIV_CONTR_LOCO, DESC_ATTIV_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (6, 'ITER_INTEGR_CL_RIFIU', 'Iter autorizzativo di richiesta di integrazione rifiutato', TO_DATE('09/20/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIV_CONTROLLO_LOCO
   (ID_ATTIV_CONTR_LOCO, DESC_BREVE_ATTIV_CONTR_LOCO, DESC_ATTIV_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (7, 'ITER_AV_ES_POS_CL', 'Avviato iter autorizzativo di esito controllo in loco positivo', TO_DATE('09/20/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIV_CONTROLLO_LOCO
   (ID_ATTIV_CONTR_LOCO, DESC_BREVE_ATTIV_CONTR_LOCO, DESC_ATTIV_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (8, 'ITER_AV_ES_POS_CL_AP', 'Iter autorizzativo di esito controllo in loco positivo approvato', TO_DATE('09/20/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIV_CONTROLLO_LOCO
   (ID_ATTIV_CONTR_LOCO, DESC_BREVE_ATTIV_CONTR_LOCO, DESC_ATTIV_CONTR_LOCO, DT_INIZIO_VALIDITA)
 Values
   (9, 'ITER_A_ES_POS_CL_RIF', 'Iter autorizzativo di esito controllo in loco positivo rifiutato', TO_DATE('09/20/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;


--PBANDI_D_STATO_RICH_INTEGRAZ
Insert into PBANDI_D_STATO_RICH_INTEGRAZ
   (ID_STATO_RICHIESTA, DESC_BREVE_STATO_RICHIESTA, DESC_STATO_RICHIESTA, DT_INIZIO_VALIDITA)
 Values
   (1, 'AUTORIZZATA', 'AUTORIZZATA IN ITER', TO_DATE('02/03/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_RICH_INTEGRAZ
   (ID_STATO_RICHIESTA, DESC_BREVE_STATO_RICHIESTA, DESC_STATO_RICHIESTA, DT_INIZIO_VALIDITA)
 Values
   (2, 'INVIATA', 'INVIATA DAL BENEFICIARIO', TO_DATE('02/03/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_RICH_INTEGRAZ
   (ID_STATO_RICHIESTA, DESC_BREVE_STATO_RICHIESTA, DESC_STATO_RICHIESTA, DT_INIZIO_VALIDITA)
 Values
   (3, 'CHIUSA_UFFICIO', 'CHIUSA D''UFFICIO', TO_DATE('02/03/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_RICH_INTEGRAZ
   (ID_STATO_RICHIESTA, DESC_BREVE_STATO_RICHIESTA, DESC_STATO_RICHIESTA, DT_INIZIO_VALIDITA)
 Values
   (4, 'IN_AUTORIZZAZIONE', 'ITER IN CORSO', TO_DATE('09/27/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_RICH_INTEGRAZ
   (ID_STATO_RICHIESTA, DESC_BREVE_STATO_RICHIESTA, DESC_STATO_RICHIESTA, DT_INIZIO_VALIDITA)
 Values
   (5, 'RESPINTA', 'RESPINTA IN ITER', TO_DATE('09/27/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_STATO_CHECKLIST
Insert into PBANDI_D_STATO_CHECKLIST
   (ID_STATO_CHECKLIST, DESC_BREVE_STATO_CHECKLIST, DESC_STATO_CHECKLIST, DT_INIZIO_VALIDITA)
 Values
   (1, 'BZ', 'Bozza', TO_DATE('05/10/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_CHECKLIST
   (ID_STATO_CHECKLIST, DESC_BREVE_STATO_CHECKLIST, DESC_STATO_CHECKLIST, DT_INIZIO_VALIDITA)
 Values
   (2, 'DF', 'Definitivo', TO_DATE('05/10/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;


/* ---------------------------------------------------------------------- */
/* Script generated with: DeZign for Databases v6.2.1                     */
/* Target DBMS:           Oracle 11g                                      */
/* Project file:          Integrazione_Spesa_modello_fisico.dez           */
/* Project name:                                                          */
/* Author:                                                                */
/* Script type:           Database creation script                        */
/* Created on:            2022-02-03 16:59                                */
/* ---------------------------------------------------------------------- */

/* ---------------------------------------------------------------------- */
/* Sequence                                                                 */
/* ---------------------------------------------------------------------- */
--PBANDI_T_PROROGA
CREATE SEQUENCE SEQ_PBANDI_T_PROROGA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;


/* ---------------------------------------------------------------------- */
/* Tables                                                                 */
/* ---------------------------------------------------------------------- */
--PBANDI_T_FILE_ENTITA
--ALTER TABLE PBANDI_T_FILE_ENTITA ADD ID_INTEGRAZIONE_SPESA NUMBER(8);

CREATE INDEX IE3_PBANDI_T_FILE_ENTITA ON PBANDI_T_FILE_ENTITA (ID_INTEGRAZIONE_SPESA) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* ALTER table "PBANDI_T_INTEGRAZIONE_SPESA"                                */
/* ---------------------------------------------------------------------- */
/*  Già eseguito in produzione
ALTER TABLE PBANDI_T_INTEGRAZIONE_SPESA  ADD (
    DT_NOTIFICA DATE,
    NUM_GIORNI_SCADENZA NUMBER(4),
    DT_CHIUSURA_UFFICIO DATE,
    ID_STATO_RICHIESTA NUMBER(3));

*/

CREATE INDEX IE4_PBANDI_INTEGRAZ_SPESA ON PBANDI_T_INTEGRAZIONE_SPESA (ID_STATO_RICHIESTA) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_T_INTEGRAZIONE_SPESA MODIFY DESCRIZIONE NULL;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_PROROGA"                                     */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_PROROGA (
    ID_STATO_PROROGA NUMBER(3) NOT NULL,
    DESC_BREVE_STATO_PROROGA VARCHAR2(20) NOT NULL,
    DESC_STATO_PROROGA VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_PROROGA PRIMARY KEY (ID_STATO_PROROGA) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_PROROGA"                                           */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_PROROGA (
    ID_RICHIESTA_PROROGA NUMBER(8) NOT NULL,
    ID_ENTITA NUMBER(3),
    ID_TARGET NUMBER(8) NOT NULL,
    DT_RICHIESTA DATE NOT NULL,
    NUM_GIORNI_RICH NUMBER(3) NOT NULL,
    MOTIVAZIONE VARCHAR(2000) NOT NULL,
    NUM_GIORNI_APPROV NUMBER(3),
    ID_STATO_PROROGA NUMBER(3),
    DT_ESITO_RICHIESTA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_PROROGA PRIMARY KEY (ID_RICHIESTA_PROROGA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_T_PROROGA ON PBANDI_T_PROROGA (ID_ENTITA,ID_TARGET) TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_PBANDI_T_PROROGA ON PBANDI_T_PROROGA (ID_STATO_PROROGA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE3_PBANDI_T_PROROGA ON PBANDI_T_PROROGA (ID_UTENTE_INS) TABLESPACE PBANDI_IDX;

CREATE INDEX IE4_PBANDI_T_PROROGA ON PBANDI_T_PROROGA (ID_UTENTE_AGG) TABLESPACE PBANDI_IDX;

COMMENT ON COLUMN PBANDI_T_PROROGA.ID_ENTITA IS 'Individua la tabella PBANDI_T_CONTRODEDUZ o PBANDI_T_RICHIESTA_INTEGRAZ';

/*
/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_C_AGEV_FINISTR"                                     */
/* ---------------------------------------------------------------------- */

/*CREATE TABLE PBANDI_C_AGEV_FINISTR (
    ID_MODALITA_AGEVOLAZIONE NUMBER(3) NOT NULL,
    ID_FORMA_FINANZIAMENTO_FIN NUMBER(3) NOT NULL,
	DESC_FORMA_FINANZIAMENTO_FIN  VARCHAR2(200),
	TIPO_FORMA_FINANZIAMENTO_FIN VARCHAR2(1),
    CONSTRAINT PK_PBANDI_C_AGEV_FINISTR PRIMARY KEY (ID_MODALITA_AGEVOLAZIONE,ID_FORMA_FINANZIAMENTO_FIN) USING INDEX TABLESPACE PBANDI_IDX
);

ALTER TABLE PBANDI_C_AGEV_FINISTR ADD CONSTRAINT UK_PBANDI_D_MODALITA_AGEVOL_01 
    UNIQUE (ID_FORMA_FINANZIAMENTO_FIN)  USING INDEX TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_C_AGEV_FINISTR ADD CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_34 
    FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE) REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE);

COMMENT ON TABLE PBANDI_C_AGEV_FINISTR IS 'Tabella di raccordo flusso FINISTR-PBAN per le agevolazioni';

--CREATE UNIQUE INDEX IE1_PBANDI_C_AGEV_FINISTR ON PBANDI_C_AGEV_FINISTR (ID_FORMA_FINANZIAMENTO_FIN) TABLESPACE PBANDI_IDX;
*/

/* ---------------------------------------------------------------------- */
/* Foreign key constraints                                                */
/* ---------------------------------------------------------------------- */




ALTER TABLE PBANDI_T_INTEGRAZIONE_SPESA ADD CONSTRAINT FK_PBANDI_D_STATO_RICH_INT_01 
    FOREIGN KEY (ID_STATO_RICHIESTA) REFERENCES PBANDI_D_STATO_RICH_INTEGRAZ (ID_STATO_RICHIESTA);

ALTER TABLE PBANDI_T_PROROGA ADD CONSTRAINT FK_PBANDI_C_ENTITA_10 
    FOREIGN KEY (ID_ENTITA) REFERENCES PBANDI_C_ENTITA (ID_ENTITA);

ALTER TABLE PBANDI_T_PROROGA ADD CONSTRAINT FK_PBANDI_D_STATO_PROROGA_01 
    FOREIGN KEY (ID_STATO_PROROGA) REFERENCES PBANDI_D_STATO_PROROGA (ID_STATO_PROROGA);

ALTER TABLE PBANDI_T_PROROGA ADD CONSTRAINT FK_PBANDI_T_UTENTE_381 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_PROROGA ADD CONSTRAINT FK_PBANDI_T_UTENTE_380 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);
	
ALTER TABLE PBANDI_T_FILE_ENTITA ADD CONSTRAINT FK_PBANDI_T_INTEGR_SPESA_01 
    FOREIGN KEY (ID_INTEGRAZIONE_SPESA) REFERENCES PBANDI_T_INTEGRAZIONE_SPESA (ID_INTEGRAZIONE_SPESA);
	
	
-- Configurazione

  
--PBANDI_C_TIPO_DOCUMENTO_INDEX  
UPDATE PBANDI_C_TIPO_DOCUMENTO_INDEX
  SET  FLAG_UPLOADABLE = 'S'
WHERE  ID_TIPO_DOCUMENTO_INDEX = 2;


--PBANDI_D_STATO_PROROGA
Insert into PBANDI_D_STATO_PROROGA
   (ID_STATO_PROROGA, DESC_BREVE_STATO_PROROGA, DESC_STATO_PROROGA, DT_INIZIO_VALIDITA)
 Values
   (1, 'INVIATA', 'INVIATA', TO_DATE('03/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_PROROGA
   (ID_STATO_PROROGA, DESC_BREVE_STATO_PROROGA, DESC_STATO_PROROGA, DT_INIZIO_VALIDITA)
 Values
   (2, 'APPROVATA', 'APPROVATA', TO_DATE('03/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_PROROGA
   (ID_STATO_PROROGA, DESC_BREVE_STATO_PROROGA, DESC_STATO_PROROGA, DT_INIZIO_VALIDITA)
 Values
   (3, 'RESPINTA', 'RESPINTA', TO_DATE('03/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_PROROGA
   (ID_STATO_PROROGA, DESC_BREVE_STATO_PROROGA, DESC_STATO_PROROGA, DT_INIZIO_VALIDITA)
 Values
   (4, 'CHIUSA', 'CHIUSA', TO_DATE('03/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_TASK   
UPDATE PBANDI_D_TASK
  SET descr_task =   'Gestione integrazioni' 
  where id_task = 56;

Insert into PBANDI_D_METODO_TASK
   (ID_METODO_TASK, DESCR_BREVE_METODO_TASK, DESCR_METODO_TASK)
 Values
   (34, 'FN_RICH_INTEGRAZ', 'Metodo di controllo per il task RICH_INTEGRAZ');

Insert into PBANDI_D_TASK
   (ID_TASK, DESCR_BREVE_TASK, DESCR_TASK, ID_TIPO_TASK, ID_METODO_TASK)
 Values
   (78, 'RICH_INTEGRAZ', 'Gestione integrazioni', 5, 34);
   
Insert into PBANDI_T_STEP_PROCESSO
   (ID_STEP_PROCESSO, ID_TASK_PREC, ID_TASK, ID_PROCESSO)
 Values
   (208, 10, 78, 2);
   
Insert into PBANDI_R_STEP_PROCESSO_RUOLO
   (ID_STEP_PROCESSO, ID_RUOLO_DI_PROCESSO)
 Values
   (208, 2);
Insert into PBANDI_R_STEP_PROCESSO_RUOLO
   (ID_STEP_PROCESSO, ID_RUOLO_DI_PROCESSO)
 Values
   (208, 4);
Insert into PBANDI_R_STEP_PROCESSO_RUOLO
   (ID_STEP_PROCESSO, ID_RUOLO_DI_PROCESSO)
 Values
   (208, 9);
COMMIT;


   
COMMIT;


/* ---------------------------------------------------------------------- */
/* Script generated with: DeZign for Databases v6.2.1                     */
/* Target DBMS:           Oracle 11g                                      */
/* Project file:          Erogazioni_modello_fisico.dez                 */
/* Project name:                                                          */
/* Author:                                                                */
/* Script type:           Database creation script                        */
/* Created on:            2021-11-05 20:23                                */
/* ---------------------------------------------------------------------- */


/* ---------------------------------------------------------------------- */
/* Sequences                                                              */
/* ---------------------------------------------------------------------- */

--PBANDI_T_PROPOSTA_EROGAZIONE
CREATE SEQUENCE SEQ_PBANDI_T_PROP_EROGAZIONE
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;


--PBANDI_T_DISTINTA
CREATE SEQUENCE SEQ_PBANDI_T_DISTINTA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;	
	
--PBANDI_T_DISTINTA_DETT
CREATE SEQUENCE SEQ_PBANDI_T_DISTINTA_DETT
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;	

--PBANDI_T_PROP_EROG_CTRL_RNA	
CREATE SEQUENCE SEQ_PBANDI_T_PROP_ER_CTRL_RNA
  START WITH 1
  INCREMENT BY 1
  NOMINVALUE
  NOMAXVALUE
  NOCYCLE
  NOCACHE
  NOORDER;
	
	
/* ---------------------------------------------------------------------- */
/* Tables                                                                 */
/* ---------------------------------------------------------------------- */



/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_DISTINTA"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_DISTINTA (
    ID_STATO_DISTINTA NUMBER(3) NOT NULL,
    DESC_STATO_DISTINTA VARCHAR2(255) NOT NULL,
    DESC_BREVE_STATO_DISTINTA VARCHAR2(20) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_DISTINTA PRIMARY KEY (ID_STATO_DISTINTA) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_TIPO_DISTINTA"                                       */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_TIPO_DISTINTA (
    ID_TIPO_DISTINTA NUMBER(3) NOT NULL,
    DESC_TIPO_DISTINTA VARCHAR2(255) NOT NULL,
    DESC_BREVE_TIPO_DISTINTA VARCHAR2(20) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_TIPO_DISTINTA PRIMARY KEY (ID_TIPO_DISTINTA) USING INDEX TABLESPACE PBANDI_IDX
);


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_DISTINTA"                                          */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_DISTINTA (
    ID_DISTINTA NUMBER(8) NOT NULL,
    ID_ENTITA NUMBER(3) NOT NULL,
    ID_TIPO_DISTINTA NUMBER(3) NOT NULL,
    ID_MODALITA_AGEVOLAZIONE NUMBER(3) NOT NULL,
    DESCRIZIONE VARCHAR2(250),
    ID_ESTREMI_BANCARI NUMBER(8),
    ID_STATO_DISTINTA NUMBER(3) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
	CODICE_DISTINTA NUMBER(8),
    CONSTRAINT PK_PBANDI_T_DISTINTA PRIMARY KEY (ID_DISTINTA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_DISTINTA_1 ON PBANDI_T_DISTINTA (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_DISTINTA_2 ON PBANDI_T_DISTINTA (ID_ESTREMI_BANCARI) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_DISTINTA_3 ON PBANDI_T_DISTINTA (ID_ENTITA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_DISTINTA_4 ON PBANDI_T_DISTINTA (ID_TIPO_DISTINTA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_DISTINTA_5 ON PBANDI_T_DISTINTA (CODICE_DISTINTA) TABLESPACE PBANDI_IDX;

COMMENT ON COLUMN PBANDI_T_DISTINTA.DESCRIZIONE IS 'Contiene la descrizione della distinta inserita dall''istruttore in dettaglio distinta';

COMMENT ON COLUMN PBANDI_T_DISTINTA.ID_ESTREMI_BANCARI IS 'Indica la banca tesoriera selezionata dall''istruttore in dettaglio distinta. Se è presente una sola banca tesoriera per il Bando/Modalità di agevolazione viene usata di default.';

COMMENT ON COLUMN PBANDI_T_DISTINTA.CODICE_DISTINTA IS 'Codice distinta da migrazione Finpis';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_DISTINTA_DETT"                                     */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_DISTINTA_DETT (
    ID_DISTINTA_DETT NUMBER(8) NOT NULL,
    ID_DISTINTA NUMBER(8) NOT NULL,
    ID_TARGET NUMBER(8) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_DISTINTA_DETT PRIMARY KEY (ID_DISTINTA_DETT) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_DISTINTA_DETT_1 ON PBANDI_T_DISTINTA_DETT (ID_DISTINTA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_DISTINTA_DETT_2 ON PBANDI_T_DISTINTA_DETT (ID_TARGET) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_PROPOSTA_EROGAZIONE"                               */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_PROPOSTA_EROGAZIONE (
    ID_PROPOSTA NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
    FLAG_CTRL_PRE_EROGAZIONE VARCHAR2(1),
    IMP_LORDO NUMBER(17,2),
    IMP_IRES NUMBER(17,2),
	IMP_DA_EROGARE NUMBER(17,2),
    DT_CONTROLLI DATE,
    ID_MODALITA_AGEVOLAZIONE NUMBER(3),
	DT_VALIDAZIONE_SPESA DATE,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_PROPOSTA_EROGAZ PRIMARY KEY (ID_PROPOSTA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_PROPOSTA_EROGAZ_1 ON PBANDI_T_PROPOSTA_EROGAZIONE (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_PROPOSTA_EROGAZ_2 ON PBANDI_T_PROPOSTA_EROGAZIONE (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_T_PROPOSTA_EROGAZIONE ADD CONSTRAINT CC_PBANDI_T_PROPOSTA_EROGAZ_01 
    CHECK (FLAG_CTRL_PRE_EROGAZIONE IN('S','N'));

COMMENT ON COLUMN PBANDI_T_PROPOSTA_EROGAZIONE.FLAG_CTRL_PRE_EROGAZIONE IS 'Indica se sono stati eseguiti i controlli pre-erogazione. Valorizzata a S al salvataggio dei controlli di pre-erogazione.';

COMMENT ON COLUMN PBANDI_T_PROPOSTA_EROGAZIONE.IMP_LORDO IS 'E'' l''importo lordo da erogare.  E'' inserito manualmente dall''utente in fase di esito della validazione della spesa oppure è inserito automaticamente dal flusso XML che ci porta i dati dall''istruttoria. ';

COMMENT ON COLUMN PBANDI_T_PROPOSTA_EROGAZIONE.IMP_IRES IS 'E'' l''importo IRES.  E'' inserito manualmente dall''utente in fase di esito della validazione della spesa. Viene proposto nella ricerca delle proposte di erogazione.';

COMMENT ON COLUMN PBANDI_T_PROPOSTA_EROGAZIONE.DT_CONTROLLI IS 'E'' la data dei controlli pre-erogazione eseguiti.  Inserita automaticamente al salvataggio dei controlli di pre-erogazione';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_CTRL_NA_EROGAZIONE"                                */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_R_CTRL_NA_EROGAZIONE (
    ID_PROPOSTA NUMBER(8) NOT NULL,
    ID_TIPO_RICHIESTA NUMBER(3) NOT NULL,
    MOTIVAZIONE VARCHAR2(250),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT UK_PBANDI_R_CTRL_NA_EROGAZIONE UNIQUE (ID_PROPOSTA, ID_TIPO_RICHIESTA,  DT_FINE_VALIDITA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_R_CTRL_NA_EROGAZ_1 ON PBANDI_R_CTRL_NA_EROGAZIONE (ID_TIPO_RICHIESTA)  TABLESPACE PBANDI_IDX;

COMMENT ON TABLE PBANDI_R_CTRL_NA_EROGAZIONE IS 'Tabella di Non Applicabilità del controllo all'' Erogazione';

COMMENT ON COLUMN PBANDI_R_CTRL_NA_EROGAZIONE.MOTIVAZIONE IS 'Motivazione della non applicabilità del controllo';

/*---------------------------------------------*/
/*------ALTER TABLE PBANDI_T_EROGAZIONE--------*/
/*---------------------------------------------*/
ALTER TABLE PBANDI_T_EROGAZIONE ADD ID_DISTINTA NUMBER(8);
CREATE INDEX IE2_PBANDI_T_EROGAZIONE ON PBANDI_T_EROGAZIONE (ID_DISTINTA);

ALTER TABLE PBANDI_T_EROGAZIONE ADD IMP_IRES NUMBER(17,2);
ALTER TABLE PBANDI_T_EROGAZIONE MODIFY COD_RIFERIMENTO_EROGAZIONE VARCHAR2(30);

/*---------------------------------------------*/
/*------ALTER TABLE PBANDI_T_RECUPERO--------*/
/*---------------------------------------------*/
ALTER TABLE PBANDI_T_RECUPERO MODIFY COD_RIFERIMENTO_RECUPERO VARCHAR2(30);

ALTER TABLE PBANDI_T_RECUPERO ADD ID_DISTINTA NUMBER(8);
CREATE INDEX IE3_PBANDI_T_RECUPERO ON PBANDI_T_RECUPERO (ID_DISTINTA);



/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_PROP_EROG_CTRL_RNA"                                */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_PROP_EROG_CTRL_RNA
(ID_PROP_EROG_CTRL_RNA number(8) NOT NULL,
  ID_SOGGETTO number (8) NOT NULL,
  ESITO number(1) NOT NULL,
  DT_EMISSIONE  date NOT NULL,
  DT_SCADENZA   date NOT NULL,
  CODICE_UNIVOCO varchar2(20),
  ID_UTENTE_INS	number(8) NOT NULL,
  ID_UTENTE_AGG	number(8),
  DT_INIZIO_VALIDITA date NOT NULL,
  DT_FINE_VALIDITA date,
  CONSTRAINT PK_PBANDI_T_PROP_EROG_CTRL_RNA PRIMARY KEY (ID_PROP_EROG_CTRL_RNA) USING INDEX TABLESPACE PBANDI_IDX
);

COMMENT ON COLUMN PBANDI_T_PROP_EROG_CTRL_RNA.ID_PROP_EROG_CTRL_RNA IS ' E'' l''ID del record.';
COMMENT ON COLUMN PBANDI_T_PROP_EROG_CTRL_RNA.ID_SOGGETTO IS 'Identifica il Soggetto al quale si riferisce il progetto della proposta di erogazione.';
COMMENT ON COLUMN PBANDI_T_PROP_EROG_CTRL_RNA.ESITO IS 'Indica il tipo di esito. 1=positivo; 2=negativo';
COMMENT ON COLUMN PBANDI_T_PROP_EROG_CTRL_RNA.DT_EMISSIONE IS  'E'' la data di richiesta del Deggendorf.';
COMMENT ON COLUMN PBANDI_T_PROP_EROG_CTRL_RNA.DT_SCADENZA  IS 'E'' la data di scadenza del Deggendorf.';
COMMENT ON COLUMN PBANDI_T_PROP_EROG_CTRL_RNA.CODICE_UNIVOCO IS ' Contiene un codice univoco staccato dalla procedura di verifica RNA da inserire nella lettera di erogazione del beneficiario.';
COMMENT ON COLUMN PBANDI_T_PROP_EROG_CTRL_RNA.ID_UTENTE_INS	IS 'E'' l''utente che ha inserito il record.';
COMMENT ON COLUMN PBANDI_T_PROP_EROG_CTRL_RNA.ID_UTENTE_AGG	IS 'E'' l''utente che ha aggiornato il record.';
COMMENT ON COLUMN PBANDI_T_PROP_EROG_CTRL_RNA.DT_INIZIO_VALIDITA	IS 'E'' la data di inizio validità del record.';
COMMENT ON COLUMN PBANDI_T_PROP_EROG_CTRL_RNA.DT_FINE_VALIDITA	IS 'E'' la data di fine validità del record (per la cancellazione logica del record).';

ALTER TABLE PBANDI_T_PROP_EROG_CTRL_RNA ADD CONSTRAINT CC_PBANDI_T_PRO_ER_CTRL_RNA_01 
    CHECK (ESITO IN(1,2));


CREATE INDEX IE1_PBANDI_T_PROP_ER_CTRL_RNA ON PBANDI_T_PROP_EROG_CTRL_RNA (ID_SOGGETTO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE2_PBANDI_T_PROP_ER_CTRL_RNA ON PBANDI_T_PROP_EROG_CTRL_RNA (ID_UTENTE_INS) TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_T_PROP_ER_CTRL_RNA ON PBANDI_T_PROP_EROG_CTRL_RNA (ID_UTENTE_AGG) TABLESPACE PBANDI_IDX;



/* ---------------------------------------------------------------------- */
/* Foreign key constraints                                                */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_T_DISTINTA ADD CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_11 
    FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE) REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE);

ALTER TABLE PBANDI_T_DISTINTA ADD CONSTRAINT FK_PBANDI_T_ESTREMI_BANCARI_06 
    FOREIGN KEY (ID_ESTREMI_BANCARI) REFERENCES PBANDI_T_ESTREMI_BANCARI (ID_ESTREMI_BANCARI);

ALTER TABLE PBANDI_T_DISTINTA ADD CONSTRAINT FK_PBANDI_D_STATO_DISTINTA_01 
    FOREIGN KEY (ID_STATO_DISTINTA) REFERENCES PBANDI_D_STATO_DISTINTA (ID_STATO_DISTINTA);

ALTER TABLE PBANDI_T_DISTINTA ADD CONSTRAINT FK_PBANDI_T_UTENTE_392 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_DISTINTA ADD CONSTRAINT FK_PBANDI_T_UTENTE_393 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_DISTINTA ADD CONSTRAINT FK_PBANDI_C_ENTITA_12 
    FOREIGN KEY (ID_ENTITA) REFERENCES PBANDI.PBANDI_C_ENTITA (ID_ENTITA);

ALTER TABLE PBANDI_T_DISTINTA ADD CONSTRAINT FK_PBANDI_D_TIPO_DISTINTA_01 
    FOREIGN KEY (ID_TIPO_DISTINTA) REFERENCES PBANDI_D_TIPO_DISTINTA (ID_TIPO_DISTINTA);

ALTER TABLE PBANDI_T_PROPOSTA_EROGAZIONE ADD CONSTRAINT FK_PBANDI_T_PROGETTO_85 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO);

ALTER TABLE PBANDI_T_PROPOSTA_EROGAZIONE ADD CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_12 
    FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE) REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE);

ALTER TABLE PBANDI_T_PROPOSTA_EROGAZIONE ADD CONSTRAINT FK_PBANDI_T_UTENTE_394 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_PROPOSTA_EROGAZIONE ADD CONSTRAINT FK_PBANDI_T_UTENTE_395 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_R_CTRL_NA_EROGAZIONE ADD CONSTRAINT FK_PBANDI_T_PROPOSTA_EROG_01 
    FOREIGN KEY (ID_PROPOSTA) REFERENCES PBANDI_T_PROPOSTA_EROGAZIONE (ID_PROPOSTA);

ALTER TABLE PBANDI_R_CTRL_NA_EROGAZIONE ADD CONSTRAINT FK_PBANDI_D_TIPO_RICH_02 
    FOREIGN KEY (ID_TIPO_RICHIESTA) REFERENCES PBANDI.PBANDI_D_TIPO_RICHIESTA (ID_TIPO_RICHIESTA);

ALTER TABLE PBANDI_R_CTRL_NA_EROGAZIONE ADD CONSTRAINT FK_PBANDI_T_UTENTE_396 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_R_CTRL_NA_EROGAZIONE ADD CONSTRAINT FK_PBANDI_T_UTENTE_397 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_DISTINTA_DETT ADD CONSTRAINT FK_PBANDI_T_DISTINTA_01 
    FOREIGN KEY (ID_DISTINTA) REFERENCES PBANDI_T_DISTINTA (ID_DISTINTA);

ALTER TABLE PBANDI_T_DISTINTA_DETT ADD CONSTRAINT FK_PBANDI_T_UTENTE_398 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_DISTINTA_DETT ADD CONSTRAINT FK_PBANDI_T_UTENTE_399 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_EROGAZIONE ADD CONSTRAINT FK_PBANDI_T_DISTINTA_02 
    FOREIGN KEY (ID_DISTINTA) REFERENCES PBANDI_T_DISTINTA (ID_DISTINTA);

ALTER TABLE PBANDI_T_RECUPERO ADD CONSTRAINT FK_PBANDI_T_DISTINTA_04 
    FOREIGN KEY (ID_DISTINTA) REFERENCES PBANDI_T_DISTINTA (ID_DISTINTA);


ALTER TABLE PBANDI_T_PROP_EROG_CTRL_RNA ADD (
  CONSTRAINT fk_pbandi_t_soggetto_36
  FOREIGN KEY (ID_SOGGETTO) 
  REFERENCES PBANDI_T_SOGGETTO (ID_SOGGETTO));

-- FK 
ALTER TABLE PBANDI_T_PROP_EROG_CTRL_RNA ADD (
  CONSTRAINT fk_pbandi_t_utente_404
  FOREIGN KEY (ID_UTENTE_INS) 
  REFERENCES PBANDI_T_UTENTE (ID_UTENTE));

-- FK 
ALTER TABLE PBANDI_T_PROP_EROG_CTRL_RNA ADD (
  CONSTRAINT fk_pbandi_t_utente_405
  FOREIGN KEY (ID_UTENTE_AGG) 
  REFERENCES PBANDI_T_UTENTE (ID_UTENTE));

-- Configurazione DB  
--PBANDI_D_STATO_DISTINTA
Insert into PBANDI_D_STATO_DISTINTA
   (ID_STATO_DISTINTA, DESC_STATO_DISTINTA, DESC_BREVE_STATO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (1, 'CREATA', 'CR', TO_DATE('06/24/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_DISTINTA
   (ID_STATO_DISTINTA, DESC_STATO_DISTINTA, DESC_BREVE_STATO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (2, 'RESPINTA REFERENTE', 'RREF', TO_DATE('06/24/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_DISTINTA
   (ID_STATO_DISTINTA, DESC_STATO_DISTINTA, DESC_BREVE_STATO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (3, 'RESPINTA RESPONSABILE', 'RRESP', TO_DATE('06/24/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_DISTINTA
   (ID_STATO_DISTINTA, DESC_STATO_DISTINTA, DESC_BREVE_STATO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (4, 'RESPINTA AMMINISTRATIVO CONTABILE', 'RAC', TO_DATE('06/24/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_DISTINTA
   (ID_STATO_DISTINTA, DESC_STATO_DISTINTA, DESC_BREVE_STATO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (5, 'APPROVATA', 'APP', TO_DATE('06/24/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_DISTINTA
   (ID_STATO_DISTINTA, DESC_STATO_DISTINTA, DESC_BREVE_STATO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (6, 'PAGATA', 'PAG', TO_DATE('06/24/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_DISTINTA
   (ID_STATO_DISTINTA, DESC_STATO_DISTINTA, DESC_BREVE_STATO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (7, 'IN BOZZA', 'BZZ', TO_DATE('06/24/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_DISTINTA
   (ID_STATO_DISTINTA, DESC_STATO_DISTINTA, DESC_BREVE_STATO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (8, 'INVIATA AD AMM CONTABILE ', 'INAMM', TO_DATE('06/24/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_DISTINTA
   (ID_STATO_DISTINTA, DESC_STATO_DISTINTA, DESC_BREVE_STATO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (9, 'RESPINTA DIRIGENTE', 'RRDIR', TO_DATE('06/24/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_TIPO_DISTINTA
Insert into PBANDI_D_TIPO_DISTINTA
   (ID_TIPO_DISTINTA, DESC_TIPO_DISTINTA, DESC_BREVE_TIPO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (1, 'ESCUSSIONE', 'ES', TO_DATE('07/04/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_DISTINTA
   (ID_TIPO_DISTINTA, DESC_TIPO_DISTINTA, DESC_BREVE_TIPO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (2, 'REVOCA', 'RV', TO_DATE('07/04/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_DISTINTA
   (ID_TIPO_DISTINTA, DESC_TIPO_DISTINTA, DESC_BREVE_TIPO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (3, 'SALDO E STRALCIO', 'SS', TO_DATE('07/04/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_DISTINTA
   (ID_TIPO_DISTINTA, DESC_TIPO_DISTINTA, DESC_BREVE_TIPO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (4, 'PASSAGGIO A PERDITA', 'PP', TO_DATE('07/04/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_DISTINTA
   (ID_TIPO_DISTINTA, DESC_TIPO_DISTINTA, DESC_BREVE_TIPO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (5, 'CESSIONE QUOTE', 'CQ', TO_DATE('07/04/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_DISTINTA
   (ID_TIPO_DISTINTA, DESC_TIPO_DISTINTA, DESC_BREVE_TIPO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (6, 'CONTRIBUTO', 'ER', TO_DATE('07/04/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_DISTINTA
   (ID_TIPO_DISTINTA, DESC_TIPO_DISTINTA, DESC_BREVE_TIPO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (7, 'FINANZIAMENTO AGEVOLATO', 'ER', TO_DATE('07/04/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_DISTINTA
   (ID_TIPO_DISTINTA, DESC_TIPO_DISTINTA, DESC_BREVE_TIPO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (8, 'GARANZIA', 'ER', TO_DATE('07/04/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_DISTINTA
   (ID_TIPO_DISTINTA, DESC_TIPO_DISTINTA, DESC_BREVE_TIPO_DISTINTA, DT_INIZIO_VALIDITA)
 Values
   (11, 'FINANZIAMENTO DIRETTO', 'XX', TO_DATE('07/04/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;


/* ---------------------------------------------------------------------- */
/* Script generated with: DeZign for Databases v6.2.1                     */
/* Target DBMS:           Oracle 11g                                      */
/* Project file:          Escussione_modello_fisico.dez           */
/* Project name:                                                          */
/* Author:                                                                */
/* Script type:           Database creation script                        */
/* Created on:            2022-03-29                            */
/* ---------------------------------------------------------------------- */

/* ---------------------------------------------------------------------- */
/* Sequence                                                                 */
/* ---------------------------------------------------------------------- */
CREATE SEQUENCE SEQ_PBANDI_T_ESCUSSIONE
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    nocycle
    noorder;


/* ---------------------------------------------------------------------- */
/* Tables                                                                 */
/* ---------------------------------------------------------------------- */

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_TIPO_ESCUSSIONE"                                   */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_TIPO_ESCUSSIONE (
    ID_TIPO_ESCUSSIONE NUMBER(3) NOT NULL,
    DESC_BREVE_TIPO_ESCUSSIONE VARCHAR2(20) NOT NULL,
    DESC_TIPO_ESCUSSIONE VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_TIPO_ESCUSSIONE PRIMARY KEY (ID_TIPO_ESCUSSIONE) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_ESCUSSIONE"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_ESCUSSIONE (
    ID_STATO_ESCUSSIONE NUMBER(3) NOT NULL,
    DESC_BREVE_STATO_ESCUSSIONE VARCHAR2(20) NOT NULL,
    DESC_STATO_ESCUSSIONE VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_ESCUSSIONE PRIMARY KEY (ID_STATO_ESCUSSIONE) USING INDEX TABLESPACE PBANDI_IDX
);


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_ESCUSSIONE"                                        */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_ESCUSSIONE (
    ID_ESCUSSIONE NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
    ID_TIPO_ESCUSSIONE NUMBER(3) NOT NULL,
    ID_STATO_ESCUSSIONE NUMBER(3) NOT NULL,
	--DT_STATO_ESCUSSIONE DATE,
    DT_RIC_RICH_ESCUSSIONE DATE NOT NULL,
	NUM_PROTOCOLLO_RICH VARCHAR2(30),
    DT_NOTIFICA DATE,
	NUM_PROTOCOLLO_NOTIF VARCHAR2(30),
    IMP_RICHIESTO NUMBER(13,2) NOT NULL,
    IMP_APPROVATO NUMBER(13,2),
    CAUSALE_BONIFICO VARCHAR2(4000),
    IBAN_BONIFICO VARCHAR2(40),
    NOTE VARCHAR2(4000),
	--MOTIVO_RICH_INTEGRAZIONE  VARCHAR2(200),
	ID_DISTINTA NUMBER(8),
	FLAG_ESITO VARCHAR2(1),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8)  NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
	ID_PROPOSTA_EROGAZIONE NUMBER(8),
    CONSTRAINT PK_PBANDI_T_ESCUSSIONE PRIMARY KEY (ID_ESCUSSIONE) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_ESCUSSIONE_1 ON PBANDI_T_ESCUSSIONE (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_ESCUSSIONE_2 ON PBANDI_T_ESCUSSIONE (ID_TIPO_ESCUSSIONE) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_ESCUSSIONE_3 ON PBANDI_T_ESCUSSIONE (ID_STATO_ESCUSSIONE) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_ESCUSSIONE_4 ON PBANDI_T_ESCUSSIONE (ID_DISTINTA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_ESCUSSIONE_5 ON PBANDI_T_ESCUSSIONE (ID_PROPOSTA_EROGAZIONE) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_T_ESCUSSIONE ADD CONSTRAINT CC_PBANDI_T_ESCUSSIONE_01 
    CHECK (FLAG_ESITO IN ('P','N'));
	
COMMENT ON COLUMN PBANDI_T_ESCUSSIONE.FLAG_ESITO IS 'P=Esito positivo, N=Esito negativo';


/* ---------------------------------------------------------------------- */
/* Foreign key constraints                                                */
/* ---------------------------------------------------------------------- */
ALTER TABLE PBANDI_T_ESCUSSIONE ADD CONSTRAINT FK_PBANDI_T_PROGETTO_82 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO);

ALTER TABLE PBANDI_T_ESCUSSIONE ADD CONSTRAINT FK_PBANDI_T_UTENTE_382 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_ESCUSSIONE ADD CONSTRAINT FK_PBANDI_T_UTENTE_383 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_ESCUSSIONE ADD CONSTRAINT FK_PBANDI_D_TIPO_ESCUSS_1 
    FOREIGN KEY (ID_TIPO_ESCUSSIONE) REFERENCES PBANDI_D_TIPO_ESCUSSIONE (ID_TIPO_ESCUSSIONE);

ALTER TABLE PBANDI_T_ESCUSSIONE ADD CONSTRAINT FK_PBANDI_D_STATO_ESCUSS_1 
    FOREIGN KEY (ID_STATO_ESCUSSIONE) REFERENCES PBANDI_D_STATO_ESCUSSIONE (ID_STATO_ESCUSSIONE);

ALTER TABLE PBANDI_T_ESCUSSIONE ADD CONSTRAINT FK_PBANDI_T_DISTINTA_03 
    FOREIGN KEY (ID_DISTINTA) REFERENCES PBANDI_T_DISTINTA (ID_DISTINTA);

ALTER TABLE PBANDI_T_ESCUSSIONE ADD CONSTRAINT FK_PBANDI_T_PROPOSTA_EROG_03
    FOREIGN KEY (ID_PROPOSTA_EROGAZIONE) REFERENCES PBANDI_T_PROPOSTA_EROGAZIONE (ID_PROPOSTA);
	
-- Configurazione

--PBANDI_D_TIPO_ESCUSSIONE

Insert into PBANDI_D_TIPO_ESCUSSIONE
   (ID_TIPO_ESCUSSIONE, DESC_BREVE_TIPO_ESCUSSIONE, DESC_TIPO_ESCUSSIONE, DT_INIZIO_VALIDITA)
 Values
   (1, 'Tot', 'Totale', TO_DATE('03/29/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ESCUSSIONE
   (ID_TIPO_ESCUSSIONE, DESC_BREVE_TIPO_ESCUSSIONE, DESC_TIPO_ESCUSSIONE, DT_INIZIO_VALIDITA)
 Values
   (2, 'Sdo', 'Saldo', TO_DATE('03/29/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ESCUSSIONE
   (ID_TIPO_ESCUSSIONE, DESC_BREVE_TIPO_ESCUSSIONE, DESC_TIPO_ESCUSSIONE, DT_INIZIO_VALIDITA)
 Values
   (3, 'Acc', 'Acconto', TO_DATE('03/29/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;
  

--PBANDI_D_STATO_ESCUSSIONE

Insert into PBANDI_D_STATO_ESCUSSIONE
   (ID_STATO_ESCUSSIONE, DESC_BREVE_STATO_ESCUSSIONE, DESC_STATO_ESCUSSIONE, DT_INIZIO_VALIDITA)
 Values
   (1, 'RE', 'Ricezione escussione', TO_DATE('03/29/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_ESCUSSIONE
   (ID_STATO_ESCUSSIONE, DESC_BREVE_STATO_ESCUSSIONE, DESC_STATO_ESCUSSIONE, DT_INIZIO_VALIDITA)
 Values
   (2, 'IS', 'In istruttoria', TO_DATE('03/29/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_ESCUSSIONE
   (ID_STATO_ESCUSSIONE, DESC_BREVE_STATO_ESCUSSIONE, DESC_STATO_ESCUSSIONE, DT_INIZIO_VALIDITA)
 Values
   (3, 'RI', 'Richiesta integrazione', TO_DATE('03/29/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_ESCUSSIONE
   (ID_STATO_ESCUSSIONE, DESC_BREVE_STATO_ESCUSSIONE, DESC_STATO_ESCUSSIONE, DT_INIZIO_VALIDITA)
 Values
   (4, 'IN', 'Ricezione integrazione', TO_DATE('03/29/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_ESCUSSIONE
   (ID_STATO_ESCUSSIONE, DESC_BREVE_STATO_ESCUSSIONE, DESC_STATO_ESCUSSIONE, DT_INIZIO_VALIDITA)
 Values
   (5, 'EP', 'Esito positivo', TO_DATE('03/29/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_ESCUSSIONE
   (ID_STATO_ESCUSSIONE, DESC_BREVE_STATO_ESCUSSIONE, DESC_STATO_ESCUSSIONE, DT_INIZIO_VALIDITA)
 Values
   (6, 'EN', 'Esito negativo', TO_DATE('03/29/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;


/* ---------------------------------------------------------------------- */
/* Script generated with: DeZign for Databases v6.2.1                     */
/* Target DBMS:           Oracle 11g                                      */
/* Project file:          Iter_autor_modello_fisico.dez			           */
/* Project name:                                                          */
/* Author:                                                                */
/* Script type:           Database creation script                        */
/* Created on:            2022-02-09    		                          */
/* ---------------------------------------------------------------------- */


/* ---------------------------------------------------------------------- */
/* Sequences                                                              */
/* ---------------------------------------------------------------------- */


--PBANDI_T_WORK_FLOW
CREATE SEQUENCE SEQ_PBANDI_T_WORK_FLOW
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_DETT_WORK_FLOW
CREATE SEQUENCE SEQ_PBANDI_T_DETT_WORK_FLOW
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_TEMPLATE_ITER
CREATE SEQUENCE SEQ_PBANDI_T_TEMPLATE_ITER
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
	
--PBANDI_T_WORK_FLOW_ENTITA	
CREATE SEQUENCE SEQ_PBANDI_T_WORK_FLOW_ENTITA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;	
	
/* ---------------------------------------------------------------------- */
/* Tables                                                                 */
/* ---------------------------------------------------------------------- */
/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_TIPO_ITER"                                         */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_TIPO_ITER (
    ID_TIPO_ITER NUMBER(3) NOT NULL,
    DESC_BREVE_TIPO_ITER VARCHAR2(40) NOT NULL,
    DESC_TIPO_ITER VARCHAR2(200) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_TIPO_ITER PRIMARY KEY (ID_TIPO_ITER) USING INDEX TABLESPACE PBANDI_IDX
);


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_ITER"                                        */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_ITER (
    ID_STATO_ITER NUMBER(3) NOT NULL,
    DESC_BREVE_STATO_ITER VARCHAR2(20) NOT NULL,
    DESC_STATO_ITER VARCHAR2(200) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_ITER PRIMARY KEY (ID_STATO_ITER) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_INCARICO"                                          */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_INCARICO (
    ID_INCARICO NUMBER(3) NOT NULL,
    DESC_BREVE_INCARICO VARCHAR2(20) NOT NULL,
    DESC_INCARICO VARCHAR2(200) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_INCARICO PRIMARY KEY (ID_INCARICO) USING INDEX TABLESPACE PBANDI_IDX
);


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_INCARICO_SOGGETTO"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_R_INCARICO_SOGGETTO (
    ID_INCARICO NUMBER(3) NOT NULL,
    ID_SOGGETTO NUMBER(8) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_R_INCARICO_SOGGETTO PRIMARY KEY (ID_INCARICO, ID_SOGGETTO) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IDX_PBANDI_R_INCARICO_SOGG_1 ON PBANDI_R_INCARICO_SOGGETTO (ID_SOGGETTO) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_TIPO_STATO_ITER"                                   */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_R_TIPO_STATO_ITER (
    ID_TIPO_ITER NUMBER(3) NOT NULL,
    ID_STATO_ITER NUMBER(3) NOT NULL,
    ORDINE NUMBER(2) NOT NULL,
    ID_INCARICO NUMBER(3),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_R_TIPO_STATO_ITER PRIMARY KEY (ID_TIPO_ITER, ID_STATO_ITER) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_R_TIPO_STATO_ITER_1 ON PBANDI_R_TIPO_STATO_ITER (ID_INCARICO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_R_TIPO_STATO_ITER_2 ON PBANDI_R_TIPO_STATO_ITER (ID_STATO_ITER) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_WORK_FLOW"                                         */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_WORK_FLOW (
    ID_WORK_FLOW NUMBER(8) NOT NULL,
    ID_TIPO_ITER NUMBER(3) NOT NULL,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_WORK_FLOW PRIMARY KEY (ID_WORK_FLOW) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_WORK_FLOW_1 ON PBANDI_T_WORK_FLOW (ID_TIPO_ITER);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_DETT_WORK_FLOW"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_DETT_WORK_FLOW (
    ID_DETT_WORK_FLOW NUMBER(8) NOT NULL,
    ID_WORK_FLOW NUMBER(8) NOT NULL,
    ID_STATO_ITER NUMBER(3) NOT NULL,
    DT_APPROVAZIONE DATE,
    DT_ANNULLAMENTO DATE,
    MOTIVAZIONE VARCHAR2(4000),
    ID_UTENTE_INS NUMBER NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_DETT_WORK_FLOW PRIMARY KEY (ID_DETT_WORK_FLOW) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_DETT_WORK_FLOW_1 ON PBANDI_T_DETT_WORK_FLOW (ID_WORK_FLOW) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_DETT_WORK_FLOW_2 ON PBANDI_T_DETT_WORK_FLOW (ID_STATO_ITER) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_WORK_FLOW_ENTITA"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_WORK_FLOW_ENTITA (
    ID_WORK_FLOW_ENTITA NUMBER(8) NOT NULL,
    ID_WORK_FLOW NUMBER(8) NOT NULL,
    ID_ENTITA NUMBER(3) NOT NULL,
    ID_TARGET NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8),
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_WORK_FLOW_ENTITA PRIMARY KEY (ID_WORK_FLOW_ENTITA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IDX_PBANDI_T_WORK_FLOW_ENTIT_1 ON PBANDI_T_WORK_FLOW_ENTITA (ID_WORK_FLOW) TABLESPACE PBANDI_IDX;

CREATE INDEX IDX_PBANDI_T_WORK_FLOW_ENTIT_2 ON PBANDI_T_WORK_FLOW_ENTITA (ID_ENTITA,ID_TARGET) TABLESPACE PBANDI_IDX;

CREATE INDEX IDX_PBANDI_T_WORK_FLOW_ENTIT_3 ON PBANDI_T_WORK_FLOW_ENTITA (ID_PROGETTO) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Foreign key constraints                                                */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_R_TIPO_STATO_ITER ADD CONSTRAINT FK_PBANDI_D_INCARICO_01 
    FOREIGN KEY (ID_INCARICO) REFERENCES PBANDI_D_INCARICO (ID_INCARICO);

ALTER TABLE PBANDI_R_TIPO_STATO_ITER ADD CONSTRAINT FK_PBANDI_D_TIPO_ITER_01 
    FOREIGN KEY (ID_TIPO_ITER) REFERENCES PBANDI_D_TIPO_ITER (ID_TIPO_ITER);

ALTER TABLE PBANDI_R_TIPO_STATO_ITER ADD CONSTRAINT FK_PBANDI_D_STATO_ITER_01 
    FOREIGN KEY (ID_STATO_ITER) REFERENCES PBANDI_D_STATO_ITER (ID_STATO_ITER);

ALTER TABLE PBANDI_T_WORK_FLOW ADD CONSTRAINT FK_PBANDI_T_UTENTE_370 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_WORK_FLOW ADD CONSTRAINT FK_PBANDI_T_UTENTE_371 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_WORK_FLOW ADD CONSTRAINT FK_PBANDI_D_TIPO_ITER_02 
    FOREIGN KEY (ID_TIPO_ITER) REFERENCES PBANDI_D_TIPO_ITER (ID_TIPO_ITER);

ALTER TABLE PBANDI_T_DETT_WORK_FLOW ADD CONSTRAINT FK_PBANDI_T_WORK_FLOW_01 
    FOREIGN KEY (ID_WORK_FLOW) REFERENCES PBANDI_T_WORK_FLOW (ID_WORK_FLOW);

ALTER TABLE PBANDI_T_DETT_WORK_FLOW ADD CONSTRAINT FK_PBANDI_T_UTENTE_372 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_DETT_WORK_FLOW ADD CONSTRAINT FK_PBANDI_T_UTENTE_373 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_DETT_WORK_FLOW ADD CONSTRAINT FK_PBANDI_D_STATO_ITER_02 
    FOREIGN KEY (ID_STATO_ITER) REFERENCES PBANDI_D_STATO_ITER (ID_STATO_ITER);

ALTER TABLE PBANDI_T_WORK_FLOW_ENTITA ADD CONSTRAINT FK_PBANDI_T_WORK_FLOW_02 
    FOREIGN KEY (ID_WORK_FLOW) REFERENCES PBANDI_T_WORK_FLOW (ID_WORK_FLOW);

ALTER TABLE PBANDI_T_WORK_FLOW_ENTITA ADD CONSTRAINT FK_PBANDI_C_ENTITA_09 
    FOREIGN KEY (ID_ENTITA) REFERENCES PBANDI_C_ENTITA (ID_ENTITA);

ALTER TABLE PBANDI_T_WORK_FLOW_ENTITA ADD CONSTRAINT FK_PBANDI_T_PROGETTO_81 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO);

ALTER TABLE PBANDI_T_WORK_FLOW_ENTITA ADD CONSTRAINT FK_PBANDI_T_UTENTE_377 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_WORK_FLOW_ENTITA ADD CONSTRAINT FK_PBANDI_T_UTENTE_376 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_R_INCARICO_SOGGETTO ADD CONSTRAINT FK_PBANDI_D_INCARICO_02 
    FOREIGN KEY (ID_INCARICO) REFERENCES PBANDI_D_INCARICO (ID_INCARICO);

ALTER TABLE PBANDI_R_INCARICO_SOGGETTO ADD CONSTRAINT FK_PBANDI_T_SOGGETTO_38 
    FOREIGN KEY (ID_SOGGETTO) REFERENCES PBANDI_T_SOGGETTO (ID_SOGGETTO);




--PBANDI_D_INCARICO
Insert into PBANDI_D_INCARICO
   (ID_INCARICO, DESC_BREVE_INCARICO, DESC_INCARICO, DT_INIZIO_VALIDITA)
 Values
   (1, 'ISTR-OI', 'Istruttore OI', TO_DATE('10/19/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_INCARICO
   (ID_INCARICO, DESC_BREVE_INCARICO, DESC_INCARICO, DT_INIZIO_VALIDITA)
 Values
   (2, 'REF-OI', 'Referente OI', TO_DATE('10/19/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_INCARICO
   (ID_INCARICO, DESC_BREVE_INCARICO, DESC_INCARICO, DT_INIZIO_VALIDITA)
 Values
   (3, 'REST-OI', 'Responsabile OI', TO_DATE('10/19/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_INCARICO
   (ID_INCARICO, DESC_BREVE_INCARICO, DESC_INCARICO, DT_INIZIO_VALIDITA)
 Values
   (4, 'DG', 'Direttore Generale', TO_DATE('10/19/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_TIPO_ITER
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (1, 'ITER-REND-RICH-INTEGR', 'Rendicontazione - Richiesta integrazione', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (2, 'ITER-REND-CHIUDI-VALIDAZIONE', 'Rendicontazione - Chiusura validazione', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (5, 'ITER-CNT-RICH-INTEGR', 'Controlli in loco - Richiesta integrazione', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (6, 'ITER-CNT-AVVIO', 'Controlli in loco - Avvio del controllo', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (7, 'ITER-CNT-ESITO-POS', 'Controlli in loco - Esito positivo del controllo', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (8, 'ITER-REV-RICH-INTEGR', 'Gestione revoche - Richiesta integrazione', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (9, 'ITER-REV-PROCEDIMENTO', 'Gestione revoche - Procedimento di revoca', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (10, 'ITER-REV-ARCHIVIAZIONE', 'Gestione revoche - Archiviazione', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (11, 'ITER-REV-PROVVEDIMENTO', 'Gestione revoche - Provvedimento di revoca', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (12, 'ITER-REV-RITIRO', 'Gestione revoche - Ritiro in auto tutela', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (13, 'ITER-EROG', 'Erogazione', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (14, 'ITER-GAR-RICH-INTEGR', 'Garanzie - Richiesta integrazione Escussione Garanzia', TO_DATE('10/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (15, 'ITER-GAR-INVIO-ESITO-NEG', 'Garanzie - Invio esito escussione negativo', TO_DATE('10/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (16, 'ITER-GAR-INVIO-ESITO-POS', 'Garanzie - Invio esito escussione positivo', TO_DATE('10/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_ITER
   (ID_TIPO_ITER, DESC_BREVE_TIPO_ITER, DESC_TIPO_ITER, DT_INIZIO_VALIDITA)
 Values
   (17, 'ITER-REV-CONFERMA-PROVVEDIMENTO', 'Gestione revoche - Conferma provvedimento', TO_DATE('10/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_STATO_ITER
Insert into PBANDI_D_STATO_ITER
   (ID_STATO_ITER, DESC_BREVE_STATO_ITER, DESC_STATO_ITER, DT_INIZIO_VALIDITA)
 Values
   (1, 'IN-LAV-ISTR', 'In lavorazione Istruttore', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_ITER
   (ID_STATO_ITER, DESC_BREVE_STATO_ITER, DESC_STATO_ITER, DT_INIZIO_VALIDITA)
 Values
   (2, 'IN-AUT-REF', 'In autorizzaz. Referente', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_ITER
   (ID_STATO_ITER, DESC_BREVE_STATO_ITER, DESC_STATO_ITER, DT_INIZIO_VALIDITA)
 Values
   (3, 'IN-AUT-RESP', 'In autorizzaz. Responsabile', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_ITER
   (ID_STATO_ITER, DESC_BREVE_STATO_ITER, DESC_STATO_ITER, DT_INIZIO_VALIDITA)
 Values
   (4, 'IN-AUT-DG', 'In autorizzaz. DG', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_ITER
   (ID_STATO_ITER, DESC_BREVE_STATO_ITER, DESC_STATO_ITER, DT_INIZIO_VALIDITA)
 Values
   (5, 'AUTORIZZATO', 'Autorizzato', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_ITER
   (ID_STATO_ITER, DESC_BREVE_STATO_ITER, DESC_STATO_ITER, DT_INIZIO_VALIDITA)
 Values
   (6, 'RESPINTO', 'Respinto', TO_DATE('09/30/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;



/* ---------------------------------------------------------------------- */
/* Script generated with: DeZign for Databases v6.2.1                     */
/* Target DBMS:           Oracle 11g                                      */
/* Project file:          Migrazione_modello_fisico.dez                 */
/* Project name:                                                          */
/* Author:                                                                */
/* Script type:           Database creation script                        */
/* Created on:            2021-11-05 20:23                                */
/* ---------------------------------------------------------------------- */


/* ---------------------------------------------------------------------- */
/* Sequences                                                              */
/* ---------------------------------------------------------------------- */

--PBANDI_R_BANDO_MOD_AG_ESTR_BAN
CREATE SEQUENCE SEQ_PBANDI_R_BANDI_MOD_AG_BANC
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_NOTE
CREATE SEQUENCE SEQ_PBANDI_T_NOTE
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_DELIBERA_PROGETTI
CREATE SEQUENCE SEQ_PBANDI_T_DELIBERA_PROGETTI
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_T_AMMORTAMENTO_PROGETTI	
CREATE SEQUENCE SEQ_PBANDI_T_AMMORTAM_PROGETTI
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--NUMERO_DOMANDA MIGRAZIONE FINPIS	
CREATE SEQUENCE SEQ_MFINPIS_NUM_DOMANDA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;	

--PBANDI_T_RNA_PROGETTO	
CREATE SEQUENCE SEQ_PBANDI_T_RNA_PROGETTO
  START WITH 1
  INCREMENT BY 1
  NOMINVALUE
  NOMAXVALUE
  NOCYCLE
  NOCACHE
  NOORDER;

--SEQ_PBANDI_T_RNA_AGEVOLAZIONE	
CREATE SEQUENCE SEQ_PBANDI_T_RNA_AGEVOLAZIONE
  START WITH 1
  INCREMENT BY 1
  NOMINVALUE
  NOMAXVALUE
  NOCYCLE
  NOCACHE
  NOORDER;

--SEQ_PBANDI_T_RNA_COSTO_GEST	
CREATE SEQUENCE SEQ_PBANDI_T_RNA_COSTO_GEST
  START WITH 1
  INCREMENT BY 1
  NOMINVALUE
  NOMAXVALUE
  NOCYCLE
  NOCACHE
  NOORDER;

	
	--PBANDI_T_ACTIVEINFO_METADATA
CREATE SEQUENCE SEQ_PBANDI_T_ACTIVEINFO_METADA
  START WITH 1
  INCREMENT BY 1
  NOMINVALUE
  NOMAXVALUE
  NOCYCLE
  NOCACHE
  NOORDER;

--PBANDI_L_LOG_FILE_AFAI
CREATE SEQUENCE SEQ_PBANDI_L_LOG_FILE_AFAI
  START WITH 1
  INCREMENT BY 1
  NOMINVALUE
  NOMAXVALUE
  NOCYCLE
  NOCACHE
  NOORDER;
/* ---------------------------------------------------------------------- */
/* Tables                                                                 */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_T_PROGETTO ADD CODICE_FONDO_FINPIS           VARCHAR2(4);
ALTER TABLE PBANDI_T_DOMANDA ADD CODICE_FONDO_FINPIS            VARCHAR2(4);

ALTER TABLE PBANDI_R_CONTO_ECONOM_MOD_AGEV ADD IMP_ESL 			NUMBER(17,2);
ALTER TABLE PBANDI_R_CONTO_ECONOM_MOD_AGEV ADD GARANZIE 		VARCHAR2(200);
ALTER TABLE PBANDI_R_CONTO_ECONOM_MOD_AGEV ADD ID_FORMA_FINANZIAMENTO_FIN NUMBER(3);
COMMENT ON COLUMN PBANDI_R_CONTO_ECONOM_MOD_AGEV.ID_FORMA_FINANZIAMENTO_FIN IS 'Agevolazione Finistr';
ALTER TABLE PBANDI_R_CONTO_ECONOM_MOD_AGEV ADD CODICE_PROGETTO_AGEV VARCHAR2(100);
COMMENT ON COLUMN PBANDI_R_CONTO_ECONOM_MOD_AGEV.CODICE_PROGETTO_AGEV IS 'Codice progetto specifico per agevolazione';

ALTER TABLE PBANDI_R_CONTO_ECONOM_MOD_AGEV ADD CONSTRAINT FK_PBANDI_C_AGEV_FINISTR_01 
    FOREIGN KEY (ID_FORMA_FINANZIAMENTO_FIN) REFERENCES PBANDI_C_AGEV_FINISTR (ID_FORMA_FINANZIAMENTO_FIN);

CREATE INDEX IE_PBANDI_R_CONTO_EC_MOD_AGE_1 ON PBANDI_R_CONTO_ECONOM_MOD_AGEV (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;
CREATE INDEX IE_PBANDI_R_CONTO_EC_MOD_AGE_2 ON PBANDI_R_CONTO_ECONOM_MOD_AGEV (ID_FORMA_FINANZIAMENTO_FIN) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_T_QUOTA_PARTE_DOC_SPESA ADD FLAG_IRES        VARCHAR2(1);

CREATE INDEX IE10_PBANDI_T_PROGETTO ON PBANDI_T_PROGETTO
(CODICE_VISUALIZZATO)
TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_BANDO_MOD_AG_ESTR_BAN"                             */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_R_BANDO_MOD_AG_ESTR_BAN (
    ID_BANDO_MOD_AG_ESTR_BAN NUMBER(8) NOT NULL,
    ID_MODALITA_AGEVOLAZIONE NUMBER(3) NOT NULL,
    ID_BANDO NUMBER(8) NOT NULL,
    ID_ESTREMI_BANCARI NUMBER(8) NOT NULL,
    MOLTIPLICATORE VARCHAR2(8),
	TIPOLOGIA_CONTO  VARCHAR2(50),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
	CODICE_FONDO_FINPIS NUMBER(8),
    CONSTRAINT PK_PBANDI_R_BAN_MOD_AG_EST_BAN PRIMARY KEY (ID_BANDO_MOD_AG_ESTR_BAN)  USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_R_BANDI_MOD_AG_BAN_1 ON PBANDI_R_BANDO_MOD_AG_ESTR_BAN (ID_ESTREMI_BANCARI) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_NOTE"                                              */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_NOTE
(
  ID_NOTA                       NUMBER(8)       NOT NULL,
  ID_SOGGETTO_BENEFICIARIO      NUMBER(8),
  ID_PROGETTO                   NUMBER(8),
  TESTO_NOTA                    CLOB NOT NULL,
  ID_MODALITA_AGEVOLAZIONE      NUMBER(3),
  FLAG_VISIBILITA_BENEFICIARIO  VARCHAR2(1 BYTE),
  DT_INIZIO_VALIDITA            DATE            NOT NULL,
  DT_FINE_VALIDITA              DATE,
  ID_UTENTE_INS                 NUMBER(8)       NOT NULL,
  ID_UTENTE_AGG                 NUMBER(8),
  CONSTRAINT PK_PBANDI_T_NOTE PRIMARY KEY (ID_NOTA) USING INDEX TABLESPACE PBANDI_IDX
)
TABLESPACE PBANDI_TBL;

CREATE INDEX IE_PBANDI_T_NOTE_1 ON PBANDI_T_NOTE (ID_SOGGETTO_BENEFICIARIO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_NOTE_2 ON PBANDI_T_NOTE (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_NOTE_3 ON PBANDI_T_NOTE (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_T_NOTE ADD CONSTRAINT CC_PBANDI_T_NOTE_01 
    CHECK (FLAG_VISIBILITA_BENEFICIARIO='S');

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_DELIBERA_PROGETTI"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_DELIBERA_PROGETTI (
    ID_DELIBERA NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8),
    OGGETTO_DELIBERA VARCHAR2(4000) NOT NULL,
    DT_DELIBERA DATE,
    DT_ANNULLAMENTO DATE,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    CONSTRAINT PK_PBANDI_T_DELIBERA_PROGETTI PRIMARY KEY (ID_DELIBERA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_DELIBERA_PROG_1 ON PBANDI_T_DELIBERA_PROGETTI (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_DELIBERA_PROG_2 ON PBANDI_T_DELIBERA_PROGETTI (DT_DELIBERA) TABLESPACE PBANDI_IDX;

-- PBANDI_D_TIPO_PERIODO_AMMORTAMENTO
CREATE TABLE PBANDI_D_TIPO_PERIODO_AMMORT
(ID_TIPO_PERIODO_AMMORTAMENTO INTEGER,
 DESCR_BREVE_TIPO_PERIOD_AMM VARCHAR2(1),
 DESCRIZIONE_TIPO_PERIOD_AMM VARCHAR2(100),
 DT_INIZIO_VALIDITA DATE NOT NULL,
 DT_FINE_VALIDITA DATE,
 CONSTRAINT PK_PBANDI_D_TIPO_PERIODO_AMM PRIMARY KEY (ID_TIPO_PERIODO_AMMORTAMENTO) USING INDEX TABLESPACE PBANDI_IDX
);

-- INSERT 
insert into PBANDI_D_TIPO_PERIODO_AMMORT (ID_TIPO_PERIODO_AMMORTAMENTO, DESCR_BREVE_TIPO_PERIOD_AMM, DESCRIZIONE_TIPO_PERIOD_AMM, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (1, 'C', 'Periodo in corso', to_date('31-08-2023', 'dd-mm-yyyy'), null);
insert into PBANDI_D_TIPO_PERIODO_AMMORT (ID_TIPO_PERIODO_AMMORTAMENTO, DESCR_BREVE_TIPO_PERIOD_AMM, DESCRIZIONE_TIPO_PERIOD_AMM, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (2, 'S', 'Periodo successivo', to_date('31-08-2023', 'dd-mm-yyyy'), null);
COMMIT;

-- pbandi_d_frequenza_ammort
CREATE TABLE pbandi_d_frequenza_ammort
(ID_FREQUENZA_AMMORTAMENTO INTEGER,
 DESCR_BREVE_FREQUENZA_AMMORT VARCHAR2(3),
 DESCRIZIONE_FREQUENZA_AMMORT VARCHAR2(100),
 DT_INIZIO_VALIDITA DATE NOT NULL,
 DT_FINE_VALIDITA DATE,
 CONSTRAINT PK_pbandi_d_frequenza_amm PRIMARY KEY (ID_FREQUENZA_AMMORTAMENTO) USING INDEX TABLESPACE PBANDI_IDX
);
-- insert
insert into pbandi_d_frequenza_ammort (ID_FREQUENZA_AMMORTAMENTO, DESCR_BREVE_FREQUENZA_AMMORT, DESCRIZIONE_FREQUENZA_AMMORT, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (1, '1', 'Annuale', to_date('31-08-2023', 'dd-mm-yyyy'), null);
insert into pbandi_d_frequenza_ammort (ID_FREQUENZA_AMMORTAMENTO, DESCR_BREVE_FREQUENZA_AMMORT, DESCRIZIONE_FREQUENZA_AMMORT, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (2, '2', 'Semestrale', to_date('31-08-2023', 'dd-mm-yyyy'), null);
insert into pbandi_d_frequenza_ammort (ID_FREQUENZA_AMMORTAMENTO, DESCR_BREVE_FREQUENZA_AMMORT, DESCRIZIONE_FREQUENZA_AMMORT, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (3, '3', 'Quadrimestrale', to_date('31-08-2023', 'dd-mm-yyyy'), null);
insert into pbandi_d_frequenza_ammort (ID_FREQUENZA_AMMORTAMENTO, DESCR_BREVE_FREQUENZA_AMMORT, DESCRIZIONE_FREQUENZA_AMMORT, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (4, '4', 'Trimestrale', to_date('31-08-2023', 'dd-mm-yyyy'), null);
insert into pbandi_d_frequenza_ammort (ID_FREQUENZA_AMMORTAMENTO, DESCR_BREVE_FREQUENZA_AMMORT, DESCRIZIONE_FREQUENZA_AMMORT, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (5, '6', 'Bimestrale', to_date('31-08-2023', 'dd-mm-yyyy'), null);
insert into pbandi_d_frequenza_ammort (ID_FREQUENZA_AMMORTAMENTO, DESCR_BREVE_FREQUENZA_AMMORT, DESCRIZIONE_FREQUENZA_AMMORT, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (6, '12', 'Mensile', to_date('31-08-2023', 'dd-mm-yyyy'), null);
COMMIT;
--


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_AMMORTAMENTO_PROGETTI"                             */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_AMMORTAMENTO_PROGETTI (
    ID_AMMORT_PROGETTI NUMBER(8) NOT NULL,
    ID_DELIBERA NUMBER(8) NOT NULL,
    MM_AMMORTAMENTO NUMBER(3) NOT NULL,
    MM_PREAMMORTAMENTO NUMBER(3),
    ID_TIPO_TASSO NUMBER(3),
    PERC_SPREAD NUMBER(5,2),
    ID_FREQUENZA_AMMORTAMENTO NUMBER(3),
    --PERC_FINANZ_BANCHE  NUMBER(5,2),
    PERC_INTERESSI NUMBER(5,2),
    --GARANZIE VARCHAR2(4000),
    --NOTE VARCHAR2(4000),
    ID_TIPO_CALC_AMM NUMBER(3),
    ID_TASSO_AMM NUMBER(3),
	ID_TIPO_PERIODO_AMMORTAMENTO INTEGER,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    CONSTRAINT PK_PBANDI_T_AMMORTAM_PROG PRIMARY KEY (ID_AMMORT_PROGETTI) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_AMMORTAM_PROG_1 ON PBANDI_T_AMMORTAMENTO_PROGETTI (ID_DELIBERA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_AMMORTAM_PROG_2 ON PBANDI_T_AMMORTAMENTO_PROGETTI (ID_TIPO_TASSO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE_PBANDI_T_AMMORTAM_PROG_3 ON PBANDI_T_AMMORTAMENTO_PROGETTI (ID_TIPO_CALC_AMM) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_AMMORTAM_PROG_4 ON PBANDI_T_AMMORTAMENTO_PROGETTI (ID_TASSO_AMM) TABLESPACE PBANDI_IDX;
CREATE INDEX IE_PBANDI_T_AMMORTAM_PROG_5 ON pbandi_t_ammortamento_progetti (ID_TIPO_PERIODO_AMMORTAMENTO)  TABLESPACE PBANDI_IDX;
CREATE INDEX IE_PBANDI_T_AMMORTAM_PROG_6 ON PBANDI_T_AMMORTAMENTO_PROGETTI (ID_FREQUENZA_AMMORTAMENTO)  TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_TIPO_TASSI"                                        */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_TIPO_TASSI (
    ID_TIPO_TASSO NUMBER(3) NOT NULL,
    DESC_BREVE_TIPO_TASSO VARCHAR2(20),
    DESC_TIPO_TASSO VARCHAR2(200),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_TIPO_TASSI PRIMARY KEY (ID_TIPO_TASSO) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_TIPO_CALCOLO_AMM"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_TIPO_CALCOLO_AMM (
    ID_TIPO_CALC_AMM NUMBER(3) NOT NULL,
    DESC_BREVE_TIPO_CALC_AMM VARCHAR2(20) NOT NULL,
    DESC_TIPO_CALC_AMM VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_TIPO_CALCOLO_AMM PRIMARY KEY (ID_TIPO_CALC_AMM) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_TASSO_AMM"                                         */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_TASSO_AMM (
    ID_TASSO_AMM NUMBER(3) NOT NULL,
    DESC_BREVE_TASSO_AMM VARCHAR2(20) NOT NULL,
    DESC_TASSO_AMM VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_TASSO_AMM PRIMARY KEY (ID_TASSO_AMM) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_RNA_PROGETTO"                                      */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_RNA_PROGETTO (
    ID_RNA_PROGETTO NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
    CODICE_BANDO_RNA NUMBER,
    ID_CONCESSIONE_GEST VARCHAR2(60) NOT NULL,
    ID_COMP_AIUTO_GEST VARCHAR2(100) NOT NULL,
    COR NUMBER NOT NULL,
    COVAR NUMBER,
    COR_COLLEGTO NUMBER,
    DT_ESITO_VALIDAZIONE DATE,
    DT_RICH_ANNULLAMENTO DATE,
    ESITO_CONFERMA_REG VARCHAR2(40),
    DT_CONFERMA_REG DATE,
    ID_PROVVEDIMENTO NUMBER(8),
    ID_CARICAMENTO NUMBER(8),
    COD_TIPO_VARIAZIONE VARCHAR2(2),
    ID_RICHIESTA_RNA NUMBER(8),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    CONSTRAINT PK_PBANDI_T_RNA_PROGETTO PRIMARY KEY (ID_RNA_PROGETTO)  USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_RNA_PROGETTO_1 ON PBANDI_T_RNA_PROGETTO (ID_PROGETTO ASC)  TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_PROGETTO_2 ON PBANDI_T_RNA_PROGETTO (ID_UTENTE_INS ASC)  TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_PROGETTO_3 ON PBANDI_T_RNA_PROGETTO (ID_UTENTE_AGG ASC)  TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_PROGETTO_4 ON PBANDI_T_RNA_PROGETTO (COD_TIPO_VARIAZIONE ASC)  TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_PROGETTO_5 ON PBANDI_T_RNA_PROGETTO (ID_CARICAMENTO ASC)  TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_RNA_AGEVOLAZIONE"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_RNA_AGEVOLAZIONE (
    ID_RNA_AGEVOLAZIONE INTEGER NOT NULL,
    ID_RNA_PROGETTO NUMBER(8) NOT NULL,
    ID_MODALITA_AGEVOLAZIONE NUMBER(3) NOT NULL,
    ID_STRUM_AIUTO_GEST VARCHAR2(100) NOT NULL,
    IMPORTO_NOMINALE NUMBER(16,2) NOT NULL,
    IMPORTO_AGEVOLAZIONE NUMBER(16,2) NOT NULL,
    INTENSITA_AIUTO NUMBER(16,2) NOT NULL,
    ESITO_REG VARCHAR2(40),
    DT_ESITO DATE,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    CONSTRAINT PK_PBANDI_T_RNA_AGEVOLAZIONE PRIMARY KEY (ID_RNA_AGEVOLAZIONE)   USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_RNA_AGEV_1 ON PBANDI_T_RNA_AGEVOLAZIONE (ID_RNA_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_AGEV_2 ON PBANDI_T_RNA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE)  TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_AGEV_3 ON PBANDI_T_RNA_AGEVOLAZIONE (ID_UTENTE_INS)  TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_AGEV_4 ON PBANDI_T_RNA_AGEVOLAZIONE (ID_UTENTE_AGG)  TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_RNA_COSTO_GEST"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_RNA_COSTO_GEST (
    ID_RNA_COST_GEST INTEGER NOT NULL,
    ID_RNA_PROGETTO NUMBER(8) NOT NULL,
    ID_RIGO_CONTO_ECONOMICO NUMBER(8),
    ID_COSTO_GEST VARCHAR2(100) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    CONSTRAINT PK_PBANDI_T_RNA_COSTO_GEST PRIMARY KEY (ID_RNA_COST_GEST)   USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_RNA_COSTO_GEST_1 ON PBANDI_T_RNA_COSTO_GEST (ID_RNA_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_COSTO_GEST_2 ON PBANDI_T_RNA_COSTO_GEST (ID_RIGO_CONTO_ECONOMICO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_COSTO_GEST_3 ON PBANDI_T_RNA_COSTO_GEST (ID_UTENTE_INS) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_COSTO_GEST_4 ON PBANDI_T_RNA_COSTO_GEST (ID_UTENTE_AGG) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_ACTIVEINFO_METADATA"                               */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_ACTIVEINFO_METADATA (
    ID_METADATA NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8),
    NOME_FILE VARCHAR2(200),
    ID_DOC VARCHAR2(20),
    TIPO_DOC VARCHAR2(50),
    PROTOCOLLO VARCHAR2(50),
    DATA_RICEVIMENTO DATE,
    DATA_LETTERA DATE,
    TITOLARIO VARCHAR2(100),
    OPERATORE VARCHAR2(50),
    MITTENTE_DESTINATARIO VARCHAR2(4000),
    OGGETTO VARCHAR2(4000),
    FONDI_COMMESSA VARCHAR2(4000),
    SERVIZIO_DI_LINEA VARCHAR2(4000),
	CODICE_VISUALIZZATO    VARCHAR2(100)	
    CONSTRAINT PK_PBANDI_T_ACTIVEINFO_METADA PRIMARY KEY (ID_METADATA) USING INDEX TABLESPACE PBANDI_IDX
);

COMMENT ON TABLE PBANDI_T_ACTIVEINFO_METADATA IS 'Tabella di migrazione documentale Finpis';

CREATE INDEX IE1_PBANDI_T_ACTIVEINFO_METADA ON PBANDI_T_ACTIVEINFO_METADATA (ID_PROGETTO) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_L_LOG_FILE_AFAI"                                     */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_L_LOG_FILE_AFAI (
    ID_LOG NUMBER(8) NOT NULL,
    ID_METADATA NUMBER(8),
    FLAG_FILE_ELABORATO VARCHAR2(1) NOT NULL,
    REPORT_ELABORAZIONE VARCHAR2(4000),
    DATA_FINE_ELABORAZIONE DATE,
    PATH_FILES VARCHAR2(255),
    CONSTRAINT PK_PBANDI_L_LOG_FILE_AFAI PRIMARY KEY (ID_LOG) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE1_PBANDI_L_LOG_FILE_AFAI_1 ON PBANDI_L_LOG_FILE_AFAI (ID_METADATA) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_L_LOG_FILE_AFAI ADD CONSTRAINT CC_PBANDI_L_LOG_FILE_AFAI_01
    CHECK (flag_file_elaborato in ('S','N'));


/* ---------------------------------------------------------------------- */
/* Foreign key constraints                                                */
/* ---------------------------------------------------------------------- */
ALTER TABLE PBANDI_T_ACTIVEINFO_METADATA ADD CONSTRAINT FK_PBANDI_T_PROGETTO_87 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO);


ALTER TABLE PBANDI_R_BANDO_MOD_AG_ESTR_BAN ADD CONSTRAINT FK_PBANDI_R_BANDO_MODAL_AGE_01 
    FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE, ID_BANDO) REFERENCES PBANDI_R_BANDO_MODALITA_AGEVOL (ID_MODALITA_AGEVOLAZIONE,ID_BANDO);

ALTER TABLE PBANDI_R_BANDO_MOD_AG_ESTR_BAN ADD CONSTRAINT FK_PBANDI_T_ESTREMI_BANCARI_05 
    FOREIGN KEY (ID_ESTREMI_BANCARI) REFERENCES PBANDI_T_ESTREMI_BANCARI (ID_ESTREMI_BANCARI);

ALTER TABLE PBANDI_R_BANDO_MOD_AG_ESTR_BAN ADD CONSTRAINT FK_PBANDI_T_UTENTE_360 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_R_BANDO_MOD_AG_ESTR_BAN ADD CONSTRAINT FK_PBANDI_T_UTENTE_361 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_NOTE ADD CONSTRAINT FK_PBANDI_T_SOGGETTO_33 
    FOREIGN KEY (ID_SOGGETTO_BENEFICIARIO) REFERENCES PBANDI_T_SOGGETTO (ID_SOGGETTO);

ALTER TABLE PBANDI_T_NOTE ADD CONSTRAINT FK_PBANDI_T_PROGETTO_78 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO);

ALTER TABLE PBANDI_T_NOTE ADD CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_09 
    FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE) REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE);

ALTER TABLE PBANDI_T_NOTE ADD CONSTRAINT FK_PBANDI_T_UTENTE_362 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_NOTE ADD CONSTRAINT FK_PBANDI_T_UTENTE_363 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_AMMORTAMENTO_PROGETTI ADD CONSTRAINT FK_T_DELIBERA_PROG_01 
    FOREIGN KEY (ID_DELIBERA) REFERENCES PBANDI_T_DELIBERA_PROGETTI (ID_DELIBERA);


ALTER TABLE PBANDI_T_AMMORTAMENTO_PROGETTI ADD CONSTRAINT FK_D_TIPO_CALC_AMM_01 
    FOREIGN KEY (ID_TIPO_CALC_AMM) REFERENCES PBANDI_D_TIPO_CALCOLO_AMM (ID_TIPO_CALC_AMM);

ALTER TABLE PBANDI_T_AMMORTAMENTO_PROGETTI ADD CONSTRAINT FK_D_TASSO_AMM_01 
    FOREIGN KEY (ID_TASSO_AMM) REFERENCES PBANDI_D_TASSO_AMM (ID_TASSO_AMM);

ALTER TABLE PBANDI_T_AMMORTAMENTO_PROGETTI ADD CONSTRAINT FK_PBANDI_T_UTENTE_366 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_AMMORTAMENTO_PROGETTI ADD CONSTRAINT FK_PBANDI_T_UTENTE_367 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_AMMORTAMENTO_PROGETTI ADD CONSTRAINT FK_D_TIPI_TASSI_01 
    FOREIGN KEY (ID_TIPO_TASSO) REFERENCES PBANDI_D_TIPO_TASSI (ID_TIPO_TASSO);

ALTER TABLE PBANDI_T_AMMORTAMENTO_PROGETTI ADD CONSTRAINT FK_PBANDI_D_TIPO_PER_AMMORT_01 
    FOREIGN KEY (ID_TIPO_PERIODO_AMMORTAMENTO) REFERENCES PBANDI_D_TIPO_PERIODO_AMMORT (ID_TIPO_PERIODO_AMMORTAMENTO);

ALTER TABLE PBANDI_T_AMMORTAMENTO_PROGETTI ADD CONSTRAINT FK_pbandi_d_freq_ammort_01 
    FOREIGN KEY (ID_FREQUENZA_AMMORTAMENTO) REFERENCES pbandi_d_frequenza_ammort(ID_FREQUENZA_AMMORTAMENTO);

ALTER TABLE PBANDI_T_RNA_PROGETTO ADD CONSTRAINT fk_pbandi_t_progetto_86 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO);

ALTER TABLE PBANDI_T_RNA_PROGETTO ADD CONSTRAINT FK_PBANDI_W_RNA_CARICAM_XML_01 
    FOREIGN KEY (ID_CARICAMENTO) REFERENCES PBANDI_W_RNA_CARICAMENTO_XML (ID_CARICAMENTO);

ALTER TABLE PBANDI_T_RNA_PROGETTO ADD CONSTRAINT FK_PBANDI_D_RNA_TIPO_VARIAZ_01 
    FOREIGN KEY (COD_TIPO_VARIAZIONE) REFERENCES PBANDI_D_RNA_TIPO_VARIAZIONE (COD_TIPO_VARIAZIONE);

ALTER TABLE PBANDI_T_RNA_PROGETTO ADD CONSTRAINT FK_PBANDI_T_UTENTE_407 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_RNA_PROGETTO ADD CONSTRAINT FK_PBANDI_T_UTENTE_408 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);
  
ALTER TABLE PBANDI.PBANDI_T_RNA_AGEVOLAZIONE ADD (
  CONSTRAINT FK_PBANDI_T_PROGETTO_100 
 FOREIGN KEY (ID_RNA_PROGETTO) 
 REFERENCES PBANDI.PBANDI_T_RNA_PROGETTO (ID_RNA_PROGETTO),
  CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_14 
 FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE) 
 REFERENCES PBANDI.PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE),
  CONSTRAINT FK_PBANDI_T_UTENTE_450 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_451 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE));  

ALTER TABLE PBANDI.PBANDI_T_RNA_COSTO_GEST ADD (
  CONSTRAINT FK_PBANDI_T_PROGETTO_101 
 FOREIGN KEY (ID_RNA_PROGETTO) 
 REFERENCES PBANDI.PBANDI_T_RNA_PROGETTO (ID_RNA_PROGETTO),
  CONSTRAINT FK_PBANDI_T_UTENTE_452 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_453 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_RIGO_CONTO_ECON_04 
 FOREIGN KEY (ID_RIGO_CONTO_ECONOMICO) 
 REFERENCES PBANDI.PBANDI_T_RIGO_CONTO_ECONOMICO (ID_RIGO_CONTO_ECONOMICO));

  

ALTER TABLE PBANDI_L_LOG_FILE_AFAI ADD CONSTRAINT FK_PBANDI_T_ACTINFO_METAD_01 
    FOREIGN KEY (ID_METADATA) REFERENCES PBANDI_T_ACTIVEINFO_METADATA (ID_METADATA);

-- Configurazione tabelle

   
-- INSERT INTO PBANDI_T_UTENTE -- Utente Batch RNA
Insert into PBANDI_T_UTENTE
   (ID_UTENTE, CODICE_UTENTE, ID_TIPO_ACCESSO, DT_INSERIMENTO)
 Values
   (-15, 'BATCH_RNA', 5, SYSDATE);   

--INSERT INTO PBANDI_T_UTENTE VALUES (-15,NULL,NULL,'BATCH_RNA',5,NULL,SYSDATE,NULL,NULL,NULL,NULL);

Insert into PBANDI_D_ERRORE_BATCH
   (CODICE_ERRORE, DESCRIZIONE)
 Values
   ('E180', 'Fondo Finpiemonte non migrato');

Insert into PBANDI_D_TIPO_DOCUMENTO_SPESA
   (ID_TIPO_DOCUMENTO_SPESA, DESC_BREVE_TIPO_DOC_SPESA, DESC_TIPO_DOCUMENTO_SPESA, DT_INIZIO_VALIDITA)
 Values
   (86, 'MIF', 'Migrazione Finpis', TO_DATE('10/31/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));

/*
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX)
 Values
   (61, 'AFAI', 'ALLEGATI FINPIS ACTIVE INFO');
COMMIT;
*/

--PBANDI_D_TIPO_TASSI
Insert into PBANDI_D_TIPO_TASSI
   (ID_TIPO_TASSO, DESC_BREVE_TIPO_TASSO, DESC_TIPO_TASSO, DT_INIZIO_VALIDITA)
 Values
   (1, 'F', 'FISSO', TO_DATE('09/21/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_TASSI
   (ID_TIPO_TASSO, DESC_BREVE_TIPO_TASSO, DESC_TIPO_TASSO, DT_INIZIO_VALIDITA)
 Values
   (2, 'V', 'VARIABILE', TO_DATE('09/21/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_TIPO_CALCOLO_AMM
Insert into PBANDI_D_TIPO_CALCOLO_AMM
   (ID_TIPO_CALC_AMM, DESC_BREVE_TIPO_CALC_AMM, DESC_TIPO_CALC_AMM, DT_INIZIO_VALIDITA)
 Values
   (1, 'FR', 'Piano francese con rate costanti', TO_DATE('09/22/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPO_CALCOLO_AMM
   (ID_TIPO_CALC_AMM, DESC_BREVE_TIPO_CALC_AMM, DESC_TIPO_CALC_AMM, DT_INIZIO_VALIDITA)
 Values
   (2, 'IT', 'Piano italiano con rate decrescenti', TO_DATE('09/22/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_TASSO_AMM
Insert into PBANDI_D_TASSO_AMM
   (ID_TASSO_AMM, DESC_BREVE_TASSO_AMM, DESC_TASSO_AMM, DT_INIZIO_VALIDITA)
 Values
   (1, 'E1 ', 'Euribor 1 mese', TO_DATE('09/22/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TASSO_AMM
   (ID_TASSO_AMM, DESC_BREVE_TASSO_AMM, DESC_TASSO_AMM, DT_INIZIO_VALIDITA)
 Values
   (2, 'E3 ', 'Euribor 3 mesi', TO_DATE('09/22/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TASSO_AMM
   (ID_TASSO_AMM, DESC_BREVE_TASSO_AMM, DESC_TASSO_AMM, DT_INIZIO_VALIDITA)
 Values
   (3, 'E6', 'Euribor 6 mesi', TO_DATE('09/22/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TASSO_AMM
   (ID_TASSO_AMM, DESC_BREVE_TASSO_AMM, DESC_TASSO_AMM, DT_INIZIO_VALIDITA)
 Values
   (4, 'I0', 'Eurirs 10 anni', TO_DATE('09/22/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TASSO_AMM
   (ID_TASSO_AMM, DESC_BREVE_TASSO_AMM, DESC_TASSO_AMM, DT_INIZIO_VALIDITA)
 Values
   (5, 'I4', 'Eurirs 4 anni ', TO_DATE('09/22/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TASSO_AMM
   (ID_TASSO_AMM, DESC_BREVE_TASSO_AMM, DESC_TASSO_AMM, DT_INIZIO_VALIDITA)
 Values
   (6, 'I5  ', 'Eurirs 5 anni ', TO_DATE('09/22/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TASSO_AMM
   (ID_TASSO_AMM, DESC_BREVE_TASSO_AMM, DESC_TASSO_AMM, DT_INIZIO_VALIDITA)
 Values
   (7, 'I6', 'Eurirs 6 anni ', TO_DATE('09/22/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TASSO_AMM
   (ID_TASSO_AMM, DESC_BREVE_TASSO_AMM, DESC_TASSO_AMM, DT_INIZIO_VALIDITA)
 Values
   (8, 'I7 ', 'Eurirs 7 anni ', TO_DATE('09/22/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TASSO_AMM
   (ID_TASSO_AMM, DESC_BREVE_TASSO_AMM, DESC_TASSO_AMM, DT_INIZIO_VALIDITA)
 Values
   (9, 'I8', 'Eurirs 8 anni ', TO_DATE('09/22/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TASSO_AMM
   (ID_TASSO_AMM, DESC_BREVE_TASSO_AMM, DESC_TASSO_AMM, DT_INIZIO_VALIDITA)
 Values
   (10, 'I9', 'Eurirs 9 anni ', TO_DATE('09/22/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;


/* ---------------------------------------------------------------------- */
/* Script generated with: DeZign for Databases v6.2.1                     */
/* Target DBMS:           Oracle 11g                                      */
/* Project file:          REVOCHE_modello_fisico.dez                 */
/* Project name:                                                          */
/* Author:                                                                */
/* Script type:           Database creation script                        */
/* Created on:            2021-11-05 20:23                                */
/* ---------------------------------------------------------------------- */


/* ---------------------------------------------------------------------- */
/* Sequences                                                              */
/* ---------------------------------------------------------------------- */

--PBANDI_T_GESTIONE_REVOCA
CREATE SEQUENCE SEQ_PBANDI_T_GESTIONE_REVOCA
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;

--PBANDI_T_GESTIONE_REVOCA PER NUMERO_REVOCA
CREATE SEQUENCE SEQ_PBANDI_T_GEST_REVOC_NUMERO
    START WITH 100000
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;


--PBANDI_T_CONTRODEDUZ
CREATE SEQUENCE SEQ_PBANDI_T_CONTRODEDUZ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;

--PBANDI_T_CONTESTAZ
CREATE SEQUENCE SEQ_PBANDI_T_CONTESTAZ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;

	
/* ---------------------------------------------------------------------- */
/* Tables                                                                 */
/* ---------------------------------------------------------------------- */

/* ---------------------------------------------------------------------- */
/* ALTER table "PBANDI_D_CATEG_ANAGRAFICA"                                  */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_D_CATEG_ANAGRAFICA ADD FLAG_REVOCA VARCHAR2(1);


ALTER TABLE PBANDI_D_CATEG_ANAGRAFICA ADD CONSTRAINT CC_PBANDI_D_CATEG_ANAGRAFICA_1 
    CHECK (FLAG_REVOCA = 'S');


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_TIPOLOGIA_REVOCA"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_TIPOLOGIA_REVOCA (
    ID_TIPOLOGIA_REVOCA NUMBER(3) NOT NULL,
    DESC_BREVE_TIPOLOGIA_REVOCA VARCHAR2(20) NOT NULL,
    DESC_TIPOLOGIA_REVOCA VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_TIPOLOGIA_REVOCA PRIMARY KEY (ID_TIPOLOGIA_REVOCA) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_REVOCA"                                      */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_REVOCA (
    ID_STATO_REVOCA NUMBER(3) NOT NULL,
    DESC_BREVE_STATO_REVOCA VARCHAR2(20) NOT NULL,
    DESC_STATO_REVOCA VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_REVOCA PRIMARY KEY (ID_STATO_REVOCA) USING INDEX TABLESPACE PBANDI_IDX
);


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_ATTIVITA_REVOCA"                                   */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_ATTIVITA_REVOCA (
    ID_ATTIVITA_REVOCA NUMBER(3) NOT NULL,
    DESC_BREVE_ATTIVITA_REVOCA VARCHAR2(20) NOT NULL,
    DESC_ATTIVITA_REVOCA VARCHAR2(255) NOT NULL,
    ID_TIPOLOGIA_REVOCA NUMBER(3) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_ATTIVITA_REVOCA PRIMARY KEY (ID_ATTIVITA_REVOCA) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_STATO_TIPO_REVOCA"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_R_STATO_TIPO_REVOCA (
    ID_TIPOLOGIA_REVOCA NUMBER(3) NOT NULL,
    ID_STATO_REVOCA NUMBER(3) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_R_STATO_TIPO_REVOCA PRIMARY KEY (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_GESTIONE_REVOCA"                                   */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_GESTIONE_REVOCA (
    ID_GESTIONE_REVOCA NUMBER(8) NOT NULL,
    NUMERO_REVOCA NUMBER(8) NOT NULL,
    ID_TIPOLOGIA_REVOCA NUMBER(3) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
    ID_CAUSALE_BLOCCO NUMBER(3) NOT NULL,
    ID_CATEG_ANAGRAFICA NUMBER(3),
    DT_GESTIONE DATE,
    NUM_PROTOCOLLO VARCHAR2(100),
    FLAG_ORDINE_RECUPERO VARCHAR2(1),
    ID_MANCATO_RECUPERO NUMBER(8),
    ID_STATO_REVOCA NUMBER(3) NOT NULL,
    DT_STATO_REVOCA DATE NOT NULL,
    DT_NOTIFICA DATE,
    GG_RISPOSTA NUMBER(3),
    FLAG_PROROGA VARCHAR2(1),
    IMP_DA_REVOCARE_CONTRIB NUMBER(17,2),
    IMP_DA_REVOCARE_FINANZ NUMBER(17,2),
    IMP_DA_REVOCARE_GARANZIA NUMBER(17,2),
    FLAG_DETERMINA VARCHAR2(1),
    ESTREMI VARCHAR2(250),
    DT_DETERMINA DATE,
    NOTE VARCHAR2(4000),
    ID_ATTIVITA_REVOCA NUMBER(3),
    DT_ATTIVITA DATE,
    ID_MOTIVO_REVOCA NUMBER(3),
    FLAG_CONTRIB_REVOCA VARCHAR2(1),
    FLAG_CONTRIB_MINOR_SPESE VARCHAR2(1),
    FLAG_CONTRIB_DECURTAZ VARCHAR2(1),
    FLAG_FINANZ_REVOCA VARCHAR2(1),
    FLAG_FINANZ_MINOR_SPESE VARCHAR2(1),
    FLAG_FINANZ_DECURTAZ VARCHAR2(1),
    FLAG_GARANZIA_REVOCA VARCHAR2(1),
    FLAG_GARANZIA_MINOR_SPESE VARCHAR2(1),
    FLAG_GARANZIA_DECURTAZ VARCHAR2(1),
    IMP_CONTRIB_REVOCA_NO_RECU NUMBER(17,2),
    IMP_CONTRIB_REVOCA_RECU NUMBER(17,2),
    IMP_CONTRIB_INTERESSI NUMBER(17,2),
    IMP_FINANZ_REVOCA_NO_RECU NUMBER(17,2),
    IMP_FINANZ_REVOCA_RECU NUMBER(17,2),
    IMP_FINANZ_INTERESSI NUMBER(17,2),
    IMP_FINANZ_PRERECUPERO NUMBER(17,2),
    IMP_GARANZIA_REVOCA_NO_RECU NUMBER(17,2),
    IMP_GARANZIA_REVOCA_RECUPERO NUMBER(17,2),
    IMP_GARANZIA_INTERESSI NUMBER(17,2),
    IMP_GARANZIA_PRERECUPERO NUMBER(17,2),
	--
	IMP_IRES  NUMBER(17,2),
	IMP_DA_EROGARE_CONTRIBUTO  NUMBER(17,2),
	ID_DICHIARAZIONE_SPESA NUMBER(8),
	--
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
	COVAR			 INTEGER,
	IMP_DA_EROGARE_FINANZIAMENTO NUMBER(17,2),
    CONSTRAINT PK_PBANDI_T_GESTIONE_REVOCA PRIMARY KEY (ID_GESTIONE_REVOCA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_GESTIONE_REVOCA_1 ON PBANDI_T_GESTIONE_REVOCA (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_GESTIONE_REVOCA_2 ON PBANDI_T_GESTIONE_REVOCA (ID_CATEG_ANAGRAFICA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_GESTIONE_REVOCA_3 ON PBANDI_T_GESTIONE_REVOCA (ID_MANCATO_RECUPERO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_GESTIONE_REVOCA_4 ON PBANDI_T_GESTIONE_REVOCA (ID_STATO_REVOCA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_GESTIONE_REVOCA_5 ON PBANDI_T_GESTIONE_REVOCA (ID_ATTIVITA_REVOCA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_GESTIONE_REVOCA_6 ON PBANDI_T_GESTIONE_REVOCA (ID_TIPOLOGIA_REVOCA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_GESTIONE_REVOCA_7 ON PBANDI_T_GESTIONE_REVOCA (NUMERO_REVOCA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_GESTIONE_REVOCA_8 ON PBANDI_T_GESTIONE_REVOCA (ID_CAUSALE_BLOCCO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_GESTIONE_REVOCA_9 ON PBANDI_T_GESTIONE_REVOCA (ID_MOTIVO_REVOCA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_GESTIONE_REVOCA_10 ON PBANDI_T_GESTIONE_REVOCA (ID_DICHIARAZIONE_SPESA ) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT CC_PBANDI_T_GESTIONE_REVOCA_01 
    CHECK (FLAG_CONTRIB_DECURTAZ='S');

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT CC_PBANDI_T_GESTIONE_REVOCA_02 
    CHECK (FLAG_PROROGA='S');

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT CC_PBANDI_T_GESTIONE_REVOCA_03 
    CHECK (FLAG_DETERMINA='S');

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT CC_PBANDI_T_GESTIONE_REVOCA_04 
    CHECK (FLAG_CONTRIB_REVOCA='S');

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT CC_PBANDI_T_GESTIONE_REVOCA_05 
    CHECK (FLAG_CONTRIB_MINOR_SPESE='S');

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT CC_PBANDI_T_GESTIONE_REVOCA_06 
    CHECK (FLAG_FINANZ_REVOCA='S');

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT CC_PBANDI_T_GESTIONE_REVOCA_07 
    CHECK (FLAG_FINANZ_MINOR_SPESE='S');

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT CC_PBANDI_T_GESTIONE_REVOCA_08 
    CHECK (FLAG_FINANZ_DECURTAZ='S');

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT CC_PBANDI_T_GESTIONE_REVOCA_09 
    CHECK (FLAG_GARANZIA_REVOCA='S');

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT CC_PBANDI_T_GESTIONE_REVOCA_10 
    CHECK (FLAG_GARANZIA_MINOR_SPESE='S');

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT CC_PBANDI_T_GESTIONE_REVOCA_11 
    CHECK (FLAG_GARANZIA_DECURTAZ='S');

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT CC_PBANDI_T_GESTIONE_REVOCA_12 
    CHECK (FLAG_ORDINE_RECUPERO='S');

COMMENT ON COLUMN PBANDI_T_GESTIONE_REVOCA.NUMERO_REVOCA IS 'E'' il numero della revoca. E'' univoco per ciascuna revoca e va sempre preso a riferimento insieme all'' ID_TIPOLOGIA_REVOCA perché individua se si tratti della proposta, del procedimento o del provvedimento di una specifica revoca';

COMMENT ON COLUMN PBANDI_T_GESTIONE_REVOCA.DT_NOTIFICA IS 'E'' la data di ricezione delle notifiche al beneficiario per il calcolo della data di scadenza';

COMMENT ON COLUMN PBANDI_T_GESTIONE_REVOCA.GG_RISPOSTA IS 'Indica i giorni disponibili al beneficiario per calcolare la scadenza';

COMMENT ON COLUMN PBANDI_T_GESTIONE_REVOCA.FLAG_PROROGA IS 'Indica se è stata richiesta da beneficiario una proroga per controdedurre o per inviare le integrazioni a un procedimento di revoca';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_CONTRODEDUZ"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_CONTRODEDUZ (
    ID_STATO_CONTRODEDUZ NUMBER(3) NOT NULL,
    DESC_STATO_CONTRODEDUZ VARCHAR2(255) NOT NULL,
    DESC_BREVE_STATO_CONTRODEDUZ VARCHAR2(20) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_CONTRODEDUZ PRIMARY KEY (ID_STATO_CONTRODEDUZ) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_ATTIV_CONTRODEDUZ"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_ATTIV_CONTRODEDUZ (
    ID_ATTIV_CONTRODEDUZ NUMBER(3) NOT NULL,
    DESC_ATTIV_CONTRODEDUZ VARCHAR2(255) NOT NULL,
    DESC_BREVE_ATTIV_CONTRODEDUZ VARCHAR2(20) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_ATTIV_CONTRODEDUZ PRIMARY KEY (ID_ATTIV_CONTRODEDUZ) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_STATO_CONTESTAZ"                                   */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_STATO_CONTESTAZ (
    ID_STATO_CONTESTAZ NUMBER(3) NOT NULL,
    DESC_STATO_CONTESTAZ VARCHAR2(255) NOT NULL,
    DESC_BREVE_STATO_CONTESTAZ VARCHAR2(20) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_STATO_CONTESTAZ PRIMARY KEY (ID_STATO_CONTESTAZ) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_CONTRODEDUZ"                                       */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_CONTRODEDUZ (
    ID_CONTRODEDUZ NUMBER(8) NOT NULL,
    NUMERO_CONTRODEDUZ NUMBER(8) NOT NULL,
    ID_ENTITA NUMBER(3) NOT NULL,
    ID_TARGET NUMBER(8) NOT NULL,
    ID_STATO_CONTRODEDUZ NUMBER(3) NOT NULL,
    DT_STATO_CONTRODEDUZ DATE NOT NULL,
    ID_ATTIV_CONTRODEDUZ NUMBER(3),
    DT_ATTIV_CONTRODEDUZ DATE,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_CONTRODEDUZ PRIMARY KEY (ID_CONTRODEDUZ) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_CONTRODEDUZ_1 ON PBANDI_T_CONTRODEDUZ (NUMERO_CONTRODEDUZ) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_CONTRODEDUZ_2 ON PBANDI_T_CONTRODEDUZ (ID_ENTITA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_CONTRODEDUZ_3 ON PBANDI_T_CONTRODEDUZ (ID_TARGET) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_CONTRODEDUZ_4 ON PBANDI_T_CONTRODEDUZ (ID_STATO_CONTRODEDUZ) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_CONTRODEDUZ_5 ON PBANDI_T_CONTRODEDUZ (ID_ATTIV_CONTRODEDUZ) TABLESPACE PBANDI_IDX;

COMMENT ON COLUMN PBANDI_T_CONTRODEDUZ.ID_ENTITA IS 'Individua la tabella PBANDI_T_GESTIONE_REVOCA';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_CONTESTAZ"                                         */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_CONTESTAZ (
    ID_CONTESTAZ NUMBER(8) NOT NULL,
    NUMERO_CONTESTAZ NUMBER(8),
    ID_ENTITA NUMBER(3) NOT NULL,
    ID_TARGET NUMBER(8) NOT NULL,
    ID_STATO_CONTESTAZ NUMBER(3) NOT NULL,
    DT_STATO_CONTESTAZ DATE,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INSERIMENTO DATE NOT NULL,
    DT_AGGIORNAMENTO DATE,
    CONSTRAINT PK_PBANDI_T_CONTESTAZ PRIMARY KEY (ID_CONTESTAZ) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_CONTESTAZ_1 ON PBANDI_T_CONTESTAZ (NUMERO_CONTESTAZ) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_CONTESTAZ_2 ON PBANDI_T_CONTESTAZ (ID_ENTITA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_CONTESTAZ_3 ON PBANDI_T_CONTESTAZ (ID_TARGET) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_CONTESTAZ_4 ON PBANDI_T_CONTESTAZ (ID_STATO_CONTESTAZ) TABLESPACE PBANDI_IDX;

COMMENT ON COLUMN PBANDI_T_CONTESTAZ.ID_ENTITA IS 'Individua la tabella PBANDI_T_GESTIONE_REVOCA';

/* ---------------------------------------------------------------------- */
/* Alter table "PBANDI_T_REVOCA"                                         */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_T_REVOCA ADD ID_GESTIONE_REVOCA NUMBER(8);
CREATE INDEX IE4_PBANDI_T_REVOCA ON PBANDI_T_REVOCA (ID_GESTIONE_REVOCA) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Foreign key constraints                                                */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT FK_PBANDI_T_PROGETTO_77 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO);

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT FK_PBANDI_D_TIPO_REVOCA_01 
    FOREIGN KEY (ID_TIPOLOGIA_REVOCA) REFERENCES PBANDI_D_TIPOLOGIA_REVOCA (ID_TIPOLOGIA_REVOCA);

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT FK_PBANDI_D_CATEG_ANAG_09 
    FOREIGN KEY (ID_CATEG_ANAGRAFICA) REFERENCES PBANDI_D_CATEG_ANAGRAFICA (ID_CATEG_ANAGRAFICA);

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT FK_PBANDI_D_MANCATO_REC_02 
    FOREIGN KEY (ID_MANCATO_RECUPERO) REFERENCES PBANDI_D_MANCATO_RECUPERO (ID_MANCATO_RECUPERO);

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT FK_PBANDI_D_STATO_REVOCA_01 
    FOREIGN KEY (ID_STATO_REVOCA) REFERENCES PBANDI_D_STATO_REVOCA (ID_STATO_REVOCA);

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT FK_PBANDI_D_ATTIV_REVOCA_01 
    FOREIGN KEY (ID_ATTIVITA_REVOCA) REFERENCES PBANDI_D_ATTIVITA_REVOCA (ID_ATTIVITA_REVOCA);

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT FK_PBANDI_T_UTENTE_358 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT FK_PBANDI_T_UTENTE_359 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT FK_PBANDI_D_CAUS_BLOC_02 
    FOREIGN KEY (ID_CAUSALE_BLOCCO) REFERENCES PBANDI_D_CAUSALE_BLOCCO (ID_CAUSALE_BLOCCO);

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT FK_PBANDI_D_MOTIVO_REVOCA_04 
    FOREIGN KEY (ID_MOTIVO_REVOCA) REFERENCES PBANDI_D_MOTIVO_REVOCA (ID_MOTIVO_REVOCA);

ALTER TABLE PBANDI_T_GESTIONE_REVOCA ADD CONSTRAINT FK_PBANDI_T_DICHIARAZ_SPESA_10 
    FOREIGN KEY (ID_DICHIARAZIONE_SPESA ) REFERENCES PBANDI_T_DICHIARAZIONE_SPESA (ID_DICHIARAZIONE_SPESA);

ALTER TABLE PBANDI_D_ATTIVITA_REVOCA ADD CONSTRAINT FK_PBANDI_D_TIPO_REVOCA_03 
    FOREIGN KEY (ID_TIPOLOGIA_REVOCA) REFERENCES PBANDI_D_TIPOLOGIA_REVOCA (ID_TIPOLOGIA_REVOCA);

ALTER TABLE PBANDI_R_STATO_TIPO_REVOCA ADD CONSTRAINT FK_PBANDI_D_TIPO_REVOCA_02 
    FOREIGN KEY (ID_TIPOLOGIA_REVOCA) REFERENCES PBANDI_D_TIPOLOGIA_REVOCA (ID_TIPOLOGIA_REVOCA);

ALTER TABLE PBANDI_R_STATO_TIPO_REVOCA ADD CONSTRAINT FK_PBANDI_D_STATO_REVOCA_02 
    FOREIGN KEY (ID_STATO_REVOCA) REFERENCES PBANDI_D_STATO_REVOCA (ID_STATO_REVOCA);

ALTER TABLE PBANDI_T_CONTRODEDUZ ADD CONSTRAINT FK_PBANDI_C_ENTITA_13
    FOREIGN KEY (ID_ENTITA) REFERENCES PBANDI_C_ENTITA (ID_ENTITA);

ALTER TABLE PBANDI_T_CONTRODEDUZ ADD CONSTRAINT FK_PBANDI_CONTRODEDUZ_01 
    FOREIGN KEY (ID_STATO_CONTRODEDUZ) REFERENCES PBANDI_D_STATO_CONTRODEDUZ (ID_STATO_CONTRODEDUZ);

ALTER TABLE PBANDI_T_CONTRODEDUZ ADD CONSTRAINT FK_PBANDI_D_ATTIV_CON_DEDUZ_01 
    FOREIGN KEY (ID_ATTIV_CONTRODEDUZ) REFERENCES PBANDI_D_ATTIV_CONTRODEDUZ (ID_ATTIV_CONTRODEDUZ);

ALTER TABLE PBANDI_T_CONTRODEDUZ ADD CONSTRAINT FK_PBANDI_T_UTENTE_400 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_CONTRODEDUZ ADD CONSTRAINT FK_PBANDI_T_UTENTE_401 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_CONTESTAZ ADD CONSTRAINT FK_PBANDI_C_ENTITA_14 
    FOREIGN KEY (ID_ENTITA) REFERENCES PBANDI_C_ENTITA (ID_ENTITA);

ALTER TABLE PBANDI_T_CONTESTAZ ADD CONSTRAINT FK_PBANDI_D_STATO_CONTESTAZ_01 
    FOREIGN KEY (ID_STATO_CONTESTAZ) REFERENCES PBANDI_D_STATO_CONTESTAZ (ID_STATO_CONTESTAZ);

ALTER TABLE PBANDI_T_CONTESTAZ ADD CONSTRAINT FK_PBANDI_T_UTENTE_402
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_CONTESTAZ ADD CONSTRAINT FK_PBANDI_T_UTENTE_403 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_T_REVOCA ADD CONSTRAINT FK_PBANDI_T_GESTIONE_REVOCA_01 
    FOREIGN KEY (ID_GESTIONE_REVOCA) REFERENCES PBANDI_T_GESTIONE_REVOCA (ID_GESTIONE_REVOCA);


Insert into PBANDI_D_TIPOLOGIA_REVOCA
   (ID_TIPOLOGIA_REVOCA, DESC_BREVE_TIPOLOGIA_REVOCA, DESC_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (1, 'PROP_REV', 'Proposta di revoca', TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPOLOGIA_REVOCA
   (ID_TIPOLOGIA_REVOCA, DESC_BREVE_TIPOLOGIA_REVOCA, DESC_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (2, 'PROC_REV', 'Procedimento di revoca', TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_TIPOLOGIA_REVOCA
   (ID_TIPOLOGIA_REVOCA, DESC_BREVE_TIPOLOGIA_REVOCA, DESC_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (3, 'PROV_REV', 'Provvedimento di revoca', TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

Insert into PBANDI_D_STATO_REVOCA
   (ID_STATO_REVOCA, DESC_BREVE_STATO_REVOCA, DESC_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (1, 'NUOVO', 'Nuovo', TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_REVOCA
   (ID_STATO_REVOCA, DESC_BREVE_STATO_REVOCA, DESC_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (2, 'BOZZA_PROC_REV', 'Creata bozza procedimento di revoca', TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_REVOCA
   (ID_STATO_REVOCA, DESC_BREVE_STATO_REVOCA, DESC_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (3, 'BOZZA_PROV_REV', 'Creata bozza provvedimento di revoca', TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_REVOCA
   (ID_STATO_REVOCA, DESC_BREVE_STATO_REVOCA, DESC_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (4, 'ARCH', 'Archiviato', TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_REVOCA
   (ID_STATO_REVOCA, DESC_BREVE_STATO_REVOCA, DESC_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (5, 'BOZZA', 'Bozza', TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_REVOCA
   (ID_STATO_REVOCA, DESC_BREVE_STATO_REVOCA, DESC_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (6, 'ATT_CONTRODED', 'In attesa di controdeduzione', TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_REVOCA
   (ID_STATO_REVOCA, DESC_BREVE_STATO_REVOCA, DESC_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (7, 'SOSPESO', 'Sospeso (richieste integrazioni)', TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_REVOCA
   (ID_STATO_REVOCA, DESC_BREVE_STATO_REVOCA, DESC_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (8, 'PROV_REV', 'Emesso provvedimento di revoca', TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_REVOCA
   (ID_STATO_REVOCA, DESC_BREVE_STATO_REVOCA, DESC_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (9, 'RIT_AUTOTUTELA', 'Ritirato in autotutela', TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_REVOCA
   (ID_STATO_REVOCA, DESC_BREVE_STATO_REVOCA, DESC_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (10, 'CONFERMATO', 'Provvedimento confermato', TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_R_STATO_TIPO_REVOCA
Insert into PBANDI_R_STATO_TIPO_REVOCA
   (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (1, 1, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_STATO_TIPO_REVOCA
   (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (1, 2, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_STATO_TIPO_REVOCA
   (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (1, 3, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_STATO_TIPO_REVOCA
   (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (1, 4, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_STATO_TIPO_REVOCA
   (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (2, 3, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_STATO_TIPO_REVOCA
   (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (2, 4, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_STATO_TIPO_REVOCA
   (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (2, 5, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_STATO_TIPO_REVOCA
   (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (2, 6, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_STATO_TIPO_REVOCA
   (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (2, 7, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_STATO_TIPO_REVOCA
   (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (3, 5, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_STATO_TIPO_REVOCA
   (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (3, 8, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_STATO_TIPO_REVOCA
   (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (3, 9, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_STATO_TIPO_REVOCA
   (ID_TIPOLOGIA_REVOCA, ID_STATO_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (3, 10, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

MERGE INTO PBANDI_D_CATEG_ANAGRAFICA A USING
 (SELECT
  1 as "ID_CATEG_ANAGRAFICA",
  'AdG' as "DESC_CATEG_ANAGRAFICA",
  'S' as "FLAG_REVOCA"
  FROM DUAL) B
ON (A.ID_CATEG_ANAGRAFICA = B.ID_CATEG_ANAGRAFICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_CATEG_ANAGRAFICA, DESC_CATEG_ANAGRAFICA, FLAG_REVOCA)
VALUES (
  B.ID_CATEG_ANAGRAFICA, B.DESC_CATEG_ANAGRAFICA, B.FLAG_REVOCA)
WHEN MATCHED THEN
UPDATE SET 
  A.DESC_CATEG_ANAGRAFICA = B.DESC_CATEG_ANAGRAFICA,
  A.FLAG_REVOCA = B.FLAG_REVOCA;

MERGE INTO PBANDI_D_CATEG_ANAGRAFICA A USING
 (SELECT
  2 as "ID_CATEG_ANAGRAFICA",
  'AdA' as "DESC_CATEG_ANAGRAFICA",
  'S' as "FLAG_REVOCA"
  FROM DUAL) B
ON (A.ID_CATEG_ANAGRAFICA = B.ID_CATEG_ANAGRAFICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_CATEG_ANAGRAFICA, DESC_CATEG_ANAGRAFICA, FLAG_REVOCA)
VALUES (
  B.ID_CATEG_ANAGRAFICA, B.DESC_CATEG_ANAGRAFICA, B.FLAG_REVOCA)
WHEN MATCHED THEN
UPDATE SET 
  A.DESC_CATEG_ANAGRAFICA = B.DESC_CATEG_ANAGRAFICA,
  A.FLAG_REVOCA = B.FLAG_REVOCA;

MERGE INTO PBANDI_D_CATEG_ANAGRAFICA A USING
 (SELECT
  3 as "ID_CATEG_ANAGRAFICA",
  'AdC' as "DESC_CATEG_ANAGRAFICA",
  'S' as "FLAG_REVOCA"
  FROM DUAL) B
ON (A.ID_CATEG_ANAGRAFICA = B.ID_CATEG_ANAGRAFICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_CATEG_ANAGRAFICA, DESC_CATEG_ANAGRAFICA, FLAG_REVOCA)
VALUES (
  B.ID_CATEG_ANAGRAFICA, B.DESC_CATEG_ANAGRAFICA, B.FLAG_REVOCA)
WHEN MATCHED THEN
UPDATE SET 
  A.DESC_CATEG_ANAGRAFICA = B.DESC_CATEG_ANAGRAFICA,
  A.FLAG_REVOCA = B.FLAG_REVOCA;

MERGE INTO PBANDI_D_CATEG_ANAGRAFICA A USING
 (SELECT
  4 as "ID_CATEG_ANAGRAFICA",
  'OI' as "DESC_CATEG_ANAGRAFICA",
  NULL as "FLAG_REVOCA"
  FROM DUAL) B
ON (A.ID_CATEG_ANAGRAFICA = B.ID_CATEG_ANAGRAFICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_CATEG_ANAGRAFICA, DESC_CATEG_ANAGRAFICA, FLAG_REVOCA)
VALUES (
  B.ID_CATEG_ANAGRAFICA, B.DESC_CATEG_ANAGRAFICA, B.FLAG_REVOCA)
WHEN MATCHED THEN
UPDATE SET 
  A.DESC_CATEG_ANAGRAFICA = B.DESC_CATEG_ANAGRAFICA,
  A.FLAG_REVOCA = B.FLAG_REVOCA;

MERGE INTO PBANDI_D_CATEG_ANAGRAFICA A USING
 (SELECT
  5 as "ID_CATEG_ANAGRAFICA",
  'GdF' as "DESC_CATEG_ANAGRAFICA",
  'S' as "FLAG_REVOCA"
  FROM DUAL) B
ON (A.ID_CATEG_ANAGRAFICA = B.ID_CATEG_ANAGRAFICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_CATEG_ANAGRAFICA, DESC_CATEG_ANAGRAFICA, FLAG_REVOCA)
VALUES (
  B.ID_CATEG_ANAGRAFICA, B.DESC_CATEG_ANAGRAFICA, B.FLAG_REVOCA)
WHEN MATCHED THEN
UPDATE SET 
  A.DESC_CATEG_ANAGRAFICA = B.DESC_CATEG_ANAGRAFICA,
  A.FLAG_REVOCA = B.FLAG_REVOCA;

MERGE INTO PBANDI_D_CATEG_ANAGRAFICA A USING
 (SELECT
  6 as "ID_CATEG_ANAGRAFICA",
  'Corte dei Conti EU' as "DESC_CATEG_ANAGRAFICA",
  NULL as "FLAG_REVOCA"
  FROM DUAL) B
ON (A.ID_CATEG_ANAGRAFICA = B.ID_CATEG_ANAGRAFICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_CATEG_ANAGRAFICA, DESC_CATEG_ANAGRAFICA, FLAG_REVOCA)
VALUES (
  B.ID_CATEG_ANAGRAFICA, B.DESC_CATEG_ANAGRAFICA, B.FLAG_REVOCA)
WHEN MATCHED THEN
UPDATE SET 
  A.DESC_CATEG_ANAGRAFICA = B.DESC_CATEG_ANAGRAFICA,
  A.FLAG_REVOCA = B.FLAG_REVOCA;

MERGE INTO PBANDI_D_CATEG_ANAGRAFICA A USING
 (SELECT
  7 as "ID_CATEG_ANAGRAFICA",
  'Commissione EU' as "DESC_CATEG_ANAGRAFICA",
  NULL as "FLAG_REVOCA"
  FROM DUAL) B
ON (A.ID_CATEG_ANAGRAFICA = B.ID_CATEG_ANAGRAFICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_CATEG_ANAGRAFICA, DESC_CATEG_ANAGRAFICA, FLAG_REVOCA)
VALUES (
  B.ID_CATEG_ANAGRAFICA, B.DESC_CATEG_ANAGRAFICA, B.FLAG_REVOCA)
WHEN MATCHED THEN
UPDATE SET 
  A.DESC_CATEG_ANAGRAFICA = B.DESC_CATEG_ANAGRAFICA,
  A.FLAG_REVOCA = B.FLAG_REVOCA;

MERGE INTO PBANDI_D_CATEG_ANAGRAFICA A USING
 (SELECT
  8 as "ID_CATEG_ANAGRAFICA",
  'RdCA' as "DESC_CATEG_ANAGRAFICA",
  'S' as "FLAG_REVOCA"
  FROM DUAL) B
ON (A.ID_CATEG_ANAGRAFICA = B.ID_CATEG_ANAGRAFICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_CATEG_ANAGRAFICA, DESC_CATEG_ANAGRAFICA, FLAG_REVOCA)
VALUES (
  B.ID_CATEG_ANAGRAFICA, B.DESC_CATEG_ANAGRAFICA, B.FLAG_REVOCA)
WHEN MATCHED THEN
UPDATE SET 
  A.DESC_CATEG_ANAGRAFICA = B.DESC_CATEG_ANAGRAFICA,
  A.FLAG_REVOCA = B.FLAG_REVOCA;

MERGE INTO PBANDI_D_CATEG_ANAGRAFICA A USING
 (SELECT
  9 as "ID_CATEG_ANAGRAFICA",
  'Area crediti' as "DESC_CATEG_ANAGRAFICA",
  NULL as "FLAG_REVOCA"
  FROM DUAL) B
ON (A.ID_CATEG_ANAGRAFICA = B.ID_CATEG_ANAGRAFICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_CATEG_ANAGRAFICA, DESC_CATEG_ANAGRAFICA, FLAG_REVOCA)
VALUES (
  B.ID_CATEG_ANAGRAFICA, B.DESC_CATEG_ANAGRAFICA, B.FLAG_REVOCA)
WHEN MATCHED THEN
UPDATE SET 
  A.DESC_CATEG_ANAGRAFICA = B.DESC_CATEG_ANAGRAFICA,
  A.FLAG_REVOCA = B.FLAG_REVOCA;

MERGE INTO PBANDI_D_CATEG_ANAGRAFICA A USING
 (SELECT
  10 as "ID_CATEG_ANAGRAFICA",
  'Istituto di credito' as "DESC_CATEG_ANAGRAFICA",
  NULL as "FLAG_REVOCA"
  FROM DUAL) B
ON (A.ID_CATEG_ANAGRAFICA = B.ID_CATEG_ANAGRAFICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_CATEG_ANAGRAFICA, DESC_CATEG_ANAGRAFICA, FLAG_REVOCA)
VALUES (
  B.ID_CATEG_ANAGRAFICA, B.DESC_CATEG_ANAGRAFICA, B.FLAG_REVOCA)
WHEN MATCHED THEN
UPDATE SET 
  A.DESC_CATEG_ANAGRAFICA = B.DESC_CATEG_ANAGRAFICA,
  A.FLAG_REVOCA = B.FLAG_REVOCA;

MERGE INTO PBANDI_D_CATEG_ANAGRAFICA A USING
 (SELECT
  11 as "ID_CATEG_ANAGRAFICA",
  'Prefettura' as "DESC_CATEG_ANAGRAFICA",
  'S' as "FLAG_REVOCA"
  FROM DUAL) B
ON (A.ID_CATEG_ANAGRAFICA = B.ID_CATEG_ANAGRAFICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_CATEG_ANAGRAFICA, DESC_CATEG_ANAGRAFICA, FLAG_REVOCA)
VALUES (
  B.ID_CATEG_ANAGRAFICA, B.DESC_CATEG_ANAGRAFICA, B.FLAG_REVOCA)
WHEN MATCHED THEN
UPDATE SET 
  A.DESC_CATEG_ANAGRAFICA = B.DESC_CATEG_ANAGRAFICA,
  A.FLAG_REVOCA = B.FLAG_REVOCA;

MERGE INTO PBANDI_D_CATEG_ANAGRAFICA A USING
 (SELECT
  12 as "ID_CATEG_ANAGRAFICA",
  'Corte dei conti' as "DESC_CATEG_ANAGRAFICA",
  'S' as "FLAG_REVOCA"
  FROM DUAL) B
ON (A.ID_CATEG_ANAGRAFICA = B.ID_CATEG_ANAGRAFICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_CATEG_ANAGRAFICA, DESC_CATEG_ANAGRAFICA, FLAG_REVOCA)
VALUES (
  B.ID_CATEG_ANAGRAFICA, B.DESC_CATEG_ANAGRAFICA, B.FLAG_REVOCA)
WHEN MATCHED THEN
UPDATE SET 
  A.DESC_CATEG_ANAGRAFICA = B.DESC_CATEG_ANAGRAFICA,
  A.FLAG_REVOCA = B.FLAG_REVOCA;

COMMIT;

Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (1, 'ITER_PROC', 'Avviato iter autorizzativo procedimento', 2, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (2, 'ITER_INTEGR', 'Avviato iter autorizzativo integrazioni', 2, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (3, 'ITER_ARCH', 'Avviato iter autorizzativo archiviazione', 2, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (4, 'ITER_PROV', 'Avviato iter autirizzativo provvedimento', 3, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (5, 'ITER_RIT_AUTOTUTELA', 'Avviato iter autorizzativo ritiro in autotutela', 3, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (6, 'CONTRODED_RIC', 'Controdeduzione ricevuta', 2, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (7, 'INTEGR_RIC', 'Integrazioni ricevute', 2, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (8, 'RICH_PROROG_RIC', 'Ricevuta richiesta di proroga', 2, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (9, 'PROROG_ACC', 'Proroga accettata', 2, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (10, 'PROROG_RIF', 'Proroga rifiutata', 2, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (11, 'TERMINE_SCAD', 'Termine scaduto', 2, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (12, 'CONTEST_RIC', 'Ricevuta contestazione', 3, TO_DATE('01/14/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (13, 'ITER_CONF_PROV', 'Avviato iter autorizzativo conferma provvedimento', 3, TO_DATE('07/05/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (14, 'RICH_ACC_ATTI', 'Richiesto accesso agli atti', 2, TO_DATE('07/05/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (15, 'RICH_INTEGR_CHIUSA', 'Richiesta integrazioni chiusa d''ufficio', 2, TO_DATE('09/12/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (16, 'IN_CARICO_EROGAZ', 'In carico ad erogazione', 2, TO_DATE('10/24/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (17, 'ITER_FALLITO_PROC', 'Iter autorizzativo fallito', 2, TO_DATE('11/25/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_ATTIVITA_REVOCA
   (ID_ATTIVITA_REVOCA, DESC_BREVE_ATTIVITA_REVOCA, DESC_ATTIVITA_REVOCA, ID_TIPOLOGIA_REVOCA, DT_INIZIO_VALIDITA)
 Values
   (18, 'ITER_FALLITO_PROV', 'Iter autorizzativo fallito', 3, TO_DATE('11/25/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;



--PBANDI_D_STATO_CONTRODEDUZ
Insert into PBANDI_D_STATO_CONTRODEDUZ
   (ID_STATO_CONTRODEDUZ, DESC_STATO_CONTRODEDUZ, DESC_BREVE_STATO_CONTRODEDUZ, DT_INIZIO_VALIDITA)
 Values
   (1, 'APERTA', 'Aperta', TO_DATE('09/15/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_CONTRODEDUZ
   (ID_STATO_CONTRODEDUZ, DESC_STATO_CONTRODEDUZ, DESC_BREVE_STATO_CONTRODEDUZ, DT_INIZIO_VALIDITA)
 Values
   (2, 'INVIATA', 'Inviata', TO_DATE('09/15/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_D_STATO_CONTESTAZ
Insert into PBANDI_D_STATO_CONTESTAZ
   (ID_STATO_CONTESTAZ, DESC_STATO_CONTESTAZ, DESC_BREVE_STATO_CONTESTAZ, DT_INIZIO_VALIDITA)
 Values
   (1, 'APERTA', 'Aperta', TO_DATE('09/15/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_STATO_CONTESTAZ
   (ID_STATO_CONTESTAZ, DESC_STATO_CONTESTAZ, DESC_BREVE_STATO_CONTESTAZ, DT_INIZIO_VALIDITA)
 Values
   (2, 'INVIATA', 'Inviata', TO_DATE('09/15/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;


/* ---------------------------------------------------------------------- */
/* Script generated with: DeZign for Databases v6.2.1                     */
/* Target DBMS:           Oracle 11g                                      */
/* Project file:          Tempi scadenze_modello_fisico.dez                 */
/* Project name:                                                          */
/* Author:                                                                */
/* Script type:           Database creation script                        */
/* Created on:            2022-01-24                                */
/* ---------------------------------------------------------------------- */


/**************************************************************************
-- INSTALLALE PRIMA pck_pbandi_processo
**************************************************************************/


/* ---------------------------------------------------------------------- */
/* Sequences                                                              */
/* ---------------------------------------------------------------------- */

--PBANDI_T_MONIT_TEMPI
CREATE SEQUENCE SEQ_PBANDI_T_MONIT_TEMPI
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

--PBANDI_R_PARAM_MONIT_BANDO_LIN
CREATE SEQUENCE SEQ_PBANDI_R_PAR_MONIT_BAN_LIN
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;

/*
--PBANDI_C_PARAMETRI_MONIT
-- Commentato perchè già eseguita in produzione 24/10/2023

CREATE SEQUENCE SEQ_PBANDI_C_PARAMETRI_MONIT
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
	NOCACHE
    nocycle
    noorder;
*/
	
/* ---------------------------------------------------------------------- */
/* Tables                                                                 */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_R_BANDO_LINEA_INTERVENT ADD FLAG_MONITORAGGIO_TEMPI VARCHAR2(1);
ALTER TABLE PBANDI_R_BANDO_LINEA_INTERVENT ADD CONSTRAINT CK_PBANDI_R_BAN_LIN_INT_03 
    CHECK (FLAG_MONITORAGGIO_TEMPI='S');
COMMENT ON COLUMN PBANDI_R_BANDO_LINEA_INTERVENT.FLAG_MONITORAGGIO_TEMPI IS 'Se ''S'' attiva il monitoraggio tempi di scadenze per il bando';

Insert into PBANDI_C_COSTANTI
   (ATTRIBUTO, VALORE)
 Values
   ('monitoraggio_tempi', 'S');
COMMIT;


Insert into PBANDI_C_COSTANTI
   (ATTRIBUTO, VALORE)
 Values
   ('PERCENTUALE_IRES', '24');
COMMIT;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_MONIT_TEMPI"                                       */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_MONIT_TEMPI (
    ID_MONIT_TEMPI NUMBER(8) NOT NULL,
    ID_PROGETTO NUMBER(8) NOT NULL,
    DT_DECORRENZA DATE NOT NULL,
    DT_FINE DATE,
    ID_ENTITA NUMBER(3) NOT NULL,
    ID_TARGET NUMBER(8) NOT NULL,
    DESCRIZIONE VARCHAR2(4000),
    ID_PARAM_MONIT_BANDO_LINEA NUMBER(8),
    NUM_GIORNI NUMBER(4),
    ID_MONIT_TEMPI_SOSPESO NUMBER(8),
    CONSTRAINT PK_PBANDI_T_MONIT_TEMPI PRIMARY KEY (ID_MONIT_TEMPI) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_MONIT_TEMPI_1 ON PBANDI_T_MONIT_TEMPI (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_MONIT_TEMPI_2 ON PBANDI_T_MONIT_TEMPI (ID_ENTITA,ID_TARGET) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_MONIT_TEMPI_3 ON PBANDI_T_MONIT_TEMPI (ID_PARAM_MONIT_BANDO_LINEA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_MONIT_TEMPI_4 ON PBANDI_T_MONIT_TEMPI (ID_MONIT_TEMPI_SOSPESO) TABLESPACE PBANDI_IDX;

COMMENT ON COLUMN PBANDI_T_MONIT_TEMPI.DT_DECORRENZA IS 'È la data dell''evento scatenante da cui decorrono i termini ';

COMMENT ON COLUMN PBANDI_T_MONIT_TEMPI.DT_FINE IS 'È la data dell''evento che interrompe la decorrenza dei termini';

COMMENT ON COLUMN PBANDI_T_MONIT_TEMPI.ID_PARAM_MONIT_BANDO_LINEA IS 'È l''identificativo della PBANDI_R_PARAMETRI_MONIT_BANDO_LINEA corrispondente all''associazione tra parametro e bando-linea applicata all''evento corrente';

COMMENT ON COLUMN PBANDI_T_MONIT_TEMPI.NUM_GIORNI IS 'se null recuperarlo dinamicamente nella vista nel range data inizio e data fine validità della tabella di configurazione che associa bando-linea al parametro applicato  ';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_C_PARAMETRI_MONIT"                                   */
/* ---------------------------------------------------------------------- */
/*
-- Commentato perchè già eseguita in produzione 24/10/2023

CREATE TABLE PBANDI_C_PARAMETRI_MONIT (
    ID_PARAMETRO_MONIT NUMBER(3) NOT NULL,
    DESC_BREVE_PARAMETRO_MONIT VARCHAR2(20) NOT NULL,
    DESC_PARAMETRO_MONIT VARCHAR2(200) NOT NULL,
	ID_TEMPLATE_NOTIFICA INTEGER NOT NULL,
    CONSTRAINT PK_PBANDI_C_PARAMETRI_MONIT PRIMARY KEY (ID_PARAMETRO_MONIT) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_C_PARAMETRI_MONIT_1 ON PBANDI_C_PARAMETRI_MONIT (ID_TEMPLATE_NOTIFICA)  TABLESPACE PBANDI_IDX;
*/

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_PARAM_MONIT_BANDO_LIN"                             */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_R_PARAM_MONIT_BANDO_LIN (
    ID_PARAM_MONIT_BANDO_LINEA NUMBER(8) NOT NULL,
    ID_PARAMETRO_MONIT NUMBER(3) NOT NULL,
    PROGR_BANDO_LINEA_INTERVENTO NUMBER(8) NOT NULL,
    NUM_GIORNI NUMBER(4),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_R_PAR_MONI_BANDO_LIN PRIMARY KEY (ID_PARAM_MONIT_BANDO_LINEA) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_R_PAR_MONI_BAN_LIN_1 ON PBANDI_R_PARAM_MONIT_BANDO_LIN (ID_PARAMETRO_MONIT)  TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_R_PAR_MONI_BAN_LIN_2 ON PBANDI_R_PARAM_MONIT_BANDO_LIN (PROGR_BANDO_LINEA_INTERVENTO)  TABLESPACE PBANDI_IDX;


-- VALIDAZIONE SPESA

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_ATTRIBUTO_VALID_SPESA"                             */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_ATTRIBUTO_VALID_SPESA (
    ID_ATTRIB_VALID_SPESA NUMBER(3) NOT NULL,
    DESC_BREVE_ATTRIB_VALID_SPESA VARCHAR2(20) NOT NULL,
    DESC_ATTRIB_VALID_SPESA VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
	COD_FINPIS VARCHAR2(2),
    CONSTRAINT PK_PBANDI_D_ATTRIB_VALID_SPESA PRIMARY KEY (ID_ATTRIB_VALID_SPESA) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_ESITO_VALID_SPESA"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_ESITO_VALID_SPESA (
    ID_ESITO_VALID_SPESA NUMBER(3) NOT NULL,
    DESC_BREVE_ESITO_VALID_SPESA VARCHAR2(20) NOT NULL,
    DESC_ESITO_VALID_SPESA VARCHAR2(255) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
	COD_FINPIS  VARCHAR2(2),
    CONSTRAINT PK_PBANDI_D_ESITO_VALID_SPESA PRIMARY KEY (ID_ESITO_VALID_SPESA) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* ALTER table "PBANDI_T_DICHIARAZIONE_SPESA"                               */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_T_DICHIARAZIONE_SPESA  ADD (
    ID_ATTRIB_VALID_SPESA NUMBER(3),
    ID_ESITO_VALID_SPESA NUMBER(3),
	IMP_TOT_BANCA  		NUMBER(13,2),
	ID_DICHIARAZIONE_FINP NUMBER(8)
);


COMMENT ON COLUMN PBANDI_T_DICHIARAZIONE_SPESA.IMP_TOT_BANCA IS 'indica la premialità che la banca da, nel caso in cui venga erogato il 100% del prestito';
CREATE INDEX IE_PBANDI_T_DICHIARAZ_SPESA_02 ON PBANDI_T_DICHIARAZIONE_SPESA (ID_ATTRIB_VALID_SPESA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_DICHIARAZ_SPESA_03 ON PBANDI_T_DICHIARAZIONE_SPESA (ID_ESITO_VALID_SPESA) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_DICHIARAZ_SPESA_04 ON PBANDI_T_DICHIARAZIONE_SPESA (ID_DICHIARAZIONE_FINP) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_T_DICHIARAZIONE_SPESA ADD CONSTRAINT FK_PBANDI_D_ATTR_VAL_SPESA_01 
    FOREIGN KEY (ID_ATTRIB_VALID_SPESA) REFERENCES PBANDI_D_ATTRIBUTO_VALID_SPESA (ID_ATTRIB_VALID_SPESA);

ALTER TABLE PBANDI_T_DICHIARAZIONE_SPESA ADD CONSTRAINT FK_PBANDI_D_ESITO_VAL_SPESA_01 
    FOREIGN KEY (ID_ESITO_VALID_SPESA) REFERENCES PBANDI_D_ESITO_VALID_SPESA (ID_ESITO_VALID_SPESA);

--PBANDI_D_ATTRIBUTO_VALID_SPESA
Insert into PBANDI_D_ATTRIBUTO_VALID_SPESA
   (ID_ATTRIB_VALID_SPESA, DESC_BREVE_ATTRIB_VALID_SPESA, DESC_ATTRIB_VALID_SPESA, DT_INIZIO_VALIDITA, COD_FINPIS)
 Values
   (1, 'SE', 'SENZA EROGAZIONE', TO_DATE('11/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'E1');
Insert into PBANDI_D_ATTRIBUTO_VALID_SPESA
   (ID_ATTRIB_VALID_SPESA, DESC_BREVE_ATTRIB_VALID_SPESA, DESC_ATTRIB_VALID_SPESA, DT_INIZIO_VALIDITA, COD_FINPIS)
 Values
   (2, 'CE', 'CON EROGAZIONE', TO_DATE('11/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'E2');
Insert into PBANDI_D_ATTRIBUTO_VALID_SPESA
   (ID_ATTRIB_VALID_SPESA, DESC_BREVE_ATTRIB_VALID_SPESA, DESC_ATTRIB_VALID_SPESA, DT_INIZIO_VALIDITA, COD_FINPIS)
 Values
   (3, 'RP', 'REVOCA PARZIALE', TO_DATE('11/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'E5');
Insert into PBANDI_D_ATTRIBUTO_VALID_SPESA
   (ID_ATTRIB_VALID_SPESA, DESC_BREVE_ATTRIB_VALID_SPESA, DESC_ATTRIB_VALID_SPESA, DT_INIZIO_VALIDITA, COD_FINPIS)
 Values
   (4, 'RT', 'REVOCA TOTALE', TO_DATE('11/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'E6');
Insert into PBANDI_D_ATTRIBUTO_VALID_SPESA
   (ID_ATTRIB_VALID_SPESA, DESC_BREVE_ATTRIB_VALID_SPESA, DESC_ATTRIB_VALID_SPESA, DT_INIZIO_VALIDITA, COD_FINPIS)
 Values
   (5, 'ERP', 'EROGAZIONE E REVOCA PARZIALE', TO_DATE('11/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'E7');
Insert into PBANDI_D_ATTRIBUTO_VALID_SPESA
   (ID_ATTRIB_VALID_SPESA, DESC_BREVE_ATTRIB_VALID_SPESA, DESC_ATTRIB_VALID_SPESA, DT_INIZIO_VALIDITA, COD_FINPIS)
 Values
   (6, 'SR', 'SENZA REVOCA', TO_DATE('11/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'N1');
COMMIT;


--PBANDI_D_ESITO_VALID_SPESA
Insert into PBANDI_D_ESITO_VALID_SPESA
   (ID_ESITO_VALID_SPESA, DESC_BREVE_ESITO_VALID_SPESA, DESC_ESITO_VALID_SPESA, DT_INIZIO_VALIDITA, COD_FINPIS)
 Values
   (1, 'ESA', 'ESAURIENTE', TO_DATE('11/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), '23');
Insert into PBANDI_D_ESITO_VALID_SPESA
   (ID_ESITO_VALID_SPESA, DESC_BREVE_ESITO_VALID_SPESA, DESC_ESITO_VALID_SPESA, DT_INIZIO_VALIDITA, COD_FINPIS)
 Values
   (2, 'ESA_AMM_INF', 'ESAURIENTE AMMESSO INFERIORE', TO_DATE('11/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), '24');
Insert into PBANDI_D_ESITO_VALID_SPESA
   (ID_ESITO_VALID_SPESA, DESC_BREVE_ESITO_VALID_SPESA, DESC_ESITO_VALID_SPESA, DT_INIZIO_VALIDITA, COD_FINPIS)
 Values
   (3, 'NEG', 'NEGATIVO', TO_DATE('11/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), '26');
COMMIT;



/* ---------------------------------------------------------------------- */
/* TABELLE TECNICHE DI CARICAMENTO XML PER MIGRAZIONE                                               */
/* ---------------------------------------------------------------------- */
CREATE TABLE MFINPIS_W_CARICAMENTO_XML
(
  ID_CARICAMENTO   NUMBER                       NOT NULL,
  FILE_XML         SYS.XMLTYPE,
  NOME_FILE        VARCHAR2(255)           NOT NULL,
  FLAG_CARICATO    VARCHAR2(2),
  NUMERO_DOMANDA   VARCHAR2(20),
  FONTE            VARCHAR2(20)            NOT NULL,
  DT_INSERIMENTO   DATE                         DEFAULT sysdate,
  TITOLO_PROGETTO  VARCHAR2(1000),
  FLAG_CLONATO     VARCHAR2(2),
  ID_CARICAMENTO_CLONATO NUMBER,
  ID_AGEVOLAZIONE  NUMBER,
  DT_CONCESSIONE_AGEV DATE,
  DT_COMITATO_AGEV DATE,
  COD_FONDO               VARCHAR2(4),
  CODICE_ERRORE           VARCHAR2(10),
  ID_DICHIARAZIONE_SPESA INTEGER,
  CODICE_PROGETTO_AGEV VARCHAR2(100) 
)
TABLESPACE PBANDI_TBL
XMLTYPE FILE_XML STORE AS CLOB 
      ( TABLESPACE  PBANDI_LOB 
        ENABLE      STORAGE IN ROW
        CHUNK       8192
        RETENTION
        NOCACHE
        INDEX       (
          TABLESPACE PBANDI_LOB
       )
      )
NOCACHE
NOPARALLEL;

CREATE INDEX IDX_MFINPIS_W_CARICAMENTO_XML ON MFINPIS_W_CARICAMENTO_XML
(ID_CARICAMENTO)
TABLESPACE PBANDI_IDX;


CREATE INDEX IDX1_MFINPIS_W_CARICAMENTO_XML ON MFINPIS_W_CARICAMENTO_XML
(COD_FONDO)
TABLESPACE PBANDI_IDX;

CREATE INDEX IDX2_MFINPIS_W_CARICAMENTO_XML ON MFINPIS_W_CARICAMENTO_XML
(NUMERO_DOMANDA)
TABLESPACE PBANDI_IDX;


create table tmp_mfinpis_dom
(id_caricamento number,
 UuidDomanda  varchar2(100),
 TitoloProgetto varchar2(1000),
 IdEsterno varchar2(100),
 tipo_beneficiario  varchar2(100),
 DataComitato   varchar2(100),
 DataConcessione varchar2(100),
 Abi  varchar2(100),
 Cab varchar2(100),
 ContoCorrente varchar2(100),
 Iban varchar2(100),
 NomeBanca varchar2(100),
 IndirizzoAgenzia varchar2(100),
 CapAgenzia  varchar2(100),
 ComuneAgenzia varchar2(100),
 DataDomanda varchar2(100));

CREATE UNIQUE INDEX IDX_TMP_MFINPIS_DOM ON TMP_MFINPIS_DOM
(ID_CARICAMENTO)
TABLESPACE PBANDI_IDX
;

create table tmp_mfinpis_agev 
(id_caricamento number,
 id_agevolazione varchar2(100),
 id_domanda  varchar2(100),
 ImportoRichiesto   varchar2(100),
 TipoAgevolazione   varchar2(100),
 ProgrWf            varchar2(100),  
 ImportoCostoProgetto varchar2(100),
 ImportoAmmesso  varchar2(100),
 ImportoFondo  varchar2(100),
 ImportoBanca  varchar2(100),
 DataConcessione  varchar2(100),
 DataEsito  varchar2(100),
 Id_Progetto  varchar2(100),
 ImportoEsl varchar2(100));

CREATE INDEX IDX1_TMP_MFINPIS_AGEV ON TMP_MFINPIS_AGEV
(ID_CARICAMENTO)
TABLESPACE PBANDI_IDX
;

CREATE INDEX IDX2_TMP_MFINPIS_AGEV ON TMP_MFINPIS_AGEV
(ID_AGEVOLAZIONE)
TABLESPACE PBANDI_IDX
;

create table tmp_mfinpis_spese
(id_caricamento number,
 UuidTipoSpesa  varchar2(100),
 IdTipoSpesaEsterno varchar2(100),
 ImportoSpesa   varchar2(100),
 ImportoContributo   varchar2(100),
 ImportoErogato varchar2(100),
 Id_Agevolazione  varchar2(100),
 Id_Progetto  varchar2(100));

CREATE INDEX IDX_TMP_MFINPIS_SPESE ON TMP_MFINPIS_SPESE
(ID_CARICAMENTO)
TABLESPACE PBANDI_IDX
;

CREATE INDEX IDX2_TMP_MFINPIS_SPESE ON TMP_MFINPIS_SPESE
(ID_AGEVOLAZIONE)
TABLESPACE PBANDI_IDX
;

CREATE INDEX IDX3_TMP_MFINPIS_SPESE ON TMP_MFINPIS_SPESE
(IdTipoSpesaEsterno)
TABLESPACE PBANDI_IDX
;



create table tmp_mfinpis_anag
(id_caricamento number,
 UuidAnagrafica  varchar2(100),
 RagioneSociale varchar2(500),
 TipoBeneficiario varchar2(100),
 NaturaGiuridica varchar2(100),
 CodiceFiscale  varchar2(100),
 PartitaIva  varchar2(100),
 Cognome varchar2(100),
 Nome varchar2(100),
 DataNascita varchar2(100),
 Telefono varchar2(100),
 Fax  varchar2(100),
 Email varchar2(100),
 FlagPubblicoPrivato  varchar2(1),
 TipodocumentoRiconoscimento  varchar2(100),
 NumeroDocumentoRiconosciment varchar2(100),
 DataRilascioDocumento varchar2(100),
 DataScadenzaDocumento varchar2(100), 
 EnteRilascioDocumento  varchar2(100),
 DataCostituzione   varchar2(100));

CREATE INDEX IDX_TMP_MFINPIS_ANAG ON TMP_MFINPIS_ANAG
(ID_CARICAMENTO)
TABLESPACE PBANDI_IDX
;

create table tmp_mfinpis_anag_comp
(id_caricamento number,
 TipoRuolo  varchar2(100),
 TipoSocio  varchar2(100)
 );

create table tmp_mfinpis_comp_anag
(id_caricamento number,
 UuidAnagrafica  varchar2(100),
 RagioneSociale varchar2(500),
 NaturaGiuridica varchar2(100),
 CodiceFiscale  varchar2(100),
 PartitaIva  varchar2(100)
 );

create table tmp_mfinpis_dich 
(id_caricamento number,
 id_dichiarazione varchar2(100),
 TipoAgevolazione   varchar2(100),
 ProgrWf            varchar2(100),
 id_agevolazione varchar2(100),
 StatoDS varchar2(100),
 AttributoDS varchar2(100),
 TipoDichiarazione   varchar2(100),
 ImportoImponibile   varchar2(100),
 ImportoRendicontato varchar2(100),
 ImportoAmmesso  varchar2(100),
 DataConferma   varchar2(100),
 DataInizioIstruttoria   varchar2(100),
 DataEsito   varchar2(100),
 MatricolaIstruttore   varchar2(100),
 id_pban_dichiarazione varchar2(100),
 Nr_Protocollo varchar2(100),
 IdDocDigitale varchar2(100),
 Id_Progetto  varchar2(100),
 DataRichiestaIntegrazioni   varchar2(100),
 UtenteRichiestaIntegrazioni   varchar2(100),
 DataCreazione   varchar2(100));

CREATE INDEX IDX_tmp_mfinpis_dich ON tmp_mfinpis_dich
(ID_CARICAMENTO)
TABLESPACE PBANDI_IDX
;
 
create table tmp_mfinpis_dich_spese
(id_caricamento number,
 id_dichiarazione varchar2(100),
 TipoAgevolazione   varchar2(100),
 ProgrWf            varchar2(100),
 IdVoceSpesa varchar2(100),
 ImportoAmmesso   varchar2(100),
 ImportoRichiesto varchar2(100),
 FlagIres  varchar2(100),
 DescrizioneSpesa   varchar2(100),
 Id_Agevolazione varchar2(100),
 Id_Progetto  varchar2(100));

CREATE INDEX IDX_tmp_mfinpis_dich_spese ON tmp_mfinpis_dich_spese
(ID_CARICAMENTO)
TABLESPACE PBANDI_IDX
;

CREATE INDEX IDX2_tmp_mfinpis_dich_spese ON tmp_mfinpis_dich_spese
(ID_DICHIARAZIONE)
TABLESPACE PBANDI_IDX
;

create table tmp_mfinpis_sedi
(id_caricamento number,
 Indirizzo varchar2(500),
 NumeroCivico   varchar2(100),
 Cap            varchar2(100),
 CodiceComune varchar2(100),
 PaeseEsteroOAltroComune   varchar2(100),
 SiglaProvincia varchar2(100),
 TipoSede  varchar2(100),
 FlagAmministrativa   varchar2(100));

CREATE INDEX IDX_TMP_TMP_MFINPIS_SEDI ON TMP_MFINPIS_SEDI
(ID_CARICAMENTO)
TABLESPACE PBANDI_IDX
;

--VIEW MULTIAGEVOLAZIONE
create or replace view TMP_MFINPIS_MULTI_AGEV as
   WITH agev AS (  SELECT   id_caricamento,
                            MIN (id_agevolazione) agev_min,
                            MAX (id_agevolazione) agev_max,
                            COUNT ( * ) num_agev
                     FROM   TMP_MFINPIS_AGEV
                    WHERE   IMPORTOAMMESSO != '0'
                 GROUP BY   id_caricamento
                   HAVING   COUNT ( * ) > 1),
        spese AS (select *
                   from TMP_MFINPIS_SPESE a
                   where importospesa != '0'
                   and exists
                     (select null
                     from TMP_MFINPIS_SPESE
                     where id_agevolazione != a.id_agevolazione
                     and id_caricamento = a.id_caricamento
                     and importospesa != '0')
                     )
   SELECT   a."ID_CARICAMENTO",
            a."UUIDTIPOSPESA",
            a."IDTIPOSPESAESTERNO",
            a."IMPORTOSPESA",
            a."IMPORTOCONTRIBUTO",
            a."IMPORTOEROGATO",
            a."ID_AGEVOLAZIONE",
            b.id_progetto,
            b.tipoagevolazione,
            c.file_xml,
            c.nome_file,
            c.numero_domanda,
            c.fonte,
            c.flag_clonato,
            c.flag_caricato,
            TO_DATE (SUBSTR (b.dataconcessione, 1, 10), 'yyyy-mm-dd')
               AS DT_CONCESSIONE_AGEV,
            TO_DATE (SUBSTR (b.dataesito, 1, 10), 'yyyy-mm-dd')
               AS DT_COMITATO_AGEV
     FROM         spese a
               JOIN
                  TMP_MFINPIS_AGEV b
               ON a.id_caricamento = b.id_caricamento
                  AND a.id_agevolazione = b.id_agevolazione
            JOIN
               MFINPIS_W_CARICAMENTO_XML c
            ON c.id_caricamento = a.id_caricamento
    WHERE   a.id_agevolazione IS NOT NULL
            AND EXISTS
                  (SELECT   NULL
                     FROM   TMP_MFINPIS_SPESE
                    WHERE   NVL (id_agevolazione, a.id_agevolazione) !=
                               a.id_agevolazione
                            AND id_caricamento = a.id_caricamento)
            AND EXISTS
                  (SELECT   NULL
                     FROM   agev
                    WHERE       id_caricamento = a.id_caricamento
                            AND NVL (agev_min, '0') != NVL (agev_max, '0')
                            AND agev_min != agev_max)
UNION ALL -- Agevolazioni della stessa tipologia
   SELECT   a."ID_CARICAMENTO",
            a."UUIDTIPOSPESA",
            a."IDTIPOSPESAESTERNO",
            a."IMPORTOSPESA",
            a."IMPORTOCONTRIBUTO",
            a."IMPORTOEROGATO",
            a."ID_AGEVOLAZIONE",
            b.id_progetto,
            b.tipoagevolazione,
            c.file_xml,
            c.nome_file,
            c.numero_domanda,
            c.fonte,
            c.flag_clonato,
            c.flag_caricato,
            TO_DATE (SUBSTR (b.dataconcessione, 1, 10), 'yyyy-mm-dd')
               AS DT_CONCESSIONE_AGEV,
            TO_DATE (SUBSTR (b.dataesito, 1, 10), 'yyyy-mm-dd')
               AS DT_COMITATO_AGEV
	FROM TMP_MFINPIS_SPESE a
	   JOIN
		  TMP_MFINPIS_AGEV b
	   ON a.id_caricamento = b.id_caricamento
		  AND a.id_agevolazione = b.id_agevolazione
	JOIN
	   MFINPIS_W_CARICAMENTO_XML c
	ON c.id_caricamento = a.id_caricamento	WHERE a.id_caricamento in
	(select id_caricamento from
		(	
		select id_caricamento, TIPOAGEVOLAZIONE
		from TMP_MFINPIS_AGEV a
		where A.importoammesso != '0'
		group by id_caricamento, TIPOAGEVOLAZIONE
		having count(*) > 1));					

create table PBANDI_W_MFINPIS_DICH
(ID_PROGETTO NUMBER(8),
 TIPO_DICHIARAZIONE_MFINPIS VARCHAR2(1),
 DESC_TIPO_DICH_MFINPIS VARCHAR2(100),
 id_dichiarazione_mfinpis varchar2(100),
 TipoAgevolazione_mfinpis   varchar2(100),
 ProgrWf            varchar2(100),
 id_agevolazione_mfinpis varchar2(100),
 StatoDS_mfinpis varchar2(100),
 AttributoDS_mfinpis varchar2(100),
 ImportoImponibile   NUMBER(13,2),
 ImportoRendicontato   NUMBER(13,2),
 ImportoAmmesso   NUMBER(13,2),
 DataConferma   DATE,
 DataInizioIstruttoria   DATE,
 DataEsito  DATE,
 MatricolaIstruttore   varchar2(100),
 id_pban_dichiarazione varchar2(100),
 Nr_Protocollo varchar2(100),
 IdDocDigitale varchar2(100),
 Id_Progetto_mfinpis  varchar2(100),
 IdVoceSpesa varchar2(100),
 ImportoRichiesto  NUMBER(13,2),
 FlagIres  varchar2(100),
 DescrizioneSpesa_mfinpis   varchar2(100)
 );

/* ---------------------------------------------------------------------- */
/* Foreign key constraints                                                */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_T_MONIT_TEMPI ADD CONSTRAINT FK_PBANDI_T_PROGETTO_80 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO);

ALTER TABLE PBANDI_T_MONIT_TEMPI ADD CONSTRAINT FK_PBANDI_C_ENTITA_08 
    FOREIGN KEY (ID_ENTITA) REFERENCES PBANDI_C_ENTITA (ID_ENTITA);

ALTER TABLE PBANDI_T_MONIT_TEMPI ADD CONSTRAINT FK_PBANDI_R_PAR_MON_BAN_LIN_01 
    FOREIGN KEY (ID_PARAM_MONIT_BANDO_LINEA) REFERENCES PBANDI_R_PARAM_MONIT_BANDO_LIN (ID_PARAM_MONIT_BANDO_LINEA);

ALTER TABLE PBANDI_T_MONIT_TEMPI ADD CONSTRAINT FK_PBANDI_T_MONIT_TEMPI_01 
    FOREIGN KEY (ID_MONIT_TEMPI_SOSPESO) REFERENCES PBANDI_T_MONIT_TEMPI (ID_MONIT_TEMPI);

ALTER TABLE PBANDI_R_PARAM_MONIT_BANDO_LIN ADD CONSTRAINT FK_PBANDI_R_BANDO_LINEA_INT_32 
    FOREIGN KEY (PROGR_BANDO_LINEA_INTERVENTO) REFERENCES PBANDI_R_BANDO_LINEA_INTERVENT (PROGR_BANDO_LINEA_INTERVENTO);

ALTER TABLE PBANDI_R_PARAM_MONIT_BANDO_LIN ADD CONSTRAINT FK_PBANDI_C_PARAM_MONIT_01 
    FOREIGN KEY (ID_PARAMETRO_MONIT) REFERENCES PBANDI_C_PARAMETRI_MONIT (ID_PARAMETRO_MONIT);
	
ALTER TABLE PBANDI_C_PARAMETRI_MONIT ADD CONSTRAINT FK_PBANDI_D_TEMPL_NOTIFICA_02 
    FOREIGN KEY (ID_TEMPLATE_NOTIFICA) REFERENCES PBANDI_D_TEMPLATE_NOTIFICA (ID_TEMPLATE_NOTIFICA);
	
	
-- CONFIGURAZIONE
--PBANDI_D_TEMPLATE_NOTIFICA

Insert into PBANDI_D_TEMPLATE_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, DESCR_BREVE_TEMPLATE_NOTIFICA, COMP_SUBJECT, COMP_MESSAGE)
 Values
   (21, 'NotificaMOT01', 'Notifica per numero di giorni entro cui chiudere la validazione dall''invio della rendicontazione', '<div id="notifica"><p>Esame Rendicontazione n. ${num_dichiarazione_di_spesa} inviata il ${data_dichiarazione_di_spesa}. <br></></div>');
Insert into PBANDI_D_TEMPLATE_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, DESCR_BREVE_TEMPLATE_NOTIFICA, COMP_SUBJECT, COMP_MESSAGE)
 Values
   (22, 'NotificaMOT02', 'Notifica per numero di giorni entro cui inviare l''integrazione alla dichiarazione di spesa dalla notifica della richiesta', '<div id="notifica"><p>Richiesta in data ${data_integraz_dic} integrazione alla rendicontazione n.  ${num_dichiarazione_di_spesa}. <br></></div>');
Insert into PBANDI_D_TEMPLATE_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, DESCR_BREVE_TEMPLATE_NOTIFICA, COMP_SUBJECT, COMP_MESSAGE)
 Values
   (23, 'NotificaTempiErogazione', 'Notifica per numero di giorni entro cui autorizzare l’erogazione dell’agevolazione a decorrere dalla data di chiusura della validazione della rendicontazione con esito Erogazione', '<div id="notifica"><p>Approvazione dell''erogazione per il progetto ${codice_visualizzato} reperito su pbandi_t_progetto tramite ${id_progetto} - rendicontazione validata il ${data_chiusura_validazione}. <br></></div>');
Insert into PBANDI_D_TEMPLATE_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, DESCR_BREVE_TEMPLATE_NOTIFICA, COMP_SUBJECT, COMP_MESSAGE)
 Values
   (24, 'NotificaBloccoProgetto', 'Notifica per blocco progetto', '<div id="notifica"><p>Si notifica che in data <strong>${dt_inserimento_blocco}</strong> è stato inserito un blocco avente causale <strong>${des_causale_blocco}</strong>.</p></div>');
Insert into PBANDI_D_TEMPLATE_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, DESCR_BREVE_TEMPLATE_NOTIFICA, COMP_SUBJECT, COMP_MESSAGE)
 Values
   (25, 'NotificaSbloccoProgetto', 'Notifica per sblocco progetto', '<div id="notifica"><p>Si notifica che in data <strong>${dt_inserimento_sblocco}</strong> è stato eliminato il blocco avente causale <strong>${des_causale_blocco}</strong>.</p></div>');

Insert into PBANDI_D_TEMPLATE_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, DESCR_BREVE_TEMPLATE_NOTIFICA, COMP_SUBJECT, COMP_MESSAGE)
 Values
   (26, 'NotificaMOT03', 'Notifica per numero di giorni entro cui inviare le controdeduzioni per il procedimento di revoca dalla notifica della richiesta', '<div id="notifica"><p>Approvazione del procedimento di revoca n. ${num_revoca} per il progetto ${codice_visualizzato} reperito su pbandi_t_progetto tramite ${id_progetto} - notificata il ${data_notifica}. <br></></div>');
Insert into PBANDI_D_TEMPLATE_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, DESCR_BREVE_TEMPLATE_NOTIFICA, COMP_SUBJECT, COMP_MESSAGE)
 Values
   (27, 'NotificaMOT06', 'Notifica per numero di giorni entro cui effettuare i controlli in loco', '<div id="notifica"><p>Esecuzione controllo in loco avviato il ${data_avvio_controlli} sul progetto ${codice_visualizzato} tramite ${id_controllo_loco}. <br></></div>');
Insert into PBANDI_D_TEMPLATE_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, DESCR_BREVE_TEMPLATE_NOTIFICA, COMP_SUBJECT, COMP_MESSAGE)
 Values
   (28, 'NotificaMOT07', 'Notifica per numero di giorni entro cui inviare l''integrazione al controllo in loco dalla notifica della richiesta', '<div id="notifica"><p>Richiesta di integrazione per il controllo in loco relativo al progetto ${codice_visualizzato} tramite ${id_controllo_loco}. <br></></div>');

Insert into PBANDI_D_TEMPLATE_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, DESCR_BREVE_TEMPLATE_NOTIFICA, COMP_SUBJECT, COMP_MESSAGE)
 Values
   (29, 'NotificaMOT04', 'Notifica per numero di giorni che l’Istruttore ha a disposizione per concludere l’esame delle controdeduzioni ricevute dal Beneficiario e procedere con l’archiviazione del provvedimento', '<div id="notifica"><p>Controdeduzioni del beneficiario al procedimento di revoca n. ${num_revoca} per il progetto ${codice_visualizzato} reperito su pbandi_t_progetto tramite ${id_progetto} - ricevute il ${data_attivita}. <br></></div>');

Insert into PBANDI_D_TEMPLATE_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, DESCR_BREVE_TEMPLATE_NOTIFICA, COMP_SUBJECT, COMP_MESSAGE)
 Values
   (30, 'NotificaMOT05', 'Notifica per numero di giorni entro cui inviare le integrazione alle controdeduzioni per il procedimento di revoca dalla notifica della richiesta', '<div id="notifica"><p>Richiesta integrazione alle controdeduzione del beneficiario al procedimento di revoca n. ${num_revoca} per il progetto ${codice_visualizzato} reperito su pbandi_t_progetto tramite ${id_progetto} - ricevute il ${data_attivita}. <br></></div>');

COMMIT;

--PBANDI_D_METADATA_NOTIFICA

Insert into PBANDI_D_METADATA_NOTIFICA
   (ID_METADATA_NOTIFICA, NOME_PARAMETRO)
 Values
   (20, 'CODICE_VISUALIZZATO');
Insert into PBANDI_D_METADATA_NOTIFICA
   (ID_METADATA_NOTIFICA, NOME_PARAMETRO)
 Values
   (21, 'ID_PROGETTO');


Insert into PBANDI_D_METADATA_NOTIFICA
   (ID_METADATA_NOTIFICA, NOME_PARAMETRO)
 Values
   (22, 'DATA_INSERIMENTO_BLOCCO');
Insert into PBANDI_D_METADATA_NOTIFICA
   (ID_METADATA_NOTIFICA, NOME_PARAMETRO)
 Values
   (23, 'DES_CAUSALE_BLOCCO');
Insert into PBANDI_D_METADATA_NOTIFICA
   (ID_METADATA_NOTIFICA, NOME_PARAMETRO)
 Values
   (24, 'DATA_INSERIMENTO_SBLOCCO');


Insert into PBANDI_D_METADATA_NOTIFICA
   (ID_METADATA_NOTIFICA, NOME_PARAMETRO)
 Values
   (25, 'DATA_AVVIO_CONTROLLI');
Insert into PBANDI_D_METADATA_NOTIFICA
   (ID_METADATA_NOTIFICA, NOME_PARAMETRO)
 Values
   (27, 'ID_CONTROLLO_LOCO');
Insert into PBANDI_D_METADATA_NOTIFICA
   (ID_METADATA_NOTIFICA, NOME_PARAMETRO)
 Values
   (28, 'NUM_REVOCA');
Insert into PBANDI_D_METADATA_NOTIFICA
   (ID_METADATA_NOTIFICA, NOME_PARAMETRO)
 Values
   (29, 'DATA_NOTIFICA');
Insert into PBANDI_D_METADATA_NOTIFICA
   (ID_METADATA_NOTIFICA, NOME_PARAMETRO)
 Values
   (30, 'DATA_ATTIVITA');
COMMIT;



--PBANDI_R_PLACEHOLDER_NOTIFICA
SET DEFINE OFF;
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (21, 3, '${data_dichiarazione_di_spesa}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (21, 4, '${num_dichiarazione_di_spesa}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (22, 4, '${num_dichiarazione_di_spesa}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (22, 17, '${data_integraz_dic}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (23, 2, '${data_chiusura_validazione}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (23, 20, '${codice_visualizzato}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (23, 21, '${id_progetto}');
   
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (24, 22, '${dt_inserimento_blocco}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (24, 23, '${des_causale_blocco}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (25, 23, '${des_causale_blocco}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (25, 24, '${dt_inserimento_sblocco}');   
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (26, 20, '${codice_visualizzato}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (26, 21, '${id_progetto}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (26, 28, '${num_revoca}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (26, 29, '${data_notifica}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (27, 20, '${codice_visualizzato}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (27, 25, '${data_avvio_controlli}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (27, 27, '${id_controllo_loco}');

Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (28, 20, '${codice_visualizzato}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (28, 27, '${id_controllo_loco}');

Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (29, 20, '${codice_visualizzato}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (29, 21, '${id_progetto}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (29, 28, '${num_revoca}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (29, 30, '${data_attivita}');


Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (30, 20, '${codice_visualizzato}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (30, 21, '${id_progetto}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (30, 28, '${num_revoca}');
Insert into PBANDI_R_PLACEHOLDER_NOTIFICA
   (ID_TEMPLATE_NOTIFICA, ID_METADATA_NOTIFICA, PLACEHOLDER)
 Values
   (30, 30, '${data_attivita}');

COMMIT;


--PBANDI_C_PARAMETRI_MONIT
Insert into PBANDI_C_PARAMETRI_MONIT
   (ID_PARAMETRO_MONIT, DESC_BREVE_PARAMETRO_MONIT, DESC_PARAMETRO_MONIT, ID_TEMPLATE_NOTIFICA)
 Values
   (1, 'MOT01', 'numero di giorni entro cui chiudere la validazione dall''invio della rendicontazione', 21);
Insert into PBANDI_C_PARAMETRI_MONIT
   (ID_PARAMETRO_MONIT, DESC_BREVE_PARAMETRO_MONIT, DESC_PARAMETRO_MONIT, ID_TEMPLATE_NOTIFICA)
 Values
   (2, 'MOT02', 'numero di giorni entro cui inviare l''integrazione alla dichiarazione di spesa dalla notifica della richiesta', 22);
Insert into PBANDI_C_PARAMETRI_MONIT
   (ID_PARAMETRO_MONIT, DESC_BREVE_PARAMETRO_MONIT, DESC_PARAMETRO_MONIT, ID_TEMPLATE_NOTIFICA)
 Values
   (3, 'MOT03', 'numero di giorni entro cui inviare le controdeduzioni per il procedimento di revoca dalla notifica della richiesta', 26);
Insert into PBANDI_C_PARAMETRI_MONIT
   (ID_PARAMETRO_MONIT, DESC_BREVE_PARAMETRO_MONIT, DESC_PARAMETRO_MONIT, ID_TEMPLATE_NOTIFICA)
 Values
   (4, 'MOT04', 'numero di giorni che l’Istruttore ha a disposizione per concludere l’esame delle controdeduzioni ricevute dal Beneficiario e procedere con l’archiviazione del provvedimento', 29);
Insert into PBANDI_C_PARAMETRI_MONIT
   (ID_PARAMETRO_MONIT, DESC_BREVE_PARAMETRO_MONIT, DESC_PARAMETRO_MONIT, ID_TEMPLATE_NOTIFICA)
 Values
   (5, 'MOT05', 'numero di giorni entro cui inviare le integrazione alle controdeduzioni per il procedimento di revoca dalla notifica della richiesta', 30);
Insert into PBANDI_C_PARAMETRI_MONIT
   (ID_PARAMETRO_MONIT, DESC_BREVE_PARAMETRO_MONIT, DESC_PARAMETRO_MONIT, ID_TEMPLATE_NOTIFICA)
 Values
   (6, 'MOT06', 'numero di giorni entro cui numero di giorni entro cui effettuare i controlli in loco', 27);
Insert into PBANDI_C_PARAMETRI_MONIT
   (ID_PARAMETRO_MONIT, DESC_BREVE_PARAMETRO_MONIT, DESC_PARAMETRO_MONIT, ID_TEMPLATE_NOTIFICA)
 Values
   (7, 'MOT07', 'numero di giorni entro cui inviare l''integrazione al controllo in loco dalla notifica della richiesta', 28);

COMMIT;


--PBANDI_C_COSTANTI
Insert into PBANDI_C_COSTANTI
   (ATTRIBUTO, VALORE)
 Values
   ('MONIT_TEMPI_NUM_GG_ESAME_CONTRODED_RIC', '30');
Insert into PBANDI_C_COSTANTI
   (ATTRIBUTO, VALORE)
 Values
   ('MONIT_TEMPI_NUM_GG_ESAME_CONTRODED_NON_RIC', '20');
Insert into PBANDI_C_COSTANTI
   (ATTRIBUTO, VALORE)
 Values
   ('MONIT_TEMPI_NUM_GG_ESAME_INTEGR_NON_RIC', '20');
  
   
COMMIT;



/*------------------------------------------------------------------------*/
/*  PROCEDURE                                                             */
/*------------------------------------------------------------------------*/
CREATE OR REPLACE PROCEDURE GetTemplateMessage
                                    (p_descr_breve_template_notif    IN  PBANDI_D_TEMPLATE_NOTIFICA.DESCR_BREVE_TEMPLATE_NOTIFICA%TYPE,
                                     p_subject_notifica             OUT  PBANDI_D_TEMPLATE_NOTIFICA.COMP_SUBJECT%TYPE,
                                     p_message_notifica             OUT  PBANDI_D_TEMPLATE_NOTIFICA.COMP_MESSAGE%TYPE) AS 

     CURSOR c1 (c_descr_breve_template_notif PBANDI_D_TEMPLATE_NOTIFICA.DESCR_BREVE_TEMPLATE_NOTIFICA%TYPE) IS
        SELECT comp_subject,
               comp_message,
               id_template_notifica
          FROM PBANDI_D_TEMPLATE_NOTIFICA
         WHERE descr_breve_template_notifica = c_descr_breve_template_notif;

     r1 c1%ROWTYPE;

     CURSOR c2 (c_id_template_notifica PBANDI_D_TEMPLATE_NOTIFICA.ID_TEMPLATE_NOTIFICA%TYPE) IS
        SELECT nome_parametro,
               placeholder
          FROM PBANDI_R_PLACEHOLDER_NOTIFICA a,
               PBANDI_D_METADATA_NOTIFICA b
         WHERE a.id_template_notifica = c_id_template_notifica
           AND b.id_metadata_notifica = a.id_metadata_notifica;


     v_subject_notifica     VARCHAR2(4000);
     v_message_notifica     CLOB;
     v_statement_replace CLOB;


  BEGIN
     OPEN c1(p_descr_breve_template_notif);
     FETCH c1 into r1;
     IF c1%NOTFOUND THEN 
        p_message_notifica := 'Template di notifica non previsto';
		p_subject_notifica := '';
     ELSE
            v_subject_notifica := r1.comp_subject;
            v_message_notifica := r1.comp_message;
            FOR r2 in c2(r1.id_template_notifica)
            LOOP
            v_statement_replace :=

                'DECLARE'||chr(10)||
                   'v_subject_notifica     VARCHAR2(4000);'||chr(10)||
                   'v_message_notifica     CLOB;'||chr(10)|| ---- mc sviluppo settembre 2019
                   'v_placeholder          PBANDI_R_PLACEHOLDER_NOTIFICA.PLACEHOLDER%TYPE;'||chr(10)||
                   'v_nome_parametro       PBANDI_D_METADATA_NOTIFICA.NOME_PARAMETRO%TYPE;'||chr(10)||
                'BEGIN'||chr(10)||
                   'v_subject_notifica     := '''||replace(v_subject_notifica,'''','''''')||''';'||chr(10)||
                   'v_message_notifica     := '''||replace(v_message_notifica,'''','''''')||''';'||chr(10)||
                   'v_placeholder          := '''||r2.placeholder||''';'||chr(10)||
                   'v_nome_parametro       :=   pck_pbandi_processo.v_metadata_notifiche_processo.'||replace(r2.nome_parametro,'''','''''')||';'||chr(10)||
                   ':v_subject_notifica := replace(v_subject_notifica,v_placeholder,v_nome_parametro);'||chr(10)||
                   ':v_message_notifica := replace(v_message_notifica,v_placeholder,v_nome_parametro);'||chr(10)||
                 'END;';

                   EXECUTE IMMEDIATE v_statement_replace USING OUT v_subject_notifica, OUT v_message_notifica;


            END LOOP;
			
			p_subject_notifica := v_subject_notifica;
			p_message_notifica := v_message_notifica;
       
     --
     
     END IF;
     CLOSE c1;

  END GetTemplateMessage;

-- Calcola i giorni di sospensione per un identificativo sottoposto a monitoraggio
-- Le sospensioni con dt_fine nulla non sono considerati nel calcolo
CREATE OR REPLACE FUNCTION MonitTempi_GetNumGGSospesi (p_id_monit_tempi_sospeso IN NUMBER) RETURN NUMBER IS
   CURSOR c1 (c_id_monit_tempi_sospeso NUMBER) IS
      SELECT sum(TRUNC(dt_fine) - TRUNC(dt_decorrenza)) as num_gg_sospesi
	    FROM PBANDI_T_MONIT_TEMPI
       WHERE id_monit_tempi_sospeso = c_id_monit_tempi_sospeso
	     AND dt_fine IS NULL;
		 
  v_num_gg_sospesi NUMBER;
		 
BEGIN
  OPEN c1 (p_id_monit_tempi_sospeso);
  FETCH c1 INTO v_num_gg_sospesi;
  CLOSE c1;

RETURN nvl(v_num_gg_sospesi,0);
END MonitTempi_GetNumGGSospesi;

-- Calcola la data di sospensione per un identificativo sottoposto a monitoraggio
-- Si assume che ci sia solo una sospensione aperta per evento sospeso.Se così non fosse si prende l'ultima
-- Se non ci sono sospensioni viene restituita la SYSDATE
CREATE OR REPLACE FUNCTION MonitTempi_GetDataSospensione (p_id_monit_tempi_sospeso IN NUMBER) RETURN DATE IS
   CURSOR c1 (c_id_monit_tempi_sospeso NUMBER) IS
      SELECT max(TRUNC(dt_decorrenza)) as v_dt_sospensione
	    FROM PBANDI_T_MONIT_TEMPI
       WHERE id_monit_tempi_sospeso = c_id_monit_tempi_sospeso
	     AND dt_fine IS NULL;
		 
  v_dt_sospensione DATE;
		 
BEGIN
  OPEN c1 (p_id_monit_tempi_sospeso);
  FETCH c1 INTO v_dt_sospensione;
  CLOSE c1;
  
  IF v_dt_sospensione IS NULL THEN
     v_dt_sospensione := TRUNC(SYSDATE);
  END IF;

RETURN v_dt_sospensione;
END MonitTempi_GetDataSospensione;

-- Verifica se c'è ancora una sospensione aperta per un identificativo sottoposto a monitoraggio
CREATE OR REPLACE FUNCTION MonitTempi_IsSospensioneAperta (p_id_monit_tempi_sospeso IN NUMBER) RETURN VARCHAR2 IS
   CURSOR c1 (c_id_monit_tempi_sospeso NUMBER) IS
      SELECT count(*) as v_flag_sospensione_attiva
	    FROM PBANDI_T_MONIT_TEMPI
       WHERE id_monit_tempi_sospeso = c_id_monit_tempi_sospeso
	     AND dt_fine IS NULL;
		 
  v_flag_sospensione_attiva VARCHAR2(10) := 'FALSE';
  v_count  NUMBER;
		 
BEGIN
  OPEN c1 (p_id_monit_tempi_sospeso);
  FETCH c1 INTO v_count;
  CLOSE c1;
  
  IF v_count > 0 THEN
     v_flag_sospensione_attiva := 'TRUE';
  END IF;

RETURN v_flag_sospensione_attiva;
END MonitTempi_IsSospensioneAperta;


----------
-- VISTA
-----------

CREATE OR REPLACE FORCE VIEW PBANDI.PBANDI_V_MONIT_TEMPI
(
   ID_MONIT_TEMPI,
   ID_ENTITA,
   ID_TARGET,
   ID_PROGETTO,
   NOME_BANDO_LINEA,
   DENOMINAZIONE_BENEFICIARIO,
   CODICE_VISUALIZZATO_PROGETTO,
   DESCRIZIONE,
   DATA_DECORRENZA,
   NUM_GIORNI_PREVISTI,
   NUM_GIORNI_TRASCORSI,
   NUM_GIORNI_RESIDUI,
   DATA_SCADENZA,
   STATO
)
AS
   SELECT   mt.ID_MONIT_TEMPI,
            mt.id_entita,
			mt.id_target,
            p.ID_PROGETTO,
            bli.NOME_BANDO_LINEA,
            NVL (eg.denominazione_ente_giuridico,
                 pf.nome || NVL2 (pf.nome, ' ', '') || pf.cognome)
               AS DENOMINAZIONE_BENEFICIARIO,
            p.codice_visualizzato AS CODICE_VISUALIZZATO_PROGETTO,
            mt.descrizione,
            TO_CHAR (mt.dt_decorrenza, 'DD/MM/YYYY') AS DATA_DECORRENZA,
            mt.num_giorni AS NUM_GIORNI_PREVISTI,
            --NUM_GIORNI_TRASCORSI
            -- (MonitTempi_GetDataSospensione) Se non c'è sospensione o le sospensioni sono tutte concluse allora la funzione restituisce la SYSDATE
            -- I giorni relativi alle sospensione concluse sono poi sottratte dal calcolo del numero dei giorni trascorsi
            (MonitTempi_GetDataSospensione (ID_MONIT_TEMPI)
             - TRUNC (mt.dt_decorrenza))
            - MonitTempi_GetNumGGSospesi (ID_MONIT_TEMPI)
               AS NUM_GIORNI_TRASCORSI,
            --NUM_GIORNI_RESIDUI
            -- (MonitTempi_GetDataSospensione) Se non c'è sospensione o le sospensioni sono tutte concluse allora la funzione restituisce la SYSDATE
            -- I giorni relativi alle sospensione concluse sono poi da aggiungere al calcolo del numero dei giorni residui
            GREATEST (
               ( (TRUNC (mt.dt_decorrenza) + mt.num_giorni)
                - MonitTempi_GetDataSospensione (ID_MONIT_TEMPI))
               + MonitTempi_GetNumGGSospesi (ID_MONIT_TEMPI),
               0
            )
               AS NUM_GIORNI_RESIDUI,
            --DATA_SCADENZA
            --(MonitTempi_IsSospensioneAperta) Se c'è una sospensione ancora aperta allora la data di scadenza è da definire
            -- I giorni relativi alle sospensione concluse sono da aggiungere al calcolo della data di scadenza
            CASE
               WHEN MonitTempi_IsSospensioneAperta (ID_MONIT_TEMPI) = 'TRUE'
               THEN
                  'da definire'
               ELSE
                  TO_CHAR (
                     (  TRUNC (mt.dt_decorrenza)
                      + mt.num_giorni
                      + MonitTempi_GetNumGGSospesi (ID_MONIT_TEMPI)),
                     'DD/MM/YYYY'
                  )
            END
               AS DATA_SCADENZA,
            CASE
               WHEN MonitTempi_IsSospensioneAperta (ID_MONIT_TEMPI) = 'TRUE'
               THEN
                  'SOSPESO'
               WHEN TRUNC (SYSDATE) >
                       (  mt.dt_decorrenza
                        + mt.num_giorni
                        + MonitTempi_GetNumGGSospesi (ID_MONIT_TEMPI))
               THEN
                  'SCADUTO'
               ELSE
                  'IN CORSO'
            END
               AS STATO
     FROM                           PBANDI_T_MONIT_TEMPI mt
                                 JOIN
                                    PBANDI_T_PROGETTO p
                                 ON p.id_progetto = mt.id_progetto
                              JOIN
                                 PBANDI_T_DOMANDA d
                              ON d.id_domanda = p.id_domanda
                           JOIN
                              PBANDI_R_BANDO_LINEA_INTERVENT bli
                           ON bli.progr_bando_linea_intervento =
                                 d.progr_bando_linea_intervento
                        JOIN
                           PBANDI_R_PARAM_MONIT_BANDO_LIN pmbl
                        ON pmbl.id_param_monit_bando_linea =
                              mt.id_param_monit_bando_linea
                     JOIN
                        PBANDI_C_PARAMETRI_MONIT pm
                     ON pm.id_parametro_monit = pmbl.id_parametro_monit
                  JOIN
                     PBANDI_R_SOGGETTO_PROGETTO sp
                  ON     sp.id_progetto = mt.id_progetto
                     AND sp.id_tipo_anagrafica = 1
                     AND sp.id_tipo_beneficiario <> 4
               LEFT JOIN
                  pbandi_t_ente_giuridico eg
               ON eg.id_ente_giuridico = sp.id_ente_giuridico
            LEFT JOIN
               pbandi_t_persona_fisica pf
            ON pf.id_persona_fisica = sp.id_persona_fisica
    WHERE   mt.dt_fine IS NULL AND mt.num_giorni IS NOT NULL;


-- Funzione utilizzata da un batch schedulato relativo alla scadenza di un monitoraggio 
-- che aggiorni il record corrispettivo sulla tabella di gestione
CREATE OR REPLACE FUNCTION MonitTempi_BatchAggScadenze  RETURN NUMBER IS
   CURSOR c1  IS 
      SELECT a.id_target as id_gestione_revoca,
	         b.id_tipologia_revoca,
			 b.id_stato_revoca,
			 b.dt_notifica,
			 b.id_attivita_revoca,
			 b.dt_fine_validita,
			 to_date(a.data_scadenza,'DD/MM/YYYY') as dt_scadenza
	    FROM PBANDI_V_MONIT_TEMPI a
		JOIN PBANDI_T_GESTIONE_REVOCA b ON b.id_gestione_revoca = a.id_target
       WHERE id_entita = 516 -- PBANDI_T_GESTIONE_REVOCA
	     AND stato = 'SCADUTO'
		 AND NVL(b.id_attivita_revoca,0) != 11 ; -- Termine scaduto
		 
  v_flag_scadenza BOOLEAN;
		 
BEGIN
--Rif. [A] = PBAN_TRS_STE_V03_MONTEMP001_SpecificheTecnicheMonitoraggioTempi
   FOR r1 IN c1 LOOP
	  -- PROCEDIMENTO DI REVOCA Rif. [A].6.1.5 Controdeduzioni procedimento di revoca (a decorrere dalla data di notifica che comunica l’avvio del procedimento di revoca)
      IF r1.id_tipologia_revoca = 2 
	    AND r1.id_stato_revoca = 6 
		AND r1.dt_notifica IS NOT NULL 
		AND nvl(r1.id_attivita_revoca,0) in (0,9,10) --Proroga accettata(9), proroga rifiutata(10)
		AND r1.dt_fine_validita IS NULL THEN
		   v_flag_scadenza := TRUE;
		
      -- RICHIESTA INTEGRAZIONI Rif. [A].6.1.7 Invio richiesta integrazione alle controdeduzioni al procedimento di revoca
	  ELSIF r1.id_tipologia_revoca = 2 
	    AND r1.id_stato_revoca = 7
		AND r1.dt_notifica IS  NOT NULL 
		AND nvl(r1.id_attivita_revoca,0) in (0,9,10) --Proroga accettata(9), proroga rifiutata(10)
		AND r1.dt_fine_validita IS NULL THEN
		   v_flag_scadenza := TRUE;
		   
	  --PROVVEDIMENTO DI REVOCA Rif. [A].6.1.8 Contestazioni provvedimento di revoca (a decorrere dalla data di notifica che comunica l’emissione del provvedimento di revoca)
	  ELSIF r1.id_tipologia_revoca = 3
	    AND r1.id_stato_revoca = 8  
		AND r1.dt_notifica IS NOT NULL 
		AND r1.id_attivita_revoca is null
		AND r1.dt_fine_validita IS NULL THEN
		   v_flag_scadenza := TRUE;
		   
	  ELSE
		   v_flag_scadenza := FALSE;
	  END IF;
	  
	  IF v_flag_scadenza = TRUE THEN
	  
	  	UPDATE PBANDI_T_GESTIONE_REVOCA
		   SET id_attivita_revoca = 11, --termine scaduto
		       dt_attivita = r1.dt_scadenza,
			   id_utente_agg = -19, -- Batch scadenze
			   dt_aggiornamento = sysdate
		WHERE id_gestione_revoca = r1.id_gestione_revoca;
		
	  END IF;

   END LOOP;

COMMIT;
RETURN 0;
EXCEPTION
   WHEN OTHERS THEN
     ROLLBACK;
     RETURN 1;
   	 DBMS_OUTPUT.PUT_LINE(SQLERRM || ' riga = '|| DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
END MonitTempi_BatchAggScadenze;



/* ---------------------------------------------------------------------- */
/* TRIGGER				                                                  */
/* ---------------------------------------------------------------------- */

CREATE OR REPLACE TRIGGER TG_PBANDI_T_DICHIARAZ_SPESA_AI
   after insert on PBANDI_T_DICHIARAZIONE_SPESA
   referencing old as OLD new as NEW
   for each row
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N')
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;
		  
	CURSOR c3 (c_progr_bando_linea_intervento NUMBER,
	           c_descr_breve_parametro_monit VARCHAR2) is
		   select id_param_monit_bando_linea,
		          num_giorni,
				  c.descr_breve_template_notifica
		     from PBANDI_R_PARAM_MONIT_BANDO_LIN a
			 join PBANDI_C_PARAMETRI_MONIT b ON b.id_parametro_monit = a.id_parametro_monit
			 join PBANDI_D_TEMPLATE_NOTIFICA c ON c.id_template_notifica = b.id_template_notifica
			where a.progr_bando_linea_intervento = c_progr_bando_linea_intervento
			  and b.desc_breve_parametro_monit = c_descr_breve_parametro_monit;

	   
   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_param_monit_bando_linea PBANDI_R_PARAM_MONIT_BANDO_LIN.id_param_monit_bando_linea%TYPE;
   v_num_giorni PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE;
   v_subject_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_message_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_descr_breve_template_notific  PBANDI_D_TEMPLATE_NOTIFICA.descr_breve_template_notifica%TYPE;
	  
BEGIN

   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;
   
   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (:NEW.ID_PROGETTO);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
      -- Inserimento della dichiarazione di spesa
      OPEN c3(v_progr_bando_linea_intervento,'MOT01');
	  FETCH c3 INTO v_id_param_monit_bando_linea,
	                v_num_giorni,
					v_descr_breve_template_notific;
	  
	  IF c3%FOUND THEN
	     -- Valorizzazione metadati per composizione notifica in modo dinamico tramite template
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('NUM_DICHIARAZIONE_DI_SPESA', to_char(:NEW.ID_DICHIARAZIONE_SPESA));
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('DATA_DICHIARAZIONE_DI_SPESA', to_char(:NEW.DT_DICHIARAZIONE,'dd/mm/yyyy'));
		 
		 GetTemplateMessage(v_descr_breve_template_notific,v_subject_notifica,v_message_notifica);
	  
		  INSERT INTO PBANDI_T_MONIT_TEMPI
			( ID_MONIT_TEMPI,
			  ID_PROGETTO,
			  DT_DECORRENZA,
			  DT_FINE,
			  ID_ENTITA,
			  ID_TARGET,
			  DESCRIZIONE,
			  ID_PARAM_MONIT_BANDO_LINEA,
			  NUM_GIORNI,
			  ID_MONIT_TEMPI_SOSPESO)
			VALUES
			 (SEQ_PBANDI_T_MONIT_TEMPI.NEXTVAL,
			  :NEW.ID_PROGETTO,
			  :NEW.DT_DICHIARAZIONE,
			  NULL,
			  (SELECT ID_ENTITA FROM PBANDI_C_ENTITA WHERE NOME_ENTITA = 'PBANDI_T_DICHIARAZIONE_SPESA'),
			  :NEW.ID_DICHIARAZIONE_SPESA,
			  v_message_notifica,
			  v_id_param_monit_bando_linea,
			  v_num_giorni,
			  NULL);

		  END IF;
	  CLOSE c3;
	          

   
   END IF;

END;
/

CREATE OR REPLACE TRIGGER TG_PBANDI_T_DICHIARAZ_SPESA_AU
   after update of DT_CHIUSURA_VALIDAZIONE on PBANDI_T_DICHIARAZIONE_SPESA
   referencing old as OLD new as NEW
   for each row
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N')
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;

   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   
BEGIN
   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;
   
   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (:NEW.ID_PROGETTO);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
      -- Aggiornamento della data di chiusura della dichiarazione di spesa
	  UPDATE PBANDI_T_MONIT_TEMPI
	     SET DT_FINE = :NEW.DT_CHIUSURA_VALIDAZIONE
		WHERE ID_ENTITA = (SELECT ID_ENTITA FROM PBANDI_C_ENTITA WHERE NOME_ENTITA = 'PBANDI_T_DICHIARAZIONE_SPESA')
		  AND ID_TARGET = :NEW.ID_DICHIARAZIONE_SPESA;
   END IF;

END;
/

-- Richiesta di integrazione alla rendicontazione (dichiarazione di spesa)
-- INSRIMENTO

CREATE OR REPLACE TRIGGER TG_PBANDI_T_INTEGRAZ_SPESA_AI
   after insert on PBANDI_T_INTEGRAZIONE_SPESA
   referencing old as OLD new as NEW
   for each row
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N')
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;
		  
	CURSOR c3 (c_progr_bando_linea_intervento NUMBER,
	           c_descr_breve_parametro_monit VARCHAR2) is
		   select id_param_monit_bando_linea,
		          num_giorni,
				  c.descr_breve_template_notifica
		     from PBANDI_R_PARAM_MONIT_BANDO_LIN a
			 join PBANDI_C_PARAMETRI_MONIT b ON b.id_parametro_monit = a.id_parametro_monit
			 join PBANDI_D_TEMPLATE_NOTIFICA c ON c.id_template_notifica = b.id_template_notifica
			where a.progr_bando_linea_intervento = c_progr_bando_linea_intervento
			  and b.desc_breve_parametro_monit = c_descr_breve_parametro_monit;
			  
	CURSOR c_dich (c_id_dichiarazione_spesa NUMBER) is
	       select id_progetto
		     from PBANDI_T_DICHIARAZIONE_SPESA
			where id_dichiarazione_spesa = c_id_dichiarazione_spesa;
			
	CURSOR c_monit_dich (c_id_entita NUMBER, c_id_target NUMBER) is
	       select id_monit_tempi
		     from PBANDI_T_MONIT_TEMPI
			where id_entita = c_id_entita
			  and id_target = c_id_target;

	   
   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_param_monit_bando_linea PBANDI_R_PARAM_MONIT_BANDO_LIN.id_param_monit_bando_linea%TYPE;
   v_num_giorni PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE;
   v_id_progetto PBANDI_T_DICHIARAZIONE_SPESA.id_progetto%TYPE;
   v_id_entita_dich   PBANDI_C_ENTITA.id_entita%TYPE;
   v_id_monit_tempi_sospeso PBANDI_T_MONIT_TEMPI.id_monit_tempi%TYPE;
   
   v_subject_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_message_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_descr_breve_template_notific  PBANDI_D_TEMPLATE_NOTIFICA.descr_breve_template_notifica%TYPE;
   
BEGIN

   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;
   
   -- Recupero il progetto accedendo alla dichiarazione di spesa
   OPEN c_dich (:NEW.ID_DICHIARAZIONE_SPESA);
   FETCH c_dich INTO v_id_progetto;
   IF c_dich%NOTFOUND THEN
     RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_T_DICHIARAZIONE_SPESA - ID_DICHIARAZIONE_SPESA='||:NEW.ID_DICHIARAZIONE_SPESA);
   END IF;
   CLOSE c_dich;
   
   
   
   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (v_id_progetto);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
      -- Inserimento della integrazione della dichiarazione di spesa
      OPEN c3(v_progr_bando_linea_intervento,'MOT02');
	  FETCH c3 INTO v_id_param_monit_bando_linea,
	                v_num_giorni,
					v_descr_breve_template_notific;
	  
	  IF c3%FOUND THEN
	       -- Recupero ID_ENTITA dell'evento che viene sospeso
		   BEGIN
			   SELECT ID_ENTITA 
				 INTO v_id_entita_dich
				 FROM PBANDI_C_ENTITA 
				 WHERE NOME_ENTITA = 'PBANDI_T_DICHIARAZIONE_SPESA';
		   END;
		   
	   -- Recupero l'identificativo di monitoraggio per la dichiarazione di spesa che viene sospesa
	   OPEN c_monit_dich (v_id_entita_dich,:NEW.ID_DICHIARAZIONE_SPESA);
	   FETCH c_monit_dich INTO v_id_monit_tempi_sospeso;
	   IF c_monit_dich%FOUND THEN
		   
	     -- Valorizzazione metadati per composizione notifica in modo dinamico tramite template
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('NUM_DICHIARAZIONE_DI_SPESA', to_char(:NEW.ID_DICHIARAZIONE_SPESA));
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('DATA_RICHIESTA_INTEGRAZ_DIC', to_char(:NEW.DATA_RICHIESTA,'dd/mm/yyyy'));
		 
		 GetTemplateMessage(v_descr_breve_template_notific,v_subject_notifica,v_message_notifica);
	  
	  INSERT INTO PBANDI_T_MONIT_TEMPI
		( ID_MONIT_TEMPI,
		  ID_PROGETTO,
		  DT_DECORRENZA,
		  DT_FINE,
		  ID_ENTITA,
		  ID_TARGET,
		  DESCRIZIONE,
		  ID_PARAM_MONIT_BANDO_LINEA,
		  NUM_GIORNI,
		  ID_MONIT_TEMPI_SOSPESO)
		VALUES
		 (SEQ_PBANDI_T_MONIT_TEMPI.NEXTVAL,
		  v_id_progetto,
		  :NEW.DATA_RICHIESTA,
		  NULL,
		  (SELECT ID_ENTITA FROM PBANDI_C_ENTITA WHERE NOME_ENTITA = 'PBANDI_T_INTEGRAZIONE_SPESA'),
		  :NEW.ID_INTEGRAZIONE_SPESA,
		  v_message_notifica,
		  v_id_param_monit_bando_linea,
		  null,
		  v_id_monit_tempi_sospeso);
		  
	   END IF;
	   CLOSE c_monit_dich;


	  END IF;
	  CLOSE c3;
	          

   
   END IF;

END;
/

CREATE OR REPLACE TRIGGER TG_PBANDI_T_INTEGR_SPESA_AU_01
   after update of DT_NOTIFICA on PBANDI_T_INTEGRAZIONE_SPESA
   referencing old as OLD new as NEW
   for each row
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N')
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;

	CURSOR c3 (c_id_param_monit_bando_linea NUMBER) is
		   select num_giorni
		     from PBANDI_R_PARAM_MONIT_BANDO_LIN a
			where a.id_param_monit_bando_linea = c_id_param_monit_bando_linea;

	CURSOR c_monit_integr (c_id_entita NUMBER, c_id_target NUMBER) is
	       select id_param_monit_bando_linea
		     from PBANDI_T_MONIT_TEMPI
			where id_entita = c_id_entita
			  and id_target = c_id_target;

	CURSOR c_dich (c_id_dichiarazione_spesa NUMBER) is
	       select id_progetto
		     from PBANDI_T_DICHIARAZIONE_SPESA
			where id_dichiarazione_spesa = c_id_dichiarazione_spesa;

   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_entita_integr   PBANDI_C_ENTITA.id_entita%TYPE;
   v_dummy VARCHAR2(1);
   v_num_giorni PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE;
   v_id_progetto PBANDI_T_DICHIARAZIONE_SPESA.id_progetto%TYPE;
   v_id_param_monit_bando_linea PBANDI_R_PARAM_MONIT_BANDO_LIN.id_param_monit_bando_linea%TYPE;
   
BEGIN
   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;

   -- Recupero il progetto accedendo alla dichiarazione di spesa
   OPEN c_dich (:NEW.ID_DICHIARAZIONE_SPESA);
   FETCH c_dich INTO v_id_progetto;
   IF c_dich%NOTFOUND THEN
     RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_T_DICHIARAZIONE_SPESA - ID_DICHIARAZIONE_SPESA='||:NEW.ID_DICHIARAZIONE_SPESA);
   END IF;
   CLOSE c_dich;
   
   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (v_id_progetto);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
   
	   -- Recupero ID_ENTITA dell'evento che viene sospeso
	   BEGIN
		   SELECT ID_ENTITA 
			 INTO v_id_entita_integr
			 FROM PBANDI_C_ENTITA 
			 WHERE NOME_ENTITA = 'PBANDI_T_INTEGRAZIONE_SPESA';
	   END;
	   
	   OPEN c_monit_integr (v_id_entita_integr,:NEW.ID_INTEGRAZIONE_SPESA);
	   FETCH c_monit_integr into v_id_param_monit_bando_linea;
	   IF c_monit_integr%FOUND THEN
	      OPEN c3(v_id_param_monit_bando_linea);
		  FETCH c3 INTO v_num_giorni;
		  IF c3%NOTFOUND THEN
		    RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_R_PARAM_MONIT_BANDO_LIN - ID_PARAM_MONIT_BANDO_LINEA='||v_id_param_monit_bando_linea);
          END IF;
		  CLOSE c3;
	   
		  -- Aggiornamento della data decorrenza e num giorni scadenza della integrazione di spesa
		  UPDATE PBANDI_T_MONIT_TEMPI
			 SET DT_DECORRENZA = :NEW.DT_NOTIFICA,
			     NUM_GIORNI = nvl(:NEW.NUM_GIORNI_SCADENZA,v_num_giorni)
			WHERE ID_ENTITA = v_id_entita_integr
			  AND ID_TARGET = :NEW.ID_INTEGRAZIONE_SPESA;
	   END IF;
	   CLOSE c_monit_integr;
   
   END IF;

END;
/


CREATE OR REPLACE TRIGGER TG_PBANDI_T_INTEGR_SPESA_AU_02
   after update of ID_STATO_RICHIESTA,DATA_INVIO on PBANDI_T_INTEGRAZIONE_SPESA
   referencing old as OLD new as NEW
   for each row
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N')
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;

	CURSOR c3 (c_id_stato_richiesta NUMBER) is
		   select desc_breve_stato_richiesta
		     from PBANDI_D_STATO_RICH_INTEGRAZ a
			where a.id_stato_richiesta = c_id_stato_richiesta;

	CURSOR c_monit_integr (c_id_entita NUMBER, c_id_target NUMBER) is
	       select id_param_monit_bando_linea
		     from PBANDI_T_MONIT_TEMPI
			where id_entita = c_id_entita
			  and id_target = c_id_target;

	CURSOR c_dich (c_id_dichiarazione_spesa NUMBER) is
	       select id_progetto
		     from PBANDI_T_DICHIARAZIONE_SPESA
			where id_dichiarazione_spesa = c_id_dichiarazione_spesa;

   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_entita_integr   PBANDI_C_ENTITA.id_entita%TYPE;
   v_dummy VARCHAR2(1);
   v_num_giorni PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE;
   v_id_progetto PBANDI_T_DICHIARAZIONE_SPESA.id_progetto%TYPE;
   v_desc_breve_stato_richiesta PBANDI_D_STATO_RICH_INTEGRAZ.desc_breve_stato_richiesta%TYPE;
   v_id_param_monit_bando_linea PBANDI_R_PARAM_MONIT_BANDO_LIN.id_param_monit_bando_linea%TYPE;
   
BEGIN
   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;

   -- Recupero il progetto accedendo alla dichiarazione di spesa
   OPEN c_dich (:NEW.ID_DICHIARAZIONE_SPESA);
   FETCH c_dich INTO v_id_progetto;
   IF c_dich%NOTFOUND THEN
     RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_T_DICHIARAZIONE_SPESA - ID_DICHIARAZIONE_SPESA='||:NEW.ID_DICHIARAZIONE_SPESA);
   END IF;
   CLOSE c_dich;
   
   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (v_id_progetto);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
   
	   -- Recupero ID_ENTITA dell'evento che viene sospeso
	   BEGIN
		   SELECT ID_ENTITA 
			 INTO v_id_entita_integr
			 FROM PBANDI_C_ENTITA 
			 WHERE NOME_ENTITA = 'PBANDI_T_INTEGRAZIONE_SPESA';
	   END;
	   
	   OPEN c_monit_integr (v_id_entita_integr,:NEW.ID_INTEGRAZIONE_SPESA);
	   FETCH c_monit_integr into v_id_param_monit_bando_linea;
	   IF c_monit_integr%FOUND THEN
	      IF :NEW.ID_STATO_RICHIESTA IS NOT NULL THEN
			  OPEN c3(:NEW.ID_STATO_RICHIESTA);
			  FETCH c3 INTO v_desc_breve_stato_richiesta;
			  IF c3%NOTFOUND THEN
				RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_D_STATO_RICH_INTEGRAZ - ID_STATO_RICHIESTA='||:NEW.ID_STATO_RICHIESTA);
			  END IF;
			  CLOSE c3;
		  END IF;
	   
		  -- Aggiornamento della data fine se lo stato della richiesta è CHIUSA D'UFFICIO o è valorizzata la data invio
		  IF v_desc_breve_stato_richiesta = 'CHIUSA_UFFICIO' OR :NEW.DATA_INVIO IS NOT NULL THEN
			  UPDATE PBANDI_T_MONIT_TEMPI
				 SET DT_FINE = NVL(:NEW.DATA_INVIO,SYSDATE)
				WHERE ID_ENTITA = v_id_entita_integr
				  AND ID_TARGET = :NEW.ID_INTEGRAZIONE_SPESA;
		  END IF;
	   END IF;
	   CLOSE c_monit_integr;
   
   END IF;

END;
/


-- Proposta di erogazione
-- Erogazione dell’agevolazione (a decorrere dalla data di chiusura della validazione della DS con esito “erogazione”)
-- INSRIMENTO

CREATE OR REPLACE TRIGGER TG_PBANDI_T_PROPOSTA_EROG_AI
   after insert on PBANDI_T_PROPOSTA_EROGAZIONE
   referencing old as OLD new as NEW
   for each row
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N'),
				 a.codice_visualizzato
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;
		  
	CURSOR c3 (c_progr_bando_linea_intervento NUMBER,
	           c_descr_breve_parametro_monit VARCHAR2) is
		   select id_param_monit_bando_linea,
		          num_giorni,
				  'NotificaTempiErogazione' as descr_breve_template_notifica -- Viene forzato NotificaTempiErogazione (Notifica per numero di giorni entro cui autorizzare l’erogazione dell’agevolazione a decorrere dalla data di chiusura della validazione della rendicontazione con esito Erogazione)
		     from PBANDI_R_PARAM_MONIT_BANDO_LIN a
			 join PBANDI_C_PARAMETRI_MONIT b ON b.id_parametro_monit = a.id_parametro_monit
			 join PBANDI_D_TEMPLATE_NOTIFICA c ON c.id_template_notifica = b.id_template_notifica
			where a.progr_bando_linea_intervento = c_progr_bando_linea_intervento
			  and b.desc_breve_parametro_monit = c_descr_breve_parametro_monit
			  and a.dt_fine_validita IS NULL;
			  
	CURSOR c4 (c_id_progetto NUMBER,
               c_dt_validazione_spesa DATE) is
           select trunc(c_dt_validazione_spesa) - trunc(dt_dichiarazione)  as num_giorni_effet
             from PBANDI_T_DICHIARAZIONE_SPESA
            where id_progetto = c_id_progetto
              and dt_chiusura_validazione = c_dt_validazione_spesa;			
	   
   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_param_monit_bando_linea PBANDI_R_PARAM_MONIT_BANDO_LIN.id_param_monit_bando_linea%TYPE;
   v_num_giorni PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE;
   v_num_giorni_residuo PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE; --Giorni residuo per controlli pre-erogazione
   v_num_giorni_effet PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE; --Giorni effettivi per la validazione della dichiarazione di spesa
   v_id_entita_pe   PBANDI_C_ENTITA.id_entita%TYPE;
   v_id_monit_tempi_sospeso PBANDI_T_MONIT_TEMPI.id_monit_tempi%TYPE;
   
   v_subject_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_message_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_descr_breve_template_notific  PBANDI_D_TEMPLATE_NOTIFICA.descr_breve_template_notifica%TYPE;
   v_codice_visualizzato  PBANDI_T_PROGETTO.codice_visualizzato%TYPE;
   
BEGIN

   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;
   

   
   
   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (:NEW.ID_PROGETTO);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi,
					v_codice_visualizzato;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
      -- Inserimento della proposta di erogazione
      OPEN c3(v_progr_bando_linea_intervento,'MOT01');
	  FETCH c3 INTO v_id_param_monit_bando_linea,
	                v_num_giorni,
					v_descr_breve_template_notific;
	  
	  IF c3%FOUND THEN
	       -- Recupero ID_ENTITA dell'evento 
		   BEGIN
			   SELECT ID_ENTITA 
				 INTO v_id_entita_pe
				 FROM PBANDI_C_ENTITA 
				 WHERE NOME_ENTITA = 'PBANDI_T_PROPOSTA_EROGAZIONE';
		   END;
		   
		 -- Recupero Giorni residuo per controlli pre-erogazione su  dichiarazione di spesa corrente
		 open c4 (:NEW.ID_PROGETTO,:NEW.DT_VALIDAZIONE_SPESA);
         fetch c4 into 	v_num_giorni_effet;
		  IF c4%NOTFOUND THEN
			RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_T_DICHIARAZIONE_SPESA - ID_PROGETTO='||:NEW.ID_PROGETTO ||' DT_VALIDAZIONE_SPESA '||to_char(:NEW.DT_VALIDAZIONE_SPESA,'dd/mm/yyyy') );
          END IF;
         close c4;		 
		 v_num_giorni_residuo := v_num_giorni - v_num_giorni_effet;
		   
	   
	     -- Valorizzazione metadati per composizione notifica in modo dinamico tramite template
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('CODICE_VISUALIZZATO', v_codice_visualizzato);
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('ID_PROGETTO', to_char(:NEW.ID_PROGETTO));
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('DATA_CHIUSURA_VALIDAZIONE', to_char(:NEW.DT_VALIDAZIONE_SPESA,'dd/mm/yyyy'));
		 
		 GetTemplateMessage(v_descr_breve_template_notific,v_subject_notifica,v_message_notifica);
	  
	  INSERT INTO PBANDI_T_MONIT_TEMPI
		( ID_MONIT_TEMPI,
		  ID_PROGETTO,
		  DT_DECORRENZA,
		  DT_FINE,
		  ID_ENTITA,
		  ID_TARGET,
		  DESCRIZIONE,
		  ID_PARAM_MONIT_BANDO_LINEA,
		  NUM_GIORNI,
		  ID_MONIT_TEMPI_SOSPESO)
		VALUES
		 (SEQ_PBANDI_T_MONIT_TEMPI.NEXTVAL,
		  :NEW.ID_PROGETTO,
		  :NEW.DT_VALIDAZIONE_SPESA,
		  NULL,
		  (SELECT ID_ENTITA FROM PBANDI_C_ENTITA WHERE NOME_ENTITA = 'PBANDI_T_PROPOSTA_EROGAZIONE'),
		  :NEW.ID_PROPOSTA,
		  v_message_notifica,
		  v_id_param_monit_bando_linea,
		  v_num_giorni_residuo,
		  null);

	  END IF;
	  CLOSE c3;
	          

   
   END IF;

END;
/

CREATE OR REPLACE TRIGGER TG_PBANDI_T_PROPOSTA_EROG_AU_1
   after update of DT_FINE_VALIDITA on PBANDI_T_PROPOSTA_EROGAZIONE
   referencing old as OLD new as NEW
   for each row
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N')
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;


	CURSOR c_monit_pe (c_id_entita NUMBER, c_id_target NUMBER) is
	       select id_param_monit_bando_linea
		     from PBANDI_T_MONIT_TEMPI
			where id_entita = c_id_entita
			  and id_target = c_id_target;

	CURSOR c_dich (c_id_dichiarazione_spesa NUMBER) is
	       select id_progetto
		     from PBANDI_T_DICHIARAZIONE_SPESA
			where id_dichiarazione_spesa = c_id_dichiarazione_spesa;

   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_entita_pe   PBANDI_C_ENTITA.id_entita%TYPE;
   v_dummy VARCHAR2(1);
   v_num_giorni PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE;
   v_id_param_monit_bando_linea PBANDI_R_PARAM_MONIT_BANDO_LIN.id_param_monit_bando_linea%TYPE;
   
BEGIN
   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;

  
   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (:NEW.ID_PROGETTO);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
   
	   -- Recupero ID_ENTITA dell'evento
	   BEGIN
		   SELECT ID_ENTITA 
			 INTO v_id_entita_pe
			 FROM PBANDI_C_ENTITA 
			 WHERE NOME_ENTITA = 'PBANDI_T_PROPOSTA_EROGAZIONE';
	   END;
	   
	   OPEN c_monit_pe (v_id_entita_pe,:NEW.ID_PROPOSTA);
	   FETCH c_monit_pe into v_id_param_monit_bando_linea;
	   IF c_monit_pe%FOUND THEN
	   
		  -- Aggiornamento della data fine
		  UPDATE PBANDI_T_MONIT_TEMPI
			 SET DT_FINE = :NEW.DT_FINE_VALIDITA
			WHERE ID_ENTITA = v_id_entita_pe
			  AND ID_TARGET = :NEW.ID_PROPOSTA;
	   END IF;
	   CLOSE c_monit_pe;
   
   END IF;

END;
/

--Procedimento di revoca (a decorrere dalla data di notifica che comunica l’avvio del procedimento di” revoca”)
CREATE OR REPLACE TRIGGER TG_PBANDI_T_GEST_REV_PROC_AU_1
   after update of DT_NOTIFICA on PBANDI_T_GESTIONE_REVOCA
   referencing old as OLD new as NEW
   for each row
   WHEN (NEW.ID_TIPOLOGIA_REVOCA = 2) -- Procedimento
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N'),
				 a.codice_visualizzato
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;
		  
	CURSOR c3 (c_progr_bando_linea_intervento NUMBER,
	           c_descr_breve_parametro_monit VARCHAR2) is
		   select id_param_monit_bando_linea,
		          num_giorni,
				  descr_breve_template_notifica
		     from PBANDI_R_PARAM_MONIT_BANDO_LIN a
			 join PBANDI_C_PARAMETRI_MONIT b ON b.id_parametro_monit = a.id_parametro_monit
			 join PBANDI_D_TEMPLATE_NOTIFICA c ON c.id_template_notifica = b.id_template_notifica
			where a.progr_bando_linea_intervento = c_progr_bando_linea_intervento
			  and b.desc_breve_parametro_monit = c_descr_breve_parametro_monit
			  and a.dt_fine_validita IS NULL;

			  
	   
   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_param_monit_bando_linea PBANDI_R_PARAM_MONIT_BANDO_LIN.id_param_monit_bando_linea%TYPE;
   v_num_giorni PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE;
   v_id_entita_gr   PBANDI_C_ENTITA.id_entita%TYPE;
   v_id_monit_tempi_sospeso PBANDI_T_MONIT_TEMPI.id_monit_tempi%TYPE;
   
   v_subject_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_message_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_descr_breve_template_notific  PBANDI_D_TEMPLATE_NOTIFICA.descr_breve_template_notifica%TYPE;
   v_codice_visualizzato  PBANDI_T_PROGETTO.codice_visualizzato%TYPE;
   
BEGIN

   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;
   

   
   -- Controllo lo stato revoca (in attesa di controdeduzione)e la data notifica valorizzata
   -- In caso negativo non attivo il monitoraggio
   -- Lo stato revoca = 6 è solo relativo al procedimento
   IF  NOT(:NEW.ID_STATO_REVOCA  = 6 
         AND :NEW.DT_NOTIFICA IS NOT NULL
		 AND :NEW.ID_ATTIVITA_REVOCA IS NULL) THEN
	   v_monit_tempi := 'N';
   END IF;
	 
   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (:NEW.ID_PROGETTO);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi,
					v_codice_visualizzato;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
      -- Inserimento della gestione revoca
      OPEN c3(v_progr_bando_linea_intervento,'MOT03');
	  FETCH c3 INTO v_id_param_monit_bando_linea,
	                v_num_giorni,
					v_descr_breve_template_notific;
	  
	  IF c3%FOUND THEN
	       -- Recupero ID_ENTITA dell'evento 
		   BEGIN
			   SELECT ID_ENTITA 
				 INTO v_id_entita_gr
				 FROM PBANDI_C_ENTITA 
				 WHERE NOME_ENTITA = 'PBANDI_T_GESTIONE_REVOCA';
		   END;
		   
	   
	   
	     -- Valorizzazione metadati per composizione notifica in modo dinamico tramite template
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('NUM_REVOCA', to_char(:NEW.NUMERO_REVOCA));
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('CODICE_VISUALIZZATO', v_codice_visualizzato);
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('ID_PROGETTO', to_char(:NEW.ID_PROGETTO));
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('DATA_NOTIFICA', to_char(:NEW.DT_NOTIFICA,'dd/mm/yyyy'));
		 
		 GetTemplateMessage(v_descr_breve_template_notific,v_subject_notifica,v_message_notifica);
	  
	  INSERT INTO PBANDI_T_MONIT_TEMPI
		( ID_MONIT_TEMPI,
		  ID_PROGETTO,
		  DT_DECORRENZA,
		  DT_FINE,
		  ID_ENTITA,
		  ID_TARGET,
		  DESCRIZIONE,
		  ID_PARAM_MONIT_BANDO_LINEA,
		  NUM_GIORNI,
		  ID_MONIT_TEMPI_SOSPESO)
		VALUES
		 (SEQ_PBANDI_T_MONIT_TEMPI.NEXTVAL,
		  :NEW.ID_PROGETTO,
		  :NEW.DT_NOTIFICA,
		  NULL,
		  (SELECT ID_ENTITA FROM PBANDI_C_ENTITA WHERE NOME_ENTITA = 'PBANDI_T_GESTIONE_REVOCA'),
		  :NEW.ID_GESTIONE_REVOCA,
		  v_message_notifica,
		  v_id_param_monit_bando_linea,
		  :NEW.GG_RISPOSTA,
		  NULL);

	  END IF;
	  CLOSE c3;
	          

   
   END IF;

END;
/

--Aggiornamento su PBANDI_T_GESTIONE_REVOCA - Invio controdeduzioni al procedimento di revoca
CREATE OR REPLACE TRIGGER TG_PBANDI_T_GEST_REVOCA_AU_2
   after update of ID_TIPOLOGIA_REVOCA,ID_STATO_REVOCA,DT_NOTIFICA,ID_ATTIVITA_REVOCA,DT_ATTIVITA  on PBANDI_T_GESTIONE_REVOCA
   referencing old as OLD new as NEW
   for each row
   WHEN (NEW.ID_TIPOLOGIA_REVOCA = 2) -- Procedimento
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N'),
				 a.codice_visualizzato
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;

	CURSOR c3 (c_progr_bando_linea_intervento NUMBER,
	           c_descr_breve_parametro_monit VARCHAR2) is
		   select id_param_monit_bando_linea,
		          num_giorni,
				  descr_breve_template_notifica
		     from PBANDI_R_PARAM_MONIT_BANDO_LIN a
			 join PBANDI_C_PARAMETRI_MONIT b ON b.id_parametro_monit = a.id_parametro_monit
			 join PBANDI_D_TEMPLATE_NOTIFICA c ON c.id_template_notifica = b.id_template_notifica
			where a.progr_bando_linea_intervento = c_progr_bando_linea_intervento
			  and b.desc_breve_parametro_monit = c_descr_breve_parametro_monit
			  and a.dt_fine_validita IS NULL;


	CURSOR c_monit_gr (c_id_entita NUMBER, c_id_target NUMBER) is
	       select id_monit_tempi
		     from PBANDI_T_MONIT_TEMPI
			where id_entita = c_id_entita
			  and id_target = c_id_target;


   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_entita_gr   PBANDI_C_ENTITA.id_entita%TYPE;
   v_dummy VARCHAR2(1);
   v_num_giorni PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE;
   v_id_monit_tempi PBANDI_T_MONIT_TEMPI.id_monit_tempi%TYPE;
   v_id_monit_tempi_sospeso PBANDI_T_MONIT_TEMPI.id_monit_tempi%TYPE;
   v_id_param_monit_bando_linea PBANDI_R_PARAM_MONIT_BANDO_LIN.id_param_monit_bando_linea%TYPE;
   v_descr_breve_template_notific  PBANDI_D_TEMPLATE_NOTIFICA.descr_breve_template_notifica%TYPE;
   v_codice_visualizzato  PBANDI_T_PROGETTO.codice_visualizzato%TYPE;
   v_subject_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_message_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   
   v_num_gg_esame_controd_non_ric   NUMBER;
   
BEGIN
   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;

   -- Controllo lo stato revoca (in attesa di controdeduzione)e la data notifica valorizzata
   -- In caso negativo non attivo il monitoraggio
   -- Lo stato revoca = 6 è solo relativo al procedimento
   IF  NOT(:NEW.ID_STATO_REVOCA  = 6 
         AND :NEW.DT_NOTIFICA IS NOT NULL
		 AND :NEW.ID_ATTIVITA_REVOCA = 6 -- Controdeduzione ricevuta
		 AND :NEW.DT_ATTIVITA IS NOT NULL) THEN
	   v_monit_tempi := 'N';
   END IF;
  
   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (:NEW.ID_PROGETTO);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi,
					v_codice_visualizzato;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
   
      OPEN c3(v_progr_bando_linea_intervento,'MOT04');
	  FETCH c3 INTO v_id_param_monit_bando_linea,
	                v_num_giorni,
					v_descr_breve_template_notific;
   
	  IF c3%FOUND THEN
	   -- Recupero ID_ENTITA dell'evento
	   BEGIN
		   SELECT ID_ENTITA 
			 INTO v_id_entita_gr
			 FROM PBANDI_C_ENTITA 
			 WHERE NOME_ENTITA = 'PBANDI_T_GESTIONE_REVOCA';
	   END;
	   
	   -- Recupero l'identificativo di monitoraggio per la gestione revoca che viene sospesa
	   OPEN c_monit_gr (v_id_entita_gr,:NEW.ID_GESTIONE_REVOCA);
	   FETCH c_monit_gr INTO v_id_monit_tempi_sospeso;
	   -- Solo se trovo l'occorrenza inserisco il monitoraggio
	   IF c_monit_gr%FOUND THEN
	   
	   
	     -- Valorizzazione metadati per composizione notifica in modo dinamico tramite template
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('NUM_REVOCA', to_char(:NEW.NUMERO_REVOCA));
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('CODICE_VISUALIZZATO', v_codice_visualizzato);
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('ID_PROGETTO', to_char(:NEW.ID_PROGETTO));
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('DATA_ATTIVITA', to_char(:NEW.DT_ATTIVITA,'dd/mm/yyyy'));
		 
		 GetTemplateMessage(v_descr_breve_template_notific,v_subject_notifica,v_message_notifica);
	  
	  INSERT INTO PBANDI_T_MONIT_TEMPI
		( ID_MONIT_TEMPI,
		  ID_PROGETTO,
		  DT_DECORRENZA,
		  DT_FINE,
		  ID_ENTITA,
		  ID_TARGET,
		  DESCRIZIONE,
		  ID_PARAM_MONIT_BANDO_LINEA,
		  NUM_GIORNI,
		  ID_MONIT_TEMPI_SOSPESO)
		VALUES
		 (SEQ_PBANDI_T_MONIT_TEMPI.NEXTVAL,
		  :NEW.ID_PROGETTO,
		  :NEW.DT_NOTIFICA,
		  NULL,
		  (SELECT ID_ENTITA FROM PBANDI_C_ENTITA WHERE NOME_ENTITA = 'PBANDI_T_GESTIONE_REVOCA'),
		  :NEW.ID_GESTIONE_REVOCA,
		  v_message_notifica,
		  v_id_param_monit_bando_linea,
		  v_num_giorni,
		  v_id_monit_tempi_sospeso);
		  
	   END IF;
	   CLOSE c_monit_gr;
		  
	  END IF;
	  CLOSE c3;
   
   END IF;

END;
/

--Aggiornamento su PBANDI_T_GESTIONE_REVOCA - Invio richiesta integrazione alle controdeduzioni al procedimento di revoca
CREATE OR REPLACE TRIGGER TG_PBANDI_T_GEST_REVOCA_AU_3
   after update of ID_TIPOLOGIA_REVOCA,ID_STATO_REVOCA,DT_NOTIFICA on PBANDI_T_GESTIONE_REVOCA
   referencing old as OLD new as NEW
   for each row
   WHEN (NEW.ID_TIPOLOGIA_REVOCA = 2) -- Procedimento
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N')
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;

	CURSOR c3 (c_progr_bando_linea_intervento NUMBER,
	           c_descr_breve_parametro_monit VARCHAR2) is
		   select id_param_monit_bando_linea,
		          num_giorni,
				  descr_breve_template_notifica
		     from PBANDI_R_PARAM_MONIT_BANDO_LIN a
			 join PBANDI_C_PARAMETRI_MONIT b ON b.id_parametro_monit = a.id_parametro_monit
			 join PBANDI_D_TEMPLATE_NOTIFICA c ON c.id_template_notifica = b.id_template_notifica
			where a.progr_bando_linea_intervento = c_progr_bando_linea_intervento
			  and b.desc_breve_parametro_monit = c_descr_breve_parametro_monit
			  and a.dt_fine_validita IS NULL;


	CURSOR c_monit_gr (c_id_entita NUMBER, c_id_target NUMBER) is
	       select id_monit_tempi
		     from PBANDI_T_MONIT_TEMPI
			where id_entita = c_id_entita
			  and id_target = c_id_target;


   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_entita_gr   PBANDI_C_ENTITA.id_entita%TYPE;
   v_dummy VARCHAR2(1);
   v_num_giorni PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE;
   v_id_monit_tempi PBANDI_T_MONIT_TEMPI.id_monit_tempi%TYPE;
   v_id_monit_tempi_sospeso PBANDI_T_MONIT_TEMPI.id_monit_tempi%TYPE;
   v_id_param_monit_bando_linea PBANDI_R_PARAM_MONIT_BANDO_LIN.id_param_monit_bando_linea%TYPE;
   v_descr_breve_template_notific  PBANDI_D_TEMPLATE_NOTIFICA.descr_breve_template_notifica%TYPE;
   v_codice_visualizzato  PBANDI_T_PROGETTO.codice_visualizzato%TYPE;
   v_subject_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_message_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   
   v_num_gg_esame_controd_non_ric   NUMBER;
   
BEGIN
   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;

   -- Controllo lo stato revoca (in attesa di controdeduzione)e la data notifica valorizzata
   -- In caso negativo non attivo il monitoraggio
   -- Lo stato revoca = 6 è solo relativo al procedimento
   IF  NOT(:NEW.ID_STATO_REVOCA  = 7  -- sospeso
         AND :NEW.DT_NOTIFICA IS NOT NULL) THEN
	   v_monit_tempi := 'N';
   END IF;
  
   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (:NEW.ID_PROGETTO);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
   
      OPEN c3(v_progr_bando_linea_intervento,'MOT05');
	  FETCH c3 INTO v_id_param_monit_bando_linea,
	                v_num_giorni,
					v_descr_breve_template_notific;
   
	  IF c3%FOUND THEN
	   -- Recupero ID_ENTITA dell'evento
	   BEGIN
		   SELECT ID_ENTITA 
			 INTO v_id_entita_gr
			 FROM PBANDI_C_ENTITA 
			 WHERE NOME_ENTITA = 'PBANDI_T_GESTIONE_REVOCA';
	   END;
	   
	   -- Recupero l'identificativo di monitoraggio per la gestione revoca che viene sospesa
	   OPEN c_monit_gr (v_id_entita_gr,:NEW.ID_GESTIONE_REVOCA);
	   FETCH c_monit_gr INTO v_id_monit_tempi_sospeso;
	   -- Solo se trovo l'occorrenza inserisco il monitoraggio
	   IF c_monit_gr%FOUND THEN
	   
	   
	     -- Valorizzazione metadati per composizione notifica in modo dinamico tramite template
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('NUM_REVOCA', to_char(:NEW.NUMERO_REVOCA));
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('CODICE_VISUALIZZATO', v_codice_visualizzato);
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('ID_PROGETTO', to_char(:NEW.ID_PROGETTO));
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('DATA_ATTIVITA', to_char(:NEW.DT_ATTIVITA,'dd/mm/yyyy'));
		 
		 GetTemplateMessage(v_descr_breve_template_notific,v_subject_notifica,v_message_notifica);
	  
	  INSERT INTO PBANDI_T_MONIT_TEMPI
		( ID_MONIT_TEMPI,
		  ID_PROGETTO,
		  DT_DECORRENZA,
		  DT_FINE,
		  ID_ENTITA,
		  ID_TARGET,
		  DESCRIZIONE,
		  ID_PARAM_MONIT_BANDO_LINEA,
		  NUM_GIORNI,
		  ID_MONIT_TEMPI_SOSPESO)
		VALUES
		 (SEQ_PBANDI_T_MONIT_TEMPI.NEXTVAL,
		  :NEW.ID_PROGETTO,
		  :NEW.DT_NOTIFICA,
		  NULL,
		  (SELECT ID_ENTITA FROM PBANDI_C_ENTITA WHERE NOME_ENTITA = 'PBANDI_T_GESTIONE_REVOCA'),
		  :NEW.ID_GESTIONE_REVOCA,
		  v_message_notifica,
		  v_id_param_monit_bando_linea,
		  v_num_giorni,
		  v_id_monit_tempi_sospeso);
		  
	   END IF;
	   CLOSE c_monit_gr;
		  
	  END IF;
	  CLOSE c3;
   
   END IF;

END;
/


--Comunicazione di avvio di controlli in loco a seguito del campionamento
--l’istruttore ha tot gg di tempo per effettuare i controlli richiesti dal campionamento
-- DROP TRIGGER TG_PBANDI_R_CAMP_CONTR_LOCO_AI;
CREATE OR REPLACE TRIGGER TG_PBANDI_T_CONTROLLO_LOCO_AU
   after update of DT_AVVIO_CONTROLLI on PBANDI_T_CONTROLLO_LOCO
   referencing old as OLD new as NEW
   for each row
   WHEN (NEW.DT_AVVIO_CONTROLLI IS NOT NULL)
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
	CURSOR c_cl (c_id_controllo_loco NUMBER) is
	       select id_progetto
		     from PBANDI_R_CAMP_CONTR_LOCO
			where id_controllo_loco = c_id_controllo_loco;	
			
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N'),
				 a.codice_visualizzato
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;
		  
	CURSOR c3 (c_progr_bando_linea_intervento NUMBER,
	           c_descr_breve_parametro_monit VARCHAR2) is
		   select id_param_monit_bando_linea,
		          num_giorni,
				  descr_breve_template_notifica
		     from PBANDI_R_PARAM_MONIT_BANDO_LIN a
			 join PBANDI_C_PARAMETRI_MONIT b ON b.id_parametro_monit = a.id_parametro_monit
			 join PBANDI_D_TEMPLATE_NOTIFICA c ON c.id_template_notifica = b.id_template_notifica
			where a.progr_bando_linea_intervento = c_progr_bando_linea_intervento
			  and b.desc_breve_parametro_monit = c_descr_breve_parametro_monit
			  and a.dt_fine_validita IS NULL;

	   
   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_param_monit_bando_linea PBANDI_R_PARAM_MONIT_BANDO_LIN.id_param_monit_bando_linea%TYPE;
   v_num_giorni PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE;
   v_id_monit_tempi_sospeso PBANDI_T_MONIT_TEMPI.id_monit_tempi%TYPE;
   
   v_subject_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_message_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_descr_breve_template_notific  PBANDI_D_TEMPLATE_NOTIFICA.descr_breve_template_notifica%TYPE;
   v_codice_visualizzato  PBANDI_T_PROGETTO.codice_visualizzato%TYPE;
   v_dt_avvio_controlli		PBANDI_T_CONTROLLO_LOCO.dt_avvio_controlli%TYPE;
   v_dt_fine_controlli		PBANDI_T_CONTROLLO_LOCO.dt_fine_controlli%TYPE;
   v_id_progetto PBANDI_R_CAMP_CONTR_LOCO.id_progetto%TYPE;
   
BEGIN

   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;
   
   -- Recupero il progetto accedendo a PBANDI_R_CAMP_CONTR_LOCO
   OPEN c_cl (:NEW.ID_CONTROLLO_LOCO);
   FETCH c_cl INTO v_id_progetto;
   IF c_cl%NOTFOUND THEN
	 RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_R_CAMP_CONTR_LOCO - ID_CONTROLLO_LOCO='||:NEW.ID_CONTROLLO_LOCO);
   END IF;
   CLOSE c_cl;

   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (v_id_progetto);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi,
					v_codice_visualizzato;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
      -- Inserimento del controllo in loco
      OPEN c3(v_progr_bando_linea_intervento,'MOT06');
	  FETCH c3 INTO v_id_param_monit_bando_linea,
	                v_num_giorni,
					v_descr_breve_template_notific;
	  
	  IF c3%FOUND THEN
		   
	     -- Valorizzazione metadati per composizione notifica in modo dinamico tramite template
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('ID_PROGETTO', to_char(v_id_progetto));
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('ID_CONTROLLO_LOCO', to_char(:NEW.ID_CONTROLLO_LOCO));
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('DATA_AVVIO_CONTROLLI', to_char(:NEW.dt_avvio_controlli,'dd/mm/yyyy'));
		 
		 GetTemplateMessage(v_descr_breve_template_notific,v_subject_notifica,v_message_notifica);
	  
	  INSERT INTO PBANDI_T_MONIT_TEMPI
		( ID_MONIT_TEMPI,
		  ID_PROGETTO,
		  DT_DECORRENZA,
		  DT_FINE,
		  ID_ENTITA,
		  ID_TARGET,
		  DESCRIZIONE,
		  ID_PARAM_MONIT_BANDO_LINEA,
		  NUM_GIORNI,
		  ID_MONIT_TEMPI_SOSPESO)
		VALUES
		 (SEQ_PBANDI_T_MONIT_TEMPI.NEXTVAL,
		  v_id_progetto,
		  :NEW.dt_avvio_controlli,
		  :NEW.dt_fine_controlli,
		  (SELECT ID_ENTITA FROM PBANDI_C_ENTITA WHERE NOME_ENTITA = 'PBANDI_T_CONTROLLO_LOCO'),
		  :NEW.ID_CONTROLLO_LOCO,
		  v_message_notifica,
		  v_id_param_monit_bando_linea,
		  NULL,
		  NULL);

	  END IF;
	  CLOSE c3;
	          

   
   END IF;

END;
/

-- Richiesta di integrazione 
-- INSERIMENTO

CREATE OR REPLACE TRIGGER TG_PBANDI_T_RICH_INTEGRAZ_AI
   after insert on PBANDI_T_RICHIESTA_INTEGRAZ
   referencing old as OLD new as NEW
   for each row
   WHEN (NEW.ID_ENTITA = 570) -- PBANDI_T_CONTROLLO_LOCO
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N'),
				 a.codice_visualizzato
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;
		  
	CURSOR c3 (c_progr_bando_linea_intervento NUMBER,
	           c_descr_breve_parametro_monit VARCHAR2) is
		   select id_param_monit_bando_linea,
		          num_giorni,
				  c.descr_breve_template_notifica
		     from PBANDI_R_PARAM_MONIT_BANDO_LIN a
			 join PBANDI_C_PARAMETRI_MONIT b ON b.id_parametro_monit = a.id_parametro_monit
			 join PBANDI_D_TEMPLATE_NOTIFICA c ON c.id_template_notifica = b.id_template_notifica
			where a.progr_bando_linea_intervento = c_progr_bando_linea_intervento
			  and b.desc_breve_parametro_monit = c_descr_breve_parametro_monit;
			  
	CURSOR c_cl (c_id_controllo_loco NUMBER) is
	       select id_progetto
		     from PBANDI_R_CAMP_CONTR_LOCO
			where id_controllo_loco = c_id_controllo_loco;
			
	CURSOR c_monit_cl (c_id_entita NUMBER, c_id_target NUMBER) is
	       select id_monit_tempi
		     from PBANDI_T_MONIT_TEMPI
			where id_entita = c_id_entita
			  and id_target = c_id_target;

	   
   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_param_monit_bando_linea PBANDI_R_PARAM_MONIT_BANDO_LIN.id_param_monit_bando_linea%TYPE;
   v_num_giorni PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE;
   v_id_progetto PBANDI_T_DICHIARAZIONE_SPESA.id_progetto%TYPE;
   v_id_entita_cl   PBANDI_C_ENTITA.id_entita%TYPE;
   v_id_monit_tempi_sospeso PBANDI_T_MONIT_TEMPI.id_monit_tempi%TYPE;
   v_codice_visualizzato  PBANDI_T_PROGETTO.codice_visualizzato%TYPE;
   
   v_subject_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_message_notifica PBANDI_T_MONIT_TEMPI.DESCRIZIONE%TYPE;
   v_descr_breve_template_notific  PBANDI_D_TEMPLATE_NOTIFICA.descr_breve_template_notifica%TYPE;
   
BEGIN

   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;
   
   -- Recupero il progetto accedendo a PBANDI_R_CAMP_CONTR_LOCO
   OPEN c_cl (:NEW.ID_TARGET);
   FETCH c_cl INTO v_id_progetto;
   IF c_cl%NOTFOUND THEN
     RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_R_CAMP_CONTR_LOCO - ID_CONTROLLO_LOCO='||:NEW.ID_TARGET);
   END IF;
   CLOSE c_cl;
   
     
   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (v_id_progetto);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi,
					v_codice_visualizzato;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
      -- Inserimento della integrazione al controllo in loco
      OPEN c3(v_progr_bando_linea_intervento,'MOT07');
	  FETCH c3 INTO v_id_param_monit_bando_linea,
	                v_num_giorni,
					v_descr_breve_template_notific;
	  
	  IF c3%FOUND THEN
	       -- Recupero ID_ENTITA dell'evento che viene sospeso
		   BEGIN
			   SELECT ID_ENTITA 
				 INTO v_id_entita_cl
				 FROM PBANDI_C_ENTITA 
				 WHERE NOME_ENTITA = 'PBANDI_T_CONTROLLO_LOCO';
		   END;
		   
	   -- Recupero l'identificativo di monitoraggio per il controllo in loco che viene sospesa
	   OPEN c_monit_cl (v_id_entita_cl,:NEW.ID_TARGET);
	   FETCH c_monit_cl INTO v_id_monit_tempi_sospeso;
	   IF c_monit_cl%NOTFOUND THEN
		 RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_T_MONIT_TEMPI - ID_CONTROLLO_LOCO='||:NEW.ID_TARGET);
	   END IF;
	   CLOSE c_monit_cl;
		   
	     -- Valorizzazione metadati per composizione notifica in modo dinamico tramite template
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('ID_CONTROLLO_LOCO', to_char(:NEW.ID_TARGET));
	     PCK_PBANDI_PROCESSO.PutNotificationMetadata ('CODICE_VISUALIZZATO', v_codice_visualizzato);
		 
		 GetTemplateMessage(v_descr_breve_template_notific,v_subject_notifica,v_message_notifica);
	  
	  INSERT INTO PBANDI_T_MONIT_TEMPI
		( ID_MONIT_TEMPI,
		  ID_PROGETTO,
		  DT_DECORRENZA,
		  DT_FINE,
		  ID_ENTITA,
		  ID_TARGET,
		  DESCRIZIONE,
		  ID_PARAM_MONIT_BANDO_LINEA,
		  NUM_GIORNI,
		  ID_MONIT_TEMPI_SOSPESO)
		VALUES
		 (SEQ_PBANDI_T_MONIT_TEMPI.NEXTVAL,
		  v_id_progetto,
		  :NEW.DT_RICHIESTA,
		  NULL,
		  (SELECT ID_ENTITA FROM PBANDI_C_ENTITA WHERE NOME_ENTITA = 'PBANDI_T_CONTROLLO_LOCO'),
		  :NEW.ID_TARGET,
		  v_message_notifica,
		  v_id_param_monit_bando_linea,
		  null,
		  v_id_monit_tempi_sospeso);

	  END IF;
	  CLOSE c3;
	          

   
   END IF;

END;
/

CREATE OR REPLACE TRIGGER TG_PBANDI_T_RICH_INTEGR_AU_01
   after update of DT_NOTIFICA on PBANDI_T_RICHIESTA_INTEGRAZ
   referencing old as OLD new as NEW
   for each row
   WHEN (NEW.ID_ENTITA = 570) -- PBANDI_T_CONTROLLO_LOCO
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N')
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;

	CURSOR c3 (c_id_param_monit_bando_linea NUMBER) is
		   select num_giorni
		     from PBANDI_R_PARAM_MONIT_BANDO_LIN a
			where a.id_param_monit_bando_linea = c_id_param_monit_bando_linea;

	CURSOR c_monit_cl (c_id_entita NUMBER, c_id_target NUMBER) is
	       select id_param_monit_bando_linea
		     from PBANDI_T_MONIT_TEMPI
			where id_entita = c_id_entita
			  and id_target = c_id_target;

	CURSOR c_cl (c_id_controllo_loco NUMBER) is
	       select id_progetto
		     from PBANDI_R_CAMP_CONTR_LOCO
			where id_controllo_loco = c_id_controllo_loco;

   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_entita_cl   PBANDI_C_ENTITA.id_entita%TYPE;
   v_dummy VARCHAR2(1);
   v_num_giorni PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE;
   v_id_progetto PBANDI_T_DICHIARAZIONE_SPESA.id_progetto%TYPE;
   v_id_param_monit_bando_linea PBANDI_R_PARAM_MONIT_BANDO_LIN.id_param_monit_bando_linea%TYPE;
   
BEGIN
   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;

   -- Recupero il progetto accedendo al controllo in loco
   OPEN c_cl (:NEW.ID_TARGET);
   FETCH c_cl INTO v_id_progetto;
   IF c_cl%NOTFOUND THEN
     RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_R_CAMP_CONTR_LOCO - ID_CONTROLLO_LOCO='||:NEW.ID_TARGET);
   END IF;
   CLOSE c_cl;
   
   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (v_id_progetto);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
   
	   -- Recupero ID_ENTITA dell'evento che viene sospeso
	   BEGIN
		   SELECT ID_ENTITA 
			 INTO v_id_entita_cl
			 FROM PBANDI_C_ENTITA 
			 WHERE NOME_ENTITA = 'PBANDI_T_CONTROLLO_LOCO';
	   END;
	   
	   OPEN c_monit_cl (v_id_entita_cl,:NEW.ID_TARGET);
	   FETCH c_monit_cl into v_id_param_monit_bando_linea;
	   IF c_monit_cl%FOUND THEN
	      OPEN c3(v_id_param_monit_bando_linea);
		  FETCH c3 INTO v_num_giorni;
		  IF c3%NOTFOUND THEN
		 RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_T_MONIT_TEMPI - ID_CONTROLLO_LOCO='||:NEW.ID_TARGET);
          END IF;
		  CLOSE c3;
	   
		  -- Aggiornamento della data decorrenza e num giorni scadenza della integrazione di spesa
		  UPDATE PBANDI_T_MONIT_TEMPI
			 SET DT_DECORRENZA = :NEW.DT_NOTIFICA,
			     NUM_GIORNI = nvl(:NEW.NUM_GIORNI_SCADENZA,v_num_giorni)
			WHERE ID_ENTITA = v_id_entita_cl
			  AND ID_TARGET = :NEW.ID_TARGET;
	   END IF;
	   CLOSE c_monit_cl;
   
   END IF;

END;
/

CREATE OR REPLACE TRIGGER TG_PBANDI_T_RICH_INTEGR_AU_02
   after update of ID_STATO_RICHIESTA,DT_INVIO on PBANDI_T_RICHIESTA_INTEGRAZ
   referencing old as OLD new as NEW
   for each row
   WHEN (NEW.ID_ENTITA = 570) -- PBANDI_T_CONTROLLO_LOCO
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
	    FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
	   
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
		         NVL(c.flag_monitoraggio_tempi,'N')
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;

	CURSOR c3 (c_id_stato_richiesta NUMBER) is
		   select desc_breve_stato_richiesta
		     from PBANDI_D_STATO_RICH_INTEGRAZ a
			where a.id_stato_richiesta = c_id_stato_richiesta;

	CURSOR c_monit_cl (c_id_entita NUMBER, c_id_target NUMBER) is
	       select id_param_monit_bando_linea
		     from PBANDI_T_MONIT_TEMPI
			where id_entita = c_id_entita
			  and id_target = c_id_target;

	CURSOR c_cl (c_id_controllo_loco NUMBER) is
	       select id_progetto
		     from PBANDI_R_CAMP_CONTR_LOCO
			where id_controllo_loco = c_id_controllo_loco;

   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_entita_cl   PBANDI_C_ENTITA.id_entita%TYPE;
   v_dummy VARCHAR2(1);
   v_num_giorni PBANDI_R_PARAM_MONIT_BANDO_LIN.num_giorni%TYPE;
   v_id_progetto PBANDI_T_DICHIARAZIONE_SPESA.id_progetto%TYPE;
   v_desc_breve_stato_richiesta PBANDI_D_STATO_RICH_INTEGRAZ.desc_breve_stato_richiesta%TYPE;
   v_id_param_monit_bando_linea PBANDI_R_PARAM_MONIT_BANDO_LIN.id_param_monit_bando_linea%TYPE;
   
BEGIN
   -- Verifica se è attivo il monitoraggio a livello di sistema
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;

   -- Recupero il progetto accedendo a PBANDI_R_CAMP_CONTR_LOCO
   OPEN c_cl (:NEW.ID_TARGET);
   FETCH c_cl INTO v_id_progetto;
   IF c_cl%NOTFOUND THEN
     RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_R_CAMP_CONTR_LOCO - ID_CONTROLLO_LOCO='||:NEW.ID_TARGET);
   END IF;
   CLOSE c_cl;
   
   -- Verifico se è attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (v_id_progetto);
	  FETCH c2 INTO v_progr_bando_linea_intervento,
	                v_monit_tempi;
	  IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
   
	   -- Recupero ID_ENTITA dell'evento che viene sospeso
	   BEGIN
		   SELECT ID_ENTITA 
			 INTO v_id_entita_cl
			 FROM PBANDI_C_ENTITA 
			 WHERE NOME_ENTITA = 'PBANDI_T_CONTROLLO_LOCO';
	   END;
	   
	   OPEN c_monit_cl (v_id_entita_cl,:NEW.ID_TARGET);
	   FETCH c_monit_cl into v_id_param_monit_bando_linea;
	   IF c_monit_cl%FOUND THEN
	      IF :NEW.ID_STATO_RICHIESTA IS NOT NULL THEN
			  OPEN c3(:NEW.ID_STATO_RICHIESTA);
			  FETCH c3 INTO v_desc_breve_stato_richiesta;
			  IF c3%NOTFOUND THEN
				RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_D_STATO_RICH_INTEGRAZ - ID_STATO_RICHIESTA='||:NEW.ID_STATO_RICHIESTA);
			  END IF;
			  CLOSE c3;
		  END IF;
	   
		  -- Aggiornamento della data fine se lo stato della richiesta è CHIUSA D'UFFICIO o è valorizzata la data invio
		  IF v_desc_breve_stato_richiesta = 'CHIUSA_UFFICIO' OR :NEW.DT_INVIO IS NOT NULL THEN
			  UPDATE PBANDI_T_MONIT_TEMPI
				 SET DT_FINE = NVL(:NEW.DT_INVIO,SYSDATE)
				WHERE ID_ENTITA = v_id_entita_cl
				  AND ID_TARGET = :NEW.ID_TARGET;
		  END IF;
	   END IF;
	   CLOSE c_monit_cl;
   
   END IF;

END;
/


--PBANDI_C_TIPO_DOCUMENTO_INDEX  
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (33, 'CLEXC', 'CHECK LIST VALIDAZIONE EXCEL', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (34, 'AICL', 'ALLEGATI INTEGRAZIONE CONTROLLO IN LOCO', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (35, 'LARIR', 'LETTERA ACCOMPAGNATORIA RICHIESTA INTEGRAZIONE RENDICONTAZIONE', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (36, 'DGE', 'DOCUMENTO GENERICO ESCUSSIONE', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (37, 'RIB', 'RICHIESTA INTEGRAZIONE ESCUSSIONE BANCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (38, 'IEB', 'INVIO ESITO ESCUSSIONE BANCA ', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (39, 'DURC', 'DOCUMENTO UNICO REGOLARITA CONTRIBUTIVA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (40, 'DSAN', 'DICHIARAZIONE SOSTITUTIVA DURC ATTO NOTORIO', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (41, 'ANTM', 'DICHIARAZIONE ANTIMAFIA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (42, 'LADE', 'LETTERA ACCOMPAGNATORIA PROPOSTA EROGAZIONE ', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (43, 'BDNA', 'RICEVUTA ISTRUTTORIA BDNA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (44, 'LAVPC', 'LETTERA ACCOMPAGNATORIA AVVIO PROCEDIMENTO DI REVOCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (45, 'LRIPC', 'LETTERA ACCOMPAGNATORIA RICHIESTA INTEGRAZIONE PROCEDIMENTO DI REVOCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (46, 'LARPC', 'LETTERA ACCOMPAGNATORIA ARCHIVIAZIONE PROCEDIMENTO DI REVOCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (47, 'LEMPV', 'LETTERA ACCOMPAGNATORIA EMISSIONE PROVVEDIMENTO DI REVOCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (48, 'LRAPV', 'LETTERA ACCOMPAGNATORIA RITIRO IN AUTOTUTELA PROVVEDIMENTO DI REVOCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (49, 'LCFPV', 'LETTERA ACCOMPAGNATORIA CONFERMA PROVVEDIMENTO DI REVOCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (50, 'AAVPC', 'ALLEGATI AVVIO PROCEDIMENTO DI REVOCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (51, 'ARIPC', 'ALLEGATI RICHIESTA INTEGRAZIONI PROCEDIMENTO DI REVOCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (52, 'AARPC', 'ALLEGATI ARCHIVIAZIONE PROCEDIMENTO DI REVOCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (53, 'AAEPV', 'ALLEGATI EMISSIONE PROVVEDIMENTO DI REVOCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (54, 'AARPV', 'ALLEGATI RITIRO IN AUTOTUTELA PROVVEDIMENTO DI REVOCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (55, 'AACPV', 'ALLEGATI CONFERMA PROVVEDIMENTO DI REVOCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (56, 'AVCL', 'AVVIO CONTROLLO IN LOCO', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (57, 'ESCL', 'ESITO CONTROLLO IN LOCO', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (58, 'CLILINT', 'CHECK LIST IN LOCO INTERNO', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX)
 Values
   (59, 'CAUTCNT', 'COMUNICAZIONE AUTORITA'' CONTROLLANTE');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (60, 'LADS', 'LETTERA ACCOMPAGNATORIA ESITO VALIDAZIONE', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX)
 Values
   (61, 'AFAI', 'ALLEGATI FINPIS ACTIVE INFO');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (62, 'LACL', 'LETTERA ACCOMPAGNATORIA RICHIESTA INTEGRAZIONE CONTROLLO IN LOCO', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (63, 'REPVAL', 'REPORT VALIDAZIONE EXCEL', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (64, 'REVBAN', 'REVOCA BANCARIA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (65, 'AZRECBANCA', 'AZIONI RECUPERO BANCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (66, 'PIANRIENTR', 'PIANO DI RIENTRO', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (67, 'SALSTR', 'SALDO E STRALCIO', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (68, 'LIBBANCA', 'LIBERAZIONE BANCA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (69, 'NG', 'NOTE GENERALI', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (70, 'LIBGAR', 'LIBERAZIONE GARANTE', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (71, 'ABBGAR', 'ABBATTIMENTO GARANZIE', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (72, 'ESCCONF', 'ESCUSSIONE CONFIDI', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (73, 'PASSPERD', 'PASSAGGIO A PERDITA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (74, 'MESMORA', 'MESSA IN MORA', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (75, 'ISCRUOLO', 'ISCRIZIONE A RUOLO', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (76, 'CORTCONT', 'SEGNALAZIONE CORTE DEI CONTI', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX, FLAG_UPLOADABLE)
 Values
   (77, 'CESSQFP', 'CESSIONE QUOTA FINPIEMONTE', 'S');
Insert into PBANDI_C_TIPO_DOCUMENTO_INDEX
   (ID_TIPO_DOCUMENTO_INDEX, DESC_BREVE_TIPO_DOC_INDEX, DESC_TIPO_DOC_INDEX)
 Values
   (78, 'TRANSAZ', 'TRANSAZIONI');
COMMIT;


--PBANDI_R_DOC_INDEX_TIPO_ANAG
Insert into PBANDI_R_DOC_INDEX_TIPO_ANAG
   (ID_TIPO_ANAGRAFICA, ID_UTENTE_INS, ID_UTENTE_AGG, ID_TIPO_DOCUMENTO_INDEX)
 Values
   (4, 0, 0, 33);
Insert into PBANDI_R_DOC_INDEX_TIPO_ANAG
   (ID_TIPO_ANAGRAFICA, ID_UTENTE_INS, ID_TIPO_DOCUMENTO_INDEX)
 Values
   (4, 0, 39);
Insert into PBANDI_R_DOC_INDEX_TIPO_ANAG
   (ID_TIPO_ANAGRAFICA, ID_UTENTE_INS, ID_TIPO_DOCUMENTO_INDEX)
 Values
   (5, 0, 39);
Insert into PBANDI_R_DOC_INDEX_TIPO_ANAG
   (ID_TIPO_ANAGRAFICA, ID_UTENTE_INS, ID_TIPO_DOCUMENTO_INDEX)
 Values
   (4, 0, 40);
Insert into PBANDI_R_DOC_INDEX_TIPO_ANAG
   (ID_TIPO_ANAGRAFICA, ID_UTENTE_INS, ID_TIPO_DOCUMENTO_INDEX)
 Values
   (5, 0, 40);
Insert into PBANDI_R_DOC_INDEX_TIPO_ANAG
   (ID_TIPO_ANAGRAFICA, ID_UTENTE_INS, ID_TIPO_DOCUMENTO_INDEX)
 Values
   (4, 0, 41);
Insert into PBANDI_R_DOC_INDEX_TIPO_ANAG
   (ID_TIPO_ANAGRAFICA, ID_UTENTE_INS, ID_TIPO_DOCUMENTO_INDEX)
 Values
   (5, 0, 41);
Insert into PBANDI_R_DOC_INDEX_TIPO_ANAG
   (ID_TIPO_ANAGRAFICA, ID_UTENTE_INS, ID_TIPO_DOCUMENTO_INDEX)
 Values
   (4, 0, 43);
Insert into PBANDI_R_DOC_INDEX_TIPO_ANAG
   (ID_TIPO_ANAGRAFICA, ID_UTENTE_INS, ID_TIPO_DOCUMENTO_INDEX)
 Values
   (5, 0, 43);
Insert into PBANDI_R_DOC_INDEX_TIPO_ANAG
   (ID_TIPO_ANAGRAFICA, ID_UTENTE_INS, ID_TIPO_DOCUMENTO_INDEX)
 Values
   (4, 0, 56);
Insert into PBANDI_R_DOC_INDEX_TIPO_ANAG
   (ID_TIPO_ANAGRAFICA, ID_UTENTE_INS, ID_TIPO_DOCUMENTO_INDEX)
 Values
   (4, 0, 61);
Insert into PBANDI_R_DOC_INDEX_TIPO_ANAG
   (ID_TIPO_ANAGRAFICA, ID_UTENTE_INS, ID_TIPO_DOCUMENTO_INDEX)
 Values
   (4, 0, 62);
COMMIT;

-- Configurazione nuovi permessi

Insert into PBANDI_D_TIPO_ANAGRAFICA
   (ID_TIPO_ANAGRAFICA, DESC_BREVE_TIPO_ANAGRAFICA, DESC_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, ID_RUOLO_HELP, ID_CATEG_ANAGRAFICA)
 Values
   (26, 'ISTR-CREDITI', 'Istruttore Area Crediti', TO_DATE('11/25/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 2, 9);
Insert into PBANDI_D_TIPO_ANAGRAFICA
   (ID_TIPO_ANAGRAFICA, DESC_BREVE_TIPO_ANAGRAFICA, DESC_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, ID_RUOLO_HELP, ID_CATEG_ANAGRAFICA)
 Values
   (27, 'OP-CAMP-FINP', 'Operatore del Campionamento', TO_DATE('12/14/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 2, 4);
COMMIT;


--
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA, DESC_MENU)
 Values
   (161, 'OPEANAG003', 'Gestione Anagrafica', TO_DATE('07/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Gestione Anagrafica');
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA, DESC_MENU)
 Values
   (162, 'MENUMONITCRED', 'Menu Monitoraggio Crediti', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Monitoraggio Crediti');
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (163, 'ACRED004', 'Ricerca Beneficiari Monitoraggio', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA, DESC_MENU)
 Values
   (164, 'MENUPROPVARIAZIONI', 'Menu Proposte variazioni Stato Credito', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Proposte variazioni Stato Credito');
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (165, 'ACRED005', 'Modifica Scheda Cliente', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (166, 'ACRED006', 'Visualizza Scheda Cliente', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (167, 'ACRED009', 'Revoca Bancaria', TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA, DESC_MENU)
 Values
   (168, 'OPE-CDU-V01-CNT006', 'Menu campionamento', TO_DATE('12/14/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Campionamento');
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (169, 'ACRED010', 'Azioni recupero banca', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (170, 'ACRED011', 'Liberazione  garante', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (171, 'ACRED012', 'Abbattimento garanzie', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (172, 'ACRED013 ', 'Escussione Confidi', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (173, 'ACRED014 ', 'Piano di rientro', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (174, 'ACRED015', 'Saldo e stralcio', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (175, 'ACRED016 ', 'Passaggio a perdita', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (176, 'ACRED017', 'Liberazione banca', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (177, 'ACRED018', 'Messa in mora', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (178, 'ACRED019', 'Iscrizione al ruolo', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (179, 'ACRED020', 'Segnalazione Corte dei Conti', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (180, 'ACRED021', 'Cessione quota Finpiemonte', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (181, 'ACRED022 ', 'Transazioni', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (182, 'ACRED023', 'Note generali', TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA, DESC_MENU)
 Values
   (183, 'PBAN-OPE-CDU-V01- CNT001', 'Area controlli in loco', TO_DATE('12/17/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Area controlli in loco');
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA, DESC_MENU)
 Values
   (184, 'MENUGESTRICH', 'Menu Gestione Richieste', TO_DATE('12/22/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Gestione richieste');
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (185, 'ACRED008', 'Gestione Crediti Deteriorati', TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (186, 'ACRED007', 'Proposte Variazioni Stato Credito', TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (187, 'ACRED024', 'Stato Azienda Revoca e Blocco anagrafico', TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (188, 'ACRED025', 'Stato Credito Revoca e Blocco anagrafico', TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (189, 'ACRED026', 'Visualizzazione Revoca Amministrativa', TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (190, 'ACRED027', 'Notifica Delibera', TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (191, 'ACRED028', 'Inserimento Rating Classe Rischio', TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (192, 'ACRED029', 'Estratto conto', TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (193, 'ACRED030', 'Piano ammortamento', TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
/*
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA, DESC_MENU)
 Values
   (194, 'MENUNEWS', 'News e avvisi', TO_DATE('02/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Gestione news / avvisi');
*/

Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA, DESC_MENU)
 Values
   (195, 'MENUGESTGAR', 'Menu gestione garanzie', TO_DATE('02/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Gestione garanzie');
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA, DESC_MENU)
 Values
   (196, 'MENUAMBEROG', 'Menu ambito erogazioni', TO_DATE('02/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Gestione erogazioni');
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA, DESC_MENU)
 Values
   (197, 'MENUREV', 'Menu gestione revoche', TO_DATE('02/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Gestione revoche');
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA, DESC_MENU)
 Values
   (198, 'MENUITER', 'Menu iter autorizzativi', TO_DATE('02/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Iter autorizzativi');
Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA)
 Values
   (200, 'OPEANAG002', 'Modifica Anagrafica', TO_DATE('07/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--PBANDI_R_PERMESSO_TIPO_ANAGRAF
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (161, 5, TO_DATE('07/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'S');
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (161, 4, TO_DATE('07/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'S');
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (162, 26, TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'S');
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (163, 26, TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (164, 26, TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'S');
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (165, 26, TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (166, 26, TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (167, 26, TO_DATE('11/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (168, 27, TO_DATE('12/14/2021 18:14:29', 'MM/DD/YYYY HH24:MI:SS'), 'S');
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (169, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (170, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (171, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (172, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (173, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (174, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (175, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (176, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (177, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (178, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (179, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (180, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (181, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (182, 26, TO_DATE('12/16/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (183, 4, TO_DATE('12/16/2021 18:14:29', 'MM/DD/YYYY HH24:MI:SS'), 'S');
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (184, 4, TO_DATE('01/10/2022 15:37:32', 'MM/DD/YYYY HH24:MI:SS'), 'S');
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (185, 26, TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (186, 26, TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (187, 26, TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (188, 26, TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (189, 26, TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (190, 26, TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (191, 26, TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (192, 26, TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (193, 26, TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
/*
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (194, 14, TO_DATE('02/23/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'S');
*/
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (195, 26, TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'S');
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (196, 4, TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'S');
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (197, 4, TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'S');
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (198, 4, TO_DATE('02/02/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'S');
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA)
 Values
   (200, 4, TO_DATE('07/01/2021 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

--Processo
Insert into PBANDI_D_TASK
   (ID_TASK, DESCR_BREVE_TASK, DESCR_TASK, ID_TIPO_TASK)
 Values
   (76, 'GEST-CONTRODEDUZ', 'Controdeduzioni', 9);
Insert into PBANDI_D_TASK
   (ID_TASK, DESCR_BREVE_TASK, DESCR_TASK, ID_TIPO_TASK)
 Values
   (77, 'GEST-CONTESTAZ', 'Contestazioni', 9);
COMMIT;

Insert into PBANDI_T_STEP_PROCESSO
   (ID_STEP_PROCESSO, ID_TASK_PREC, ID_TASK, ID_PROCESSO)
 Values
   (204, 8, 76, 2);
Insert into PBANDI_T_STEP_PROCESSO
   (ID_STEP_PROCESSO, ID_TASK_PREC, ID_TASK, ID_PROCESSO)
 Values
   (205, 8, 77, 2);
COMMIT;

Insert into PBANDI_R_STEP_PROCESSO_RUOLO
   (ID_STEP_PROCESSO, ID_RUOLO_DI_PROCESSO)
 Values
   (204, 2);
Insert into PBANDI_R_STEP_PROCESSO_RUOLO
   (ID_STEP_PROCESSO, ID_RUOLO_DI_PROCESSO)
 Values
   (205, 2);
COMMIT;

--PBANDI_D_CAUSALE_DISIMPEGNO
Insert into PBANDI_D_CAUSALE_DISIMPEGNO
   (ID_CAUSALE_DISIMPEGNO, DESC_BREVE_CAUSALE_DISIMPEGNO, DESC_CAUSALE_DISIMPEGNO, DT_INIZIO_VALIDITA)
 Values
   (4, 'REV-MINSP', 'Revoca e Minori spese realizzate', TO_DATE('11/21/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_D_CAUSALE_DISIMPEGNO
   (ID_CAUSALE_DISIMPEGNO, DESC_BREVE_CAUSALE_DISIMPEGNO, DESC_CAUSALE_DISIMPEGNO, DT_INIZIO_VALIDITA)
 Values
   (5, 'REV-DECURT', 'Revoca e Decurtazioni in sede di notifica definitiva', TO_DATE('11/21/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;



/* ---------------------------------------------------------------------- */
/* Tables    RNA                                                             */
/* ---------------------------------------------------------------------- */

--PBANDI_W_RNA_CARICAMENTO_XML
CREATE SEQUENCE SEQ_PBANDI_W_RNA_CARICAMEN_XML
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;

--PBANDI_W_RNAWS_INVIO_ELAB
CREATE SEQUENCE SEQ_PBANDI_W_RNAWS_INVIO_ELAB
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;

--PBANDI_W_RNA_CARIC_CONF_ESITO
CREATE SEQUENCE SEQ_PBANDI_W_RNA_CARI_CONF_ESI
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_W_RNA_CARICAMENTO_XML"                               */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_W_RNA_CARICAMENTO_XML (
    ID_CARICAMENTO NUMBER(8) NOT NULL,
    FILE_XML XMLTYPE NOT NULL,
    NOME_FILE VARCHAR2(255) NOT NULL,
    COD_BANDO VARCHAR2(40),
    DT_INSERIMENTO DATE NOT NULL,
    ID_ELAB NUMBER(8),
    NUM_FILE NUMBER(8),
    REGIME_AIUTO VARCHAR(100),
    FLAG_ACQUISITO NUMBER(1) NOT NULL,
    ID_CONCESSIONE_GEST VARCHAR(100),
    CONSTRAINT PK_PBANDI_W_RNA_CARICAM_XML PRIMARY KEY (ID_CARICAMENTO) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_W_RNA_CARICAM_XML_1 ON PBANDI_W_RNA_CARICAMENTO_XML (ID_ELAB,NUM_FILE) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_W_RNA_CARICAM_XML_2 ON PBANDI_W_RNA_CARICAMENTO_XML (COD_BANDO) TABLESPACE PBANDI_IDX;

COMMENT ON TABLE PBANDI_W_RNA_CARICAMENTO_XML IS 'Tabella di caricamento degli aiuti per la registrazione a RNA (Registro nNazionale degli Aiuti)';

COMMENT ON COLUMN PBANDI_W_RNA_CARICAMENTO_XML.FILE_XML IS 'File XML relativo al singolo aiuto ricevuto per la registrazione dell''aiuto';

COMMENT ON COLUMN PBANDI_W_RNA_CARICAMENTO_XML.ID_ELAB IS 'Identificativo elaborazione a cui viene assegnato il singolo aiuto ricevuto';

COMMENT ON COLUMN PBANDI_W_RNA_CARICAMENTO_XML.NUM_FILE IS 'Identificativo file XML padre a cui viene assegnato il singolo aiuto ricevuto';

COMMENT ON COLUMN PBANDI_W_RNA_CARICAMENTO_XML.REGIME_AIUTO IS 'Descrizione del regime di aiuto associato al singolo aiuto';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_W_RNAWS_INVIO_ELAB"                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_W_RNAWS_INVIO_ELAB (
    ID_ELAB NUMBER(8) NOT NULL,
    COD_BANDO VARCHAR2(40),
    COD_STATO_ELAB VARCHAR2(40),
    DT_INIZIO DATE,
    DT_FINE DATE,
    NUM_FILE_INVIATI INTEGER,
    NUM_FILE_DA_INVIARE INTEGER,
    FLAG_INVIO_AUTOMATICO VARCHAR2(1),
    NUM_FILE_ESITO INTEGER,
    FLAG_EMAIL_INVIATA VARCHAR2(1),
    NUM_COR INTEGER,
    NUM_AIUTI_ELAB INTEGER,
    CONSTRAINT PK_PBANDI_W_RNAWS_INVIO_ELAB PRIMARY KEY (ID_ELAB) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_W_RNAWS_INVIO_ELAB_1 ON PBANDI_W_RNAWS_INVIO_ELAB (COD_BANDO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_W_RNAWS_INVIO_ELAB_2 ON PBANDI_W_RNAWS_INVIO_ELAB (COD_STATO_ELAB) TABLESPACE PBANDI_IDX;

COMMENT ON TABLE PBANDI_W_RNAWS_INVIO_ELAB IS 'Tabella dove sono memorizzate le elaborazioni del batch Java per l''invio a RNA';

COMMENT ON COLUMN PBANDI_W_RNAWS_INVIO_ELAB.COD_STATO_ELAB IS 'Stato di avanzamento della richiesta di elaborazione';

COMMENT ON COLUMN PBANDI_W_RNAWS_INVIO_ELAB.DT_INIZIO IS 'Data in cui viene richiamato il servizio per la richiesta di elaborazione';

COMMENT ON COLUMN PBANDI_W_RNAWS_INVIO_ELAB.DT_FINE IS 'Data in cui si conclude la richiesta di elaborazione e tutti i singoli aiuti ottengono il COR';

COMMENT ON COLUMN PBANDI_W_RNAWS_INVIO_ELAB.NUM_FILE_INVIATI IS 'Numero di file XML padre associati alla richiesta di elaborazione già elaborati';

COMMENT ON COLUMN PBANDI_W_RNAWS_INVIO_ELAB.NUM_FILE_DA_INVIARE IS 'Numero di file XML padre associati all''elaborazione ancora da elaborare';

COMMENT ON COLUMN PBANDI_W_RNAWS_INVIO_ELAB.NUM_COR IS 'Numero dei codici COR ottenuti per registrazione andata a buon fine per la specifica elaborazione';

COMMENT ON COLUMN PBANDI_W_RNAWS_INVIO_ELAB.NUM_AIUTI_ELAB IS 'Numero dei singoli aiuti elaborati e registrati, sia con esito positivo che negativo';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_RNAWS_INVIO_XML"                                   */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_RNAWS_INVIO_XML (
    ID_ELAB NUMBER(8),
    NUM_FILE NUMBER(8) NOT NULL,
    NOME_FILE_XML VARCHAR2(255),
    FILE_XML XMLTYPE,
    ID_RICHIESTA_RNA NUMBER(8),
    DT_INVIO_RICHIESTA DATE,
    DT_ESITO_RICHIESTA DATE,
    ESITO_RICHIESTA_XML XMLTYPE,
    NUM_ESITI_CONCESSIONE INTEGER,
    NUM_ESITI_OK INTEGER,
    NUM_ESITI_KO INTEGER,
    NUM_AIUTI INTEGER,
    DT_INVIO_FINPIEMONTE DATE,
	COD_TIPO_VARIAZIONE VARCHAR2(2),
    CONSTRAINT PK_PBANDI_T_RNAWS_INVIO_XML PRIMARY KEY (ID_ELAB, NUM_FILE) USING INDEX TABLESPACE PBANDI_IDX,
    CONSTRAINT TUC_PBANDI_T_RNAWS_INVIO_XML_1 UNIQUE (ID_RICHIESTA_RNA) USING INDEX TABLESPACE PBANDI_IDX
);

COMMENT ON TABLE PBANDI_T_RNAWS_INVIO_XML IS 'Tabella che raggruppa per identificativo file padre e genera una richiesta da inviare a RNA';

COMMENT ON COLUMN PBANDI_T_RNAWS_INVIO_XML.FILE_XML IS 'File XML padre contenente n singoli aiuti per richiamare il servizio di registrazione degli aiuti';

COMMENT ON COLUMN PBANDI_T_RNAWS_INVIO_XML.ID_RICHIESTA_RNA IS 'Identificativo della singola richiesta di registrazione fornito da RNA';

COMMENT ON COLUMN PBANDI_T_RNAWS_INVIO_XML.DT_INVIO_RICHIESTA IS 'Data in cui viene richiamato il servizio per la registrazione degli aiuti';

COMMENT ON COLUMN PBANDI_T_RNAWS_INVIO_XML.DT_ESITO_RICHIESTA IS 'Data in cui viene fornito un esito da RNA alla richiesta di registrazione';

COMMENT ON COLUMN PBANDI_T_RNAWS_INVIO_XML.ESITO_RICHIESTA_XML IS 'File XML di risposta del servizio RNA per la registrazione degli aiuti';

COMMENT ON COLUMN PBANDI_T_RNAWS_INVIO_XML.NUM_ESITI_CONCESSIONE IS 'Numero degli aiuti per cui è stato fornito un esito da parte di RNA';

COMMENT ON COLUMN PBANDI_T_RNAWS_INVIO_XML.NUM_ESITI_OK IS 'Numero degli aiuti per cui è stato fornito un esito positivo da parte di RNA';

COMMENT ON COLUMN PBANDI_T_RNAWS_INVIO_XML.NUM_ESITI_KO IS 'Numero degli aiuti per cui è stato fornito un esito negativo da parte di RNA';

COMMENT ON COLUMN PBANDI_T_RNAWS_INVIO_XML.NUM_AIUTI IS 'Numero degli aiuti per cui è stata richiesta la registrazione';

COMMENT ON COLUMN PBANDI_T_RNAWS_INVIO_XML.DT_INVIO_FINPIEMONTE IS 'Data in cui il file XML contenente gli esiti viene rimandato a Finpiemonte';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_RNA_BANDI"                                         */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_RNA_BANDI (
    COD_BANDO VARCHAR2(40) NOT NULL,
    WSDL_USER VARCHAR2(30),
    WSDL_PASSWORD VARCHAR2(30),
    SIGLA_AMM_RESP VARCHAR2(40),
    EMAIL_A VARCHAR2(1000),
    EMAIL_CC VARCHAR2(1000),
    EMAIL_OGGETTO VARCHAR2(4000),
    EMAIL_DA VARCHAR2(1000),
    CONSTRAINT PK_PBANDI_D_RNA_BANDI PRIMARY KEY (COD_BANDO) USING INDEX TABLESPACE PBANDI_IDX
);

COMMENT ON COLUMN PBANDI_D_RNA_BANDI.WSDL_USER IS 'Credenziali per accesso al servizio RNA';

COMMENT ON COLUMN PBANDI_D_RNA_BANDI.WSDL_PASSWORD IS 'Credenziali per accesso al servizio RNA';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_RNAWS_INVIO_ESITO"                                 */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_RNAWS_INVIO_ESITO (
    ID_RICHIESTA_RNA NUMBER(8) NOT NULL,
    COR VARCHAR2(40) NOT NULL,
    COD_ESITO INTEGER,
    DESCR_ESITO VARCHAR2(1000),
    DT_SCARICO_ESITO DATE,
    ID_CONCESSIONE_GEST VARCHAR2(100),
    CONSTRAINT PK_PBANDI_T_RNAWS_INVIO_ESITO PRIMARY KEY (ID_RICHIESTA_RNA, COR) USING INDEX TABLESPACE PBANDI_IDX
);

COMMENT ON TABLE PBANDI_T_RNAWS_INVIO_ESITO IS 'Tabella che memorizza l''esito tramite il COR a fronte di una richiesta a RNA';

COMMENT ON COLUMN PBANDI_T_RNAWS_INVIO_ESITO.COR IS 'Codice COR restituito dal servizio RNA se la registrazione è andata a buon fine per ogni singolo aiuto';

COMMENT ON COLUMN PBANDI_T_RNAWS_INVIO_ESITO.COD_ESITO IS '0=Esito positivo 1=Esito negativo';

COMMENT ON COLUMN PBANDI_T_RNAWS_INVIO_ESITO.DESCR_ESITO IS 'Descrizione esito della registrazione';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_RNA_STATI_ELAB"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_RNA_STATI_ELAB (
    COD_STATO_ELAB CHARACTER VARYING(2) NOT NULL,
    DESCR_STATO_ELAB CHARACTER VARYING(40) NOT NULL,
    CONSTRAINT PK_PBANDI_D_RNA_STATI_ELAB PRIMARY KEY (COD_STATO_ELAB) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_RNAWS_CONFERMA"                                    */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_T_RNAWS_CONFERMA (
    ID_CARICAMENTO NUMBER NOT NULL,
    COR CHARACTER VARYING(40) NOT NULL,
    DT_CONCESSIONE DATE NOT NULL,
    ATTO_CONCESSIONE VARCHAR2(255) NOT NULL,
    LINK_ATTO_CONCESSIONE VARCHAR2(500),
    ESITO VARCHAR(100),
    CONSTRAINT PK_PBANDI_T_RNAWS_CONFERMA PRIMARY KEY (ID_CARICAMENTO, COR) USING INDEX TABLESPACE PBANDI_IDX,
    CONSTRAINT TUC_PBANDI_T_RNAWS_CONFERMA_1 UNIQUE (COR) USING INDEX TABLESPACE PBANDI_IDX
);

COMMENT ON COLUMN PBANDI_T_RNAWS_CONFERMA.ESITO IS '0=Esito positivo 1=Esito negativo';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_W_RNA_CARIC_CONF_ESITO"                              */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_W_RNA_CARIC_CONF_ESITO (
    ID_CARICAMENTO NUMBER(8) NOT NULL,
    FILE_XML XMLTYPE,
    DT_INVIO_ESITO DATE,
    DT_RICEZIONE_CONFERMA DATE,
    DT_INSERIMENTO DATE NOT NULL,
    NOME_FILE VARCHAR2(40) NOT NULL,
    CONSTRAINT PK_PBANDI_W_RNA_CAR_CONF_ESITO PRIMARY KEY  (ID_CARICAMENTO) USING INDEX TABLESPACE PBANDI_IDX
);

COMMENT ON COLUMN PBANDI_W_RNA_CARIC_CONF_ESITO.FILE_XML IS 'File XML padre contenente n singoli aiuti per richiamare il servizio di conferma degli aiuti';

COMMENT ON COLUMN PBANDI_W_RNA_CARIC_CONF_ESITO.DT_INVIO_ESITO IS 'Data di invio esito a Finpiemonte';

COMMENT ON COLUMN PBANDI_W_RNA_CARIC_CONF_ESITO.DT_RICEZIONE_CONFERMA IS 'Data in cui ricevo l''xml di risposta da RNA';

COMMENT ON COLUMN PBANDI_W_RNA_CARIC_CONF_ESITO.DT_INSERIMENTO IS 'Data di caricamento da Finpiemonte';

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_T_RNA_PROGETTO"                                      */
/* ---------------------------------------------------------------------- */
/*
CREATE TABLE PBANDI_T_RNA_PROGETTO (
    ID_RNA_PROGETTO NUMBER(8)NOT NULL,
    CODICE_BANDO_RNA NUMBER,
    ID_PROGETTO NUMBER(8) NOT NULL,
    ID_STATO_PROGETTO NUMBER(3) NOT NULL,
    ID_CONCESSIONE_GEST VARCHAR2(60) NOT NULL,
    ID_COMP_AIUTO_GEST VARCHAR2(100) NOT NULL,
    COR INTEGER NOT NULL,
    CODICE_FISCALE_BENEFICIARIO VARCHAR2(50) NOT NULL,
    COVAR INTEGER,
    COR_COLLEGTO INTEGER,
    DT_ESITO_VALIDAZIONE DATE,
    ID_COSTO_GEST VARCHAR2(100) NOT NULL,
    ID_STRUM_AIUTO_GEST VARCHAR2(100) NOT NULL,
    ID_MODALITA_AGEVOLAZIONE NUMBER(3) NOT NULL,
    IMPORTO_NOMINALE NUMBER(16,2) NOT NULL,
    IMPORTO_AGEVOLAZIONE NUMBER(16,2) NOT NULL,
    INTENSITA_AIUTO NUMBER(16,2) NOT NULL,
    DT_RICH_ANNULLAMENTO DATE,
    ESITO_REG VARCHAR2(40),
    ESITO_CONFERMA_REG VARCHAR2(40),
    DT_ESITO DATE,
    DT_CONFERMA_REG DATE,
    ID_PROVVEDIMENTO NUMBER(8),
    ID_CARICAMENTO NUMBER(8),
    COD_TIPO_VARIAZIONE VARCHAR2(2),
    ID_RICHIESTA_RNA NUMBER(8) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    CONSTRAINT PK_PBANDI_T_RNA_PROGETTO PRIMARY KEY (ID_RNA_PROGETTO) USING INDEX TABLESPACE PBANDI_IDX
);

CREATE INDEX IE_PBANDI_T_RNA_PROGETTO_1 ON PBANDI_T_RNA_PROGETTO (ID_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_PROGETTO_2 ON PBANDI_T_RNA_PROGETTO (ID_UTENTE_INS ASC) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_PROGETTO_3 ON PBANDI_T_RNA_PROGETTO (ID_UTENTE_AGG ASC) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_PROGETTO_4 ON PBANDI_T_RNA_PROGETTO (ID_MODALITA_AGEVOLAZIONE) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_PROGETTO_5 ON PBANDI_T_RNA_PROGETTO (COD_TIPO_VARIAZIONE) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_PROGETTO_6 ON PBANDI_T_RNA_PROGETTO (ID_STATO_PROGETTO) TABLESPACE PBANDI_IDX;

CREATE INDEX IE_PBANDI_T_RNA_PROGETTO_7 ON PBANDI_T_RNA_PROGETTO (ID_CARICAMENTO) TABLESPACE PBANDI_IDX;
*/


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_RNA_FORME_GIURIDICHE"                              */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_RNA_FORME_GIURIDICHE (
    COD_FORMA_GIURIDICA_RNA CHAR(2) NOT NULL,
    DESC_FORMA_GIURIDICA_RNA VARCHAR2(200) NOT NULL,
    CONSTRAINT PK_PBANDI_D_RNA_FORME_GIURIDIC PRIMARY KEY (COD_FORMA_GIURIDICA_RNA) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* ALTER table "PBANDI_D_FORMA_GIURIDICA"                                   */
/* ---------------------------------------------------------------------- */
ALTER TABLE PBANDI_D_FORMA_GIURIDICA ADD (
    COD_FORMA_GIURIDICA_RNA CHAR(2));

CREATE INDEX IE_PBANDI_D_FORMA_GIURIDICA2 ON PBANDI.PBANDI_D_FORMA_GIURIDICA (COD_FORMA_GIURIDICA_RNA) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* ALTER table "PBANDI_D_NAZIONE"                                           */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_D_NAZIONE ADD(
    COD_NAZIONE_RNA VARCHAR2(3));

CREATE INDEX IE_PBANDI_D_NAZIONE_3 ON PBANDI.PBANDI_D_NAZIONE (COD_NAZIONE_RNA) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* ALTER table "PBANDI_D_COMUNE"                                            */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_D_COMUNE ADD (
    COD_COMUNE_RNA VARCHAR2(6));

CREATE INDEX IE_PBANDI_D_COMUNE_4 ON PBANDI_D_COMUNE (COD_COMUNE_RNA) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_RNA_TIPO_VARIAZIONE"                               */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_RNA_TIPO_VARIAZIONE (
    COD_TIPO_VARIAZIONE VARCHAR2(2) NOT NULL,
    DESC_TIPO_VARIAZIONE VARCHAR2(50) NOT NULL,
	COD_TIPO_PACCHETTO VARCHAR2(2),
    CONSTRAINT PK_PBANDI_D_RNA_TIPO_VARIAZ PRIMARY KEY (COD_TIPO_VARIAZIONE) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_RNA_TIPO_SOGG_BENEF"                               */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_RNA_TIPO_SOGG_BENEF (
    ID_TIPO_SOGGETTO_RNA NUMBER(3) NOT NULL,
    DESC_TIPO_SOGGETTO_RNA VARCHAR2(200) NOT NULL,
    NOTE VARCHAR2(200),
    CONSTRAINT PK_PBANDI_D_RNA_TIPO_SOGG_BEN PRIMARY KEY (ID_TIPO_SOGGETTO_RNA) USING INDEX TABLESPACE PBANDI_IDX
);


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_RNA_DIMENSION_IMPRESA"                             */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_RNA_DIMENSION_IMPRESA (
    ID_DIMENSIONE_IMPRESA_RNA NUMBER(3) NOT NULL,
    DESC_DIMENSIONE_IMPRESA_RNA VARCHAR2(50) NOT NULL,
    NOTA VARCHAR2(200),
    CONSTRAINT PK_PBANDI_D_RNA_DIMENSION_IMPR PRIMARY KEY (ID_DIMENSIONE_IMPRESA_RNA) USING INDEX TABLESPACE PBANDI_IDX
);

/* ---------------------------------------------------------------------- */
/* ALTER table "PBANDI_D_DIMENSIONE_IMPRESA"                                */
/* ---------------------------------------------------------------------- */

ALTER TABLE PBANDI_D_DIMENSIONE_IMPRESA ADD (
    ID_DIMENSIONE_IMPRESA_RNA NUMBER(3));

CREATE INDEX IE_PBANDI_D_DIMENSION_IMPR_2 ON PBANDI_D_DIMENSIONE_IMPRESA (ID_DIMENSIONE_IMPRESA_RNA) TABLESPACE PBANDI_IDX;

/* ---------------------------------------------------------------------- */
/* Foreign key constraints                                                */
/* ---------------------------------------------------------------------- */
/*
ALTER TABLE PBANDI_W_RNA_CARICAMENTO_XML ADD CONSTRAINT FK_PBANDI_D_RNA_BANDI_01 
    FOREIGN KEY (COD_BANDO) REFERENCES PBANDI_D_RNA_BANDI (COD_BANDO);

*/

ALTER TABLE PBANDI_W_RNA_CARICAMENTO_XML ADD CONSTRAINT FK_PBANDI_T_RNAWS_INVIO_XML_01 
    FOREIGN KEY (ID_ELAB, NUM_FILE) REFERENCES PBANDI_T_RNAWS_INVIO_XML (ID_ELAB,NUM_FILE);

/*
ALTER TABLE PBANDI_W_RNAWS_INVIO_ELAB ADD CONSTRAINT FK_PBANDI_D_RNA_BANDI_02 
    FOREIGN KEY (COD_BANDO) REFERENCES PBANDI_D_RNA_BANDI (COD_BANDO);
*/

ALTER TABLE PBANDI_W_RNAWS_INVIO_ELAB ADD CONSTRAINT FK_PBANDI_D_RNA_STATI_ELAB_01 
    FOREIGN KEY (COD_STATO_ELAB) REFERENCES PBANDI_D_RNA_STATI_ELAB (COD_STATO_ELAB);

ALTER TABLE PBANDI_T_RNAWS_INVIO_XML ADD CONSTRAINT FK_PBANDI_W_RNAWS_INV_ELAB_01 
    FOREIGN KEY (ID_ELAB) REFERENCES PBANDI_W_RNAWS_INVIO_ELAB (ID_ELAB);

ALTER TABLE PBANDI_T_RNAWS_INVIO_XML ADD CONSTRAINT FK_PBANDI_D_RNA_TIPO_VARIAZ_02 
    FOREIGN KEY (COD_TIPO_VARIAZIONE) REFERENCES PBANDI_D_RNA_TIPO_VARIAZIONE (COD_TIPO_VARIAZIONE);

ALTER TABLE PBANDI_T_RNAWS_CONFERMA ADD CONSTRAINT FK_PBANDI_W_CAR_CONF_ESITO_01 
    FOREIGN KEY (ID_CARICAMENTO) REFERENCES PBANDI_W_RNA_CARIC_CONF_ESITO (ID_CARICAMENTO);

ALTER TABLE PBANDI_D_FORMA_GIURIDICA ADD CONSTRAINT FK_PBANDI_D_FORMA_GIURIDICA_08 
    FOREIGN KEY (COD_FORMA_GIURIDICA_RNA) REFERENCES PBANDI_D_RNA_FORME_GIURIDICHE (COD_FORMA_GIURIDICA_RNA);

ALTER TABLE PBANDI_T_RNA_PROGETTO ADD CONSTRAINT FK_PBANDI_D_STATO_PROGETTO_05 
    FOREIGN KEY (ID_STATO_PROGETTO) REFERENCES PBANDI_D_STATO_PROGETTO (ID_STATO_PROGETTO);

/*
ALTER TABLE PBANDI_T_RNA_PROGETTO ADD CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_14 
    FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE) REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE);


ALTER TABLE PBANDI_T_RNA_PROGETTO ADD CONSTRAINT FK_PBANDI_T_PROGETTO_87 
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO);
*/
ALTER TABLE PBANDI_T_RNA_PROGETTO ADD CONSTRAINT FK_PBANDI_W_RNA_CARICAM_XML_01 
    FOREIGN KEY (ID_CARICAMENTO) REFERENCES PBANDI_W_RNA_CARICAMENTO_XML (ID_CARICAMENTO);

ALTER TABLE PBANDI_T_RNA_PROGETTO ADD CONSTRAINT FK_PBANDI_D_RNA_TIPO_VARIAZ_01 
    FOREIGN KEY (COD_TIPO_VARIAZIONE) REFERENCES PBANDI_D_RNA_TIPO_VARIAZIONE (COD_TIPO_VARIAZIONE);

ALTER TABLE PBANDI_D_DIMENSIONE_IMPRESA ADD CONSTRAINT FK_PBANDI_D_RNA_DIM_IMPR_01 
    FOREIGN KEY (ID_DIMENSIONE_IMPRESA_RNA) REFERENCES PBANDI_D_RNA_DIMENSION_IMPRESA (ID_DIMENSIONE_IMPRESA_RNA);

/*
ALTER TABLE PBANDI_T_RNA_PROGETTO ADD (
  CONSTRAINT FK_PBANDI_T_UTENTE_407 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI_T_UTENTE (ID_UTENTE),
  CONSTRAINT FK_PBANDI_T_UTENTE_408 
 FOREIGN KEY (ID_UTENTE_AGG) 
 REFERENCES PBANDI_T_UTENTE (ID_UTENTE));
*/

--PBANDI_D_RNA_FORME_GIURIDICHE
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AA', 'SOCIETA'' IN ACCOMANDITA PER AZIONI');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AC', 'ASSOCIAZIONE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AE', '"SOCIETA'' CONSORTILE IN ACCOMANDITA SEMPLICE                "');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AF', 'ALTRE FORME');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AI', 'ASSOCIAZIONE IMPRESA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AL', 'AZIENDA SPECIALE DI ENTE LOCALE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AM', 'AZIENDA MUNICIPALE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AN', 'SOCIETA'' CONSORTILE IN NOME COLLETTIVO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AP', 'AZIENDA PROVINCIALE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AR', 'AZIENDA REGIONALE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AS', 'SOCIETA'' IN ACCOMANDITA SEMPLICE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AT', 'AZIENDA AUTONOMA STATALE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AU', 'SOCIETA''  PER AZIONI CON SOCIO UNICO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('AZ', 'AZIENDA SPECIALE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('CC', 'CONSORZIO CON ATTIVITA'' ESTERNA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('CE', 'COMUNIONE EREDITARIA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('CF', 'CONSORZIO FIDI');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('CI', 'SOCIETA'' COOPERATIVA A RESPONSABILITA ILLIMITATA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('CL', 'SOCIETA'' COOPERATIVA A RESPONSABILITA LIMITATA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('CM', 'CONSORZIO MUNICIPALE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('CN', 'SOCIETA'' CONSORTILE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('CO', 'CONSORZIO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('CR', 'CONSORZIO INTERCOMUNALE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('CS', 'CONSORZIO SENZA ATTIVITA'' ESTERNA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('CZ', 'CONSORZIO DI CUI AL DLGS 267/2000');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('DI', 'IMPRESA INDIVIDUALE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('EC', 'ENTE PUBBLICO COMMERCIALE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('ED', 'ENTE DIRITTO PUBBLICO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('EE', 'ENTE ECCLESIASTICO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('EI', 'ENTE IMPRESA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('EL', 'ENTE SOCIALE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('EM', 'ENTE MORALE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('EN', 'ENTE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('EP', 'ENTE PUBBLICO ECONOMICO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('ER', 'ENTE ECCLESIASTICO CIVILMENTE RICONOSCIUTO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('ES', 'ENTE DI CUI ALLA L.R. 21-12-93, N.88');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('FI', 'FONDAZIONE IMPRESA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('FO', 'FONDAZIONE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('GE', 'GRUPPO EUROPEO DI INTERESSE ECONOMICO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('IC', 'ISTITUTO DI CREDITO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('ID', 'ISTITUTO DI CREDITO DI DIRITTO PUBBLICO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('IF', 'IMPRESA FAMILIARE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('IR', 'ISTITUTO RELIGIOSO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('LL', 'AZIENDA SPECIALE DI CUI AL DLGS 267/2000');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('MA', 'MUTUA ASSICURAZIONE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('OC', 'SOCIETA'' COOPERATIVA CONSORTILE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('OO', 'COOPERATIVA SOCIALE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('OS', 'SOCIETA'' CONSORTILE COOPERATIVA A RESPONSABILITA'' LIMITATA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('PA', 'ASSOCIAZIONE IN PARTECIPAZIONE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('PC', 'PICCOLA SOCIETA'' COOPERATIVA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('PF', 'PERSONA FISICA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('PS', 'PICCOLA SOCIETA'' COOPERATIVA A RESPONSABILITA'' LIMITATA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('RC', 'CONTRATTO DI RETE DOTATO DI SOGGETTIVITA'' GIURIDICA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('RR', 'SOCIETA'' A RESPONSABILITA'' LIMITATA A CAPITALE RIDOTTO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('RS', 'SOCIETA'' A RESPONSABILITA'' LIMITATA SEMPLIFICATA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SA', 'SOCIETA'' ANONIMA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SC', 'SOCIETA'' COOPERATIVA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SD', 'SOCIETA'' EUROPEA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SE', 'SOCIETA'' SEMPLICE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SF', 'SOCIETA'' DI FATTO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SG', 'SOCIETA'' COOPERATIVA EUROPEA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SI', 'SOCIETA'' IRREGOLARE');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SL', 'SOCIETA'' CONSORTILE A RESPONSABILITA'' LIMITATA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SM', 'SOCIETA'' DI MUTUO SOCCORSO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SN', 'SOCIETA'' IN NOME COLLETTIVO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SO', 'SOCIETA'' CONSORTILE PER AZIONI');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SP', 'SOCIETA'' PER AZIONI');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SR', 'SOCIETA'' A RESPONSABILITA'' LIMITATA');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SS', 'SOCIETA'' COSTITUITA IN BASE A LEGGI DI ALTRO STATO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('ST', 'SOGGETTO ESTERO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SU', 'SOCIETA'' A RESPONSABILITA'' LIMITATA CON UNICO SOCIO');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SV', 'SOCIETA'' TRA PROFESSIONISTI');
Insert into PBANDI_D_RNA_FORME_GIURIDICHE
   (COD_FORMA_GIURIDICA_RNA, DESC_FORMA_GIURIDICA_RNA)
 Values
   ('SZ', 'SOCIETA'' NON PREVISTA DALLA LEGISLAZIONE ITALIANA');
COMMIT;

--PBANDI_D_FORMA_GIURIDICA
MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  5 as "ID_FORMA_GIURIDICA",
  '1.02.10' as "COD_FORMA_GIURIDICA",
  'Societa'' semplice' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  'S.s.' as "COD_GEFO",
  'Società  di persone' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'SE' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  6 as "ID_FORMA_GIURIDICA",
  '1.02.20' as "COD_FORMA_GIURIDICA",
  'Societa'' in nome collettivo' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  'S.n.c.' as "COD_GEFO",
  'Società  di persone' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'SN' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  7 as "ID_FORMA_GIURIDICA",
  '1.02.30' as "COD_FORMA_GIURIDICA",
  'Societa'' in accomandita semplice' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  'S.a.s.' as "COD_GEFO",
  'Società  di persone' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'AS' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  9 as "ID_FORMA_GIURIDICA",
  '1.02.50' as "COD_FORMA_GIURIDICA",
  'Societa'' di fatto o irregolare, comunione ereditaria' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  'S.d.f.' as "COD_GEFO",
  'Società  di persone' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'SF' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  10 as "ID_FORMA_GIURIDICA",
  '1.03.10' as "COD_FORMA_GIURIDICA",
  'Societa'' per azioni' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  'S.p.a.' as "COD_GEFO",
  'Società  di capitali' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'SP' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  11 as "ID_FORMA_GIURIDICA",
  '1.03.20' as "COD_FORMA_GIURIDICA",
  'Societa'' a responsabilita'' limitata' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  'S.r.l.' as "COD_GEFO",
  'Società  di capitali' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'SR' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  12 as "ID_FORMA_GIURIDICA",
  '1.03.30' as "COD_FORMA_GIURIDICA",
  'Societa'' a responsabilita'' limitata con un unico socio' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  NULL as "COD_GEFO",
  'Società  di capitali' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'SU' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  13 as "ID_FORMA_GIURIDICA",
  '1.03.40' as "COD_FORMA_GIURIDICA",
  'Societa'' in accomandita per azioni' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  'S.a.p.a.' as "COD_GEFO",
  'Società  di capitali' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'AA' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  16 as "ID_FORMA_GIURIDICA",
  '1.04.30' as "COD_FORMA_GIURIDICA",
  'Societa'' cooperativa sociale' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  'S.c.' as "COD_GEFO",
  'Società  Cooperativa' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'OO' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  17 as "ID_FORMA_GIURIDICA",
  '1.04.40' as "COD_FORMA_GIURIDICA",
  'Societa'' di mutua assicurazione' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  NULL as "COD_GEFO",
  'Società  Cooperativa' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'MA' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  19 as "ID_FORMA_GIURIDICA",
  '1.05.20' as "COD_FORMA_GIURIDICA",
  'Societa'' consortile' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  NULL as "COD_GEFO",
  'Consorzio di diritto privato ed altre forme di cooperazione fra imprese' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'CN' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  21 as "ID_FORMA_GIURIDICA",
  '1.05.40' as "COD_FORMA_GIURIDICA",
  'Gruppo europeo di interesse economico' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  NULL as "COD_GEFO",
  'Consorzio di diritto privato ed altre forme di cooperazione fra imprese' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'GE' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  22 as "ID_FORMA_GIURIDICA",
  '1.06.10' as "COD_FORMA_GIURIDICA",
  'Ente pubblico economico' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  'Ente p.' as "COD_GEFO",
  'Ente pubblico economico, azienda speciale e azienda pubblica di servizi' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'EP' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  23 as "ID_FORMA_GIURIDICA",
  '1.06.20' as "COD_FORMA_GIURIDICA",
  'Azienda speciale ai sensi del t.u. 267/2000' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  NULL as "COD_GEFO",
  'Ente pubblico economico, azienda speciale e azienda pubblica di servizi' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'LL' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  25 as "ID_FORMA_GIURIDICA",
  '1.07.10' as "COD_FORMA_GIURIDICA",
  'Associazione riconosciuta' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  'Ass.' as "COD_GEFO",
  'Ente privato con personalità  giuridica' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'AC' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  26 as "ID_FORMA_GIURIDICA",
  '1.07.20' as "COD_FORMA_GIURIDICA",
  'Fondazione (esclusa fondazione bancaria)' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  'FON' as "COD_GEFO",
  'Ente privato con personalità  giuridica' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'FO' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  28 as "ID_FORMA_GIURIDICA",
  '1.07.40' as "COD_FORMA_GIURIDICA",
  'Ente ecclesiastico' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  NULL as "COD_GEFO",
  'Ente privato con personalità  giuridica' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'EE' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  29 as "ID_FORMA_GIURIDICA",
  '1.07.50' as "COD_FORMA_GIURIDICA",
  'Societa'' di mutuo soccorso' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  NULL as "COD_GEFO",
  'Ente privato con personalità  giuridica' as "DIVISIONE",
  'Forme disciplinate dal diritto privato' as "SEZIONE",
  'S' as "FLAG_PRIVATO",
  'SM' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  42 as "ID_FORMA_GIURIDICA",
  '2.04.10' as "COD_FORMA_GIURIDICA",
  'Regione' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  NULL as "COD_GEFO",
  'Regione e autonomia locale' as "DIVISIONE",
  'Forme disciplinate dal diritto pubblico' as "SEZIONE",
  'N' as "FLAG_PRIVATO",
  'AR' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  43 as "ID_FORMA_GIURIDICA",
  '2.04.20' as "COD_FORMA_GIURIDICA",
  'Provincia' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  NULL as "COD_GEFO",
  'Regione e autonomia locale' as "DIVISIONE",
  'Forme disciplinate dal diritto pubblico' as "SEZIONE",
  'N' as "FLAG_PRIVATO",
  'AP' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  44 as "ID_FORMA_GIURIDICA",
  '2.04.30' as "COD_FORMA_GIURIDICA",
  'Comune' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  NULL as "COD_GEFO",
  'Regione e autonomia locale' as "DIVISIONE",
  'Forme disciplinate dal diritto pubblico' as "SEZIONE",
  'N' as "FLAG_PRIVATO",
  'AM' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

MERGE INTO PBANDI_D_FORMA_GIURIDICA A USING
 (SELECT
  47 as "ID_FORMA_GIURIDICA",
  '2.04.60' as "COD_FORMA_GIURIDICA",
  'Citta'' metropolitana' as "DESC_FORMA_GIURIDICA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  NULL as "COD_GEFO",
  'Regione e autonomia locale' as "DIVISIONE",
  'Forme disciplinate dal diritto pubblico' as "SEZIONE",
  'N' as "FLAG_PRIVATO",
  'CM' as "COD_FORMA_GIURIDICA_RNA"
  FROM DUAL) B
ON (A.ID_FORMA_GIURIDICA = B.ID_FORMA_GIURIDICA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_FORMA_GIURIDICA, COD_FORMA_GIURIDICA, DESC_FORMA_GIURIDICA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, DIVISIONE, SEZIONE, FLAG_PRIVATO, COD_FORMA_GIURIDICA_RNA)
VALUES (
  B.ID_FORMA_GIURIDICA, B.COD_FORMA_GIURIDICA, B.DESC_FORMA_GIURIDICA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.DIVISIONE, B.SEZIONE, B.FLAG_PRIVATO, B.COD_FORMA_GIURIDICA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.COD_FORMA_GIURIDICA_RNA = B.COD_FORMA_GIURIDICA_RNA;

COMMIT;


--PBANDI_D_RNA_TIPO_VARIAZIONE
Insert into PBANDI_D_RNA_TIPO_VARIAZIONE
   (COD_TIPO_VARIAZIONE, DESC_TIPO_VARIAZIONE)
 Values
   ('AV', 'Annullamento variazione aiuto');
Insert into PBANDI_D_RNA_TIPO_VARIAZIONE
   (COD_TIPO_VARIAZIONE, DESC_TIPO_VARIAZIONE)
 Values
   ('A2', 'Conferma atto variazione');
Insert into PBANDI_D_RNA_TIPO_VARIAZIONE
   (COD_TIPO_VARIAZIONE, DESC_TIPO_VARIAZIONE)
 Values
   ('B1', 'Cambio beneficiario');
Insert into PBANDI_D_RNA_TIPO_VARIAZIONE
   (COD_TIPO_VARIAZIONE, DESC_TIPO_VARIAZIONE)
 Values
   ('I1', 'Rideterminazione importo');
Insert into PBANDI_D_RNA_TIPO_VARIAZIONE
   (COD_TIPO_VARIAZIONE, DESC_TIPO_VARIAZIONE)
 Values
   ('I2', 'Chiusura progetto');
Insert into PBANDI_D_RNA_TIPO_VARIAZIONE
   (COD_TIPO_VARIAZIONE, DESC_TIPO_VARIAZIONE)
 Values
   ('I3', 'Cancellazione aiuto');
COMMIT;

--PBANDI_D_RNA_TIPO_SOGG_BENEF
Insert into PBANDI_D_RNA_TIPO_SOGG_BENEF
   (ID_TIPO_SOGGETTO_RNA, DESC_TIPO_SOGGETTO_RNA)
 Values
   (1, 'Impresa iscritta al Registro Imprese (con sede legale o sede secondaria in Italia)');
Insert into PBANDI_D_RNA_TIPO_SOGG_BENEF
   (ID_TIPO_SOGGETTO_RNA, DESC_TIPO_SOGGETTO_RNA)
 Values
   (3, 'Soggetto Estero senza sede secondaria in Italia');
Insert into PBANDI_D_RNA_TIPO_SOGG_BENEF
   (ID_TIPO_SOGGETTO_RNA, DESC_TIPO_SOGGETTO_RNA)
 Values
   (4, 'Soggetto pubblico');
Insert into PBANDI_D_RNA_TIPO_SOGG_BENEF
   (ID_TIPO_SOGGETTO_RNA, DESC_TIPO_SOGGETTO_RNA)
 Values
   (5, 'Professionista');
Insert into PBANDI_D_RNA_TIPO_SOGG_BENEF
   (ID_TIPO_SOGGETTO_RNA, DESC_TIPO_SOGGETTO_RNA, NOTE)
 Values
   (6, 'Altro soggetto (non iscrivibile o non ancora iscritto al Registro Imprese)', 'Valorizzazione non ammessa in fase di inserimento (solo in visualizzazione per aiuti già registrati)');
Insert into PBANDI_D_RNA_TIPO_SOGG_BENEF
   (ID_TIPO_SOGGETTO_RNA, DESC_TIPO_SOGGETTO_RNA)
 Values
   (7, 'Soggetto da iscrivere al Registro Imprese');
Insert into PBANDI_D_RNA_TIPO_SOGG_BENEF
   (ID_TIPO_SOGGETTO_RNA, DESC_TIPO_SOGGETTO_RNA)
 Values
   (8, 'Soggetto non iscrivibile al Registro Imprese');
Insert into PBANDI_D_RNA_TIPO_SOGG_BENEF
   (ID_TIPO_SOGGETTO_RNA, DESC_TIPO_SOGGETTO_RNA, NOTE)
 Values
   (9, 'Soggetto non classificato (Dati certificati dall’Ente competente)', 'Riservato A.d.E. - solo per il servizio RegistraAiutoAutomatico');
COMMIT;

--PBANDI_D_RNA_DIMENSION_IMPRESA
Insert into PBANDI_D_RNA_DIMENSION_IMPRESA
   (ID_DIMENSIONE_IMPRESA_RNA, DESC_DIMENSIONE_IMPRESA_RNA)
 Values
   (1, 'Microimpresa');
Insert into PBANDI_D_RNA_DIMENSION_IMPRESA
   (ID_DIMENSIONE_IMPRESA_RNA, DESC_DIMENSIONE_IMPRESA_RNA, NOTA)
 Values
   (2, 'Piccola impresa', 'Solo per la gestione degli aiuti individuali (per la gestione delle misure, selezionare entrambe le dimensioni 1 "Microimpresa" e 11  "Piccola Impresa (escluse Microimprese)")');
Insert into PBANDI_D_RNA_DIMENSION_IMPRESA
   (ID_DIMENSIONE_IMPRESA_RNA, DESC_DIMENSIONE_IMPRESA_RNA)
 Values
   (3, 'Media impresa');
Insert into PBANDI_D_RNA_DIMENSION_IMPRESA
   (ID_DIMENSIONE_IMPRESA_RNA, DESC_DIMENSIONE_IMPRESA_RNA)
 Values
   (4, 'Grande impresa');
Insert into PBANDI_D_RNA_DIMENSION_IMPRESA
   (ID_DIMENSIONE_IMPRESA_RNA, DESC_DIMENSIONE_IMPRESA_RNA, NOTA)
 Values
   (9, 'Non classificabile', 'Solo per il tipo soggetto beneficiario uguale a 4 - "Soggetto pubblico"');
Insert into PBANDI_D_RNA_DIMENSION_IMPRESA
   (ID_DIMENSIONE_IMPRESA_RNA, DESC_DIMENSIONE_IMPRESA_RNA)
 Values
   (11, 'Piccola impresa (escluse microimprese)');
Insert into PBANDI_D_RNA_DIMENSION_IMPRESA
   (ID_DIMENSIONE_IMPRESA_RNA, DESC_DIMENSIONE_IMPRESA_RNA, NOTA)
 Values
   (12, 'Non classificata', 'Solo per il tipo soggetto beneficiario uguale a 9 - "Soggetto non classificato (Dati certificati dall’Ente competente)"');
COMMIT;

--PBANDI_D_DIMENSIONE_IMPRESA
MERGE INTO PBANDI_D_DIMENSIONE_IMPRESA A USING
 (SELECT
  1 as "ID_DIMENSIONE_IMPRESA",
  'P' as "COD_DIMENSIONE_IMPRESA",
  'Piccola' as "DESC_DIMENSIONE_IMPRESA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  '1' as "COD_GEFO",
  2 as "ID_DIMENSIONE_IMPRESA_RNA"
  FROM DUAL) B
ON (A.ID_DIMENSIONE_IMPRESA = B.ID_DIMENSIONE_IMPRESA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_DIMENSIONE_IMPRESA, COD_DIMENSIONE_IMPRESA, DESC_DIMENSIONE_IMPRESA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, ID_DIMENSIONE_IMPRESA_RNA)
VALUES (
  B.ID_DIMENSIONE_IMPRESA, B.COD_DIMENSIONE_IMPRESA, B.DESC_DIMENSIONE_IMPRESA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.ID_DIMENSIONE_IMPRESA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_DIMENSIONE_IMPRESA_RNA = B.ID_DIMENSIONE_IMPRESA_RNA;

MERGE INTO PBANDI_D_DIMENSIONE_IMPRESA A USING
 (SELECT
  2 as "ID_DIMENSIONE_IMPRESA",
  'M' as "COD_DIMENSIONE_IMPRESA",
  'Media' as "DESC_DIMENSIONE_IMPRESA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  '2' as "COD_GEFO",
  3 as "ID_DIMENSIONE_IMPRESA_RNA"
  FROM DUAL) B
ON (A.ID_DIMENSIONE_IMPRESA = B.ID_DIMENSIONE_IMPRESA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_DIMENSIONE_IMPRESA, COD_DIMENSIONE_IMPRESA, DESC_DIMENSIONE_IMPRESA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, ID_DIMENSIONE_IMPRESA_RNA)
VALUES (
  B.ID_DIMENSIONE_IMPRESA, B.COD_DIMENSIONE_IMPRESA, B.DESC_DIMENSIONE_IMPRESA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.ID_DIMENSIONE_IMPRESA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_DIMENSIONE_IMPRESA_RNA = B.ID_DIMENSIONE_IMPRESA_RNA;

MERGE INTO PBANDI_D_DIMENSIONE_IMPRESA A USING
 (SELECT
  3 as "ID_DIMENSIONE_IMPRESA",
  'I' as "COD_DIMENSIONE_IMPRESA",
  'Micro' as "DESC_DIMENSIONE_IMPRESA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  '4' as "COD_GEFO",
  1 as "ID_DIMENSIONE_IMPRESA_RNA"
  FROM DUAL) B
ON (A.ID_DIMENSIONE_IMPRESA = B.ID_DIMENSIONE_IMPRESA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_DIMENSIONE_IMPRESA, COD_DIMENSIONE_IMPRESA, DESC_DIMENSIONE_IMPRESA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, ID_DIMENSIONE_IMPRESA_RNA)
VALUES (
  B.ID_DIMENSIONE_IMPRESA, B.COD_DIMENSIONE_IMPRESA, B.DESC_DIMENSIONE_IMPRESA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.ID_DIMENSIONE_IMPRESA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_DIMENSIONE_IMPRESA_RNA = B.ID_DIMENSIONE_IMPRESA_RNA;

MERGE INTO PBANDI_D_DIMENSIONE_IMPRESA A USING
 (SELECT
  4 as "ID_DIMENSIONE_IMPRESA",
  'G' as "COD_DIMENSIONE_IMPRESA",
  'Grande' as "DESC_DIMENSIONE_IMPRESA",
  TO_DATE('01/01/2009 00:00:00', 'MM/DD/YYYY HH24:MI:SS') as "DT_INIZIO_VALIDITA",
  NULL as "DT_FINE_VALIDITA",
  '3' as "COD_GEFO",
  4 as "ID_DIMENSIONE_IMPRESA_RNA"
  FROM DUAL) B
ON (A.ID_DIMENSIONE_IMPRESA = B.ID_DIMENSIONE_IMPRESA)
WHEN NOT MATCHED THEN 
INSERT (
  ID_DIMENSIONE_IMPRESA, COD_DIMENSIONE_IMPRESA, DESC_DIMENSIONE_IMPRESA, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA, 
  COD_GEFO, ID_DIMENSIONE_IMPRESA_RNA)
VALUES (
  B.ID_DIMENSIONE_IMPRESA, B.COD_DIMENSIONE_IMPRESA, B.DESC_DIMENSIONE_IMPRESA, B.DT_INIZIO_VALIDITA, B.DT_FINE_VALIDITA, 
  B.COD_GEFO, B.ID_DIMENSIONE_IMPRESA_RNA)
WHEN MATCHED THEN
UPDATE SET 
  A.ID_DIMENSIONE_IMPRESA_RNA = B.ID_DIMENSIONE_IMPRESA_RNA;

COMMIT;

Insert into PBANDI_D_RNA_STATI_ELAB
   (COD_STATO_ELAB, DESCR_STATO_ELAB)
 Values
   ('10', 'Da elaborare');
Insert into PBANDI_D_RNA_STATI_ELAB
   (COD_STATO_ELAB, DESCR_STATO_ELAB)
 Values
   ('20', 'In elaborazione');
Insert into PBANDI_D_RNA_STATI_ELAB
   (COD_STATO_ELAB, DESCR_STATO_ELAB)
 Values
   ('25', 'Registrata in attesa di esito');
Insert into PBANDI_D_RNA_STATI_ELAB
   (COD_STATO_ELAB, DESCR_STATO_ELAB)
 Values
   ('21', 'Registrazione incompleta');
Insert into PBANDI_D_RNA_STATI_ELAB
   (COD_STATO_ELAB, DESCR_STATO_ELAB)
 Values
   ('30', 'Registrata con esito');
COMMIT;


--PBANDI_C_COSTANTI
Insert into PBANDI_C_COSTANTI
   (ATTRIBUTO, VALORE)
 Values
   ('RNA_MAX_NUM_FILE', '100');
Insert into PBANDI_C_COSTANTI
   (ATTRIBUTO, VALORE)
 Values
   ('RNA_NUM_MAX_AIUTI_GIORNALIERO', '1000');
COMMIT;


-- ALTER TABLE ADD COLUMNS PER DISALLINEAMENTO
--ALTER TABLE PBANDI_D_VOCE_DI_SPESA ADD FLAG_SPESE_GESTIONE VARCHAR2(1);

--ALTER TABLE PBANDI_T_DATI_PROGETTO_MONIT ADD ID_PROGETTO_FSC NUMBER(8);

--PBANDI_D_MODALITA_AGEVOLAZIONE
ALTER TABLE PBANDI.PBANDI_D_MODALITA_AGEVOLAZIONE
 ADD (ID_MODALITA_AGEVOLAZIONE_RIF  NUMBER(3));

--PBANDI_R_PLACEHOLDER_NOTIFICA
ALTER TABLE PBANDI.PBANDI_R_PLACEHOLDER_NOTIFICA DROP  CONSTRAINT FK_PBANDI_D_TEMPLATE_MODIFICA;

ALTER TABLE PBANDI.PBANDI_R_PLACEHOLDER_NOTIFICA ADD (
  CONSTRAINT FK_PBANDI_D_TEMPLATE_NOTIFICA 
 FOREIGN KEY (ID_TEMPLATE_NOTIFICA) 
 REFERENCES PBANDI.PBANDI_D_TEMPLATE_NOTIFICA (ID_TEMPLATE_NOTIFICA));



/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_FASCICOLO_ACTA                                  */
/* ---------------------------------------------------------------------- */

CREATE TABLE PBANDI_D_FASCICOLO_ACTA (
    ID_FASCICOLO_ACTA NUMBER(3) NOT NULL,
    DESC_FASCICOLO VARCHAR2(255) NOT NULL,
	--ID_TIPO_DOCUMENTO_INDEX NUMBER(3) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_D_FASCICOLO_ACTA PRIMARY KEY (ID_FASCICOLO_ACTA) USING INDEX TABLESPACE PBANDI_IDX
);





/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_FASC_ACTA_TIP_DOC_IDX"                             */
/* Associazione fascicoli a tipo documento index                                          */
/* ---------------------------------------------------------------------- */
CREATE TABLE PBANDI_R_FASC_ACTA_TIP_DOC_IDX (
    ID_FASCICOLO_ACTA NUMBER(3) NOT NULL,
    ID_TIPO_DOCUMENTO_INDEX NUMBER(3) NOT NULL,
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_R_SOG_TIP_ANA_EN_COM PRIMARY KEY (ID_FASCICOLO_ACTA, ID_TIPO_DOCUMENTO_INDEX) USING INDEX TABLESPACE PBANDI_IDX
);

COMMENT ON TABLE PBANDI_R_FASC_ACTA_TIP_DOC_IDX IS 'Associazione fascicoli a tipo documento index';

CREATE UNIQUE INDEX IE1_PBANDI_R_FASC_AC_TP_DOC_IX ON PBANDI_R_FASC_ACTA_TIP_DOC_IDX (ID_TIPO_DOCUMENTO_INDEX) TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_R_FASC_ACTA_TIP_DOC_IDX ADD CONSTRAINT FK_PBANDI_C_TIPO_DOC_INDEX_09
    FOREIGN KEY (ID_TIPO_DOCUMENTO_INDEX) REFERENCES PBANDI_C_TIPO_DOCUMENTO_INDEX (ID_TIPO_DOCUMENTO_INDEX);

ALTER TABLE PBANDI_R_FASC_ACTA_TIP_DOC_IDX ADD CONSTRAINT FK_PBANDI_D_FASCICOLO_ACTA_01
    FOREIGN KEY (ID_FASCICOLO_ACTA) REFERENCES PBANDI_D_FASCICOLO_ACTA (ID_FASCICOLO_ACTA);


--PBANDI_D_LINEA_DI_INTERVENTO
/*
ALTER TABLE PBANDI_D_LINEA_DI_INTERVENTO
 DROP  CONSTRAINT CHK_FLAG_CAMPION_RILEV;

ALTER TABLE PBANDI_D_LINEA_DI_INTERVENTO ADD (
  CONSTRAINT CHK_FLAG_CAMPION_RILEV
 CHECK (FLAG_CAMPION_RILEV IN ('R', 'C','RC','FP')));

COMMENT ON COLUMN PBANDI_D_LINEA_DI_INTERVENTO.FLAG_CAMPION_RILEV IS 'R,C,RC si riferiscono ai campionamenti effettuate da ADG/ADC, FP si riferisce ai campionamenti effettuati esternament da Finpiemonte';
*/

ALTER TABLE PBANDI_D_LINEA_DI_INTERVENTO ADD FLAG_CAMPIONAMENTO_ESTERNO VARCHAR2(1);
ALTER TABLE PBANDI_D_LINEA_DI_INTERVENTO ADD CONSTRAINT CHK_FLAG_CAMPIONAMENTO_ESTERNO  CHECK (FLAG_CAMPIONAMENTO_ESTERNO='S');

Insert into PBANDI_T_UTENTE
   (ID_UTENTE, CODICE_UTENTE, ID_TIPO_ACCESSO, DT_INSERIMENTO)
 Values
   (-18, 'FINISTR', 5, TO_DATE('04/07/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

CREATE INDEX PBANDI.IDX_PBANDI_L_LOG_BATCH ON PBANDI.PBANDI_L_LOG_BATCH
(ID_PROCESSO_BATCH)
TABLESPACE PBANDI_IDX;

/*
/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_R_SOGG_TIP_ANAG_EN_COMP"                             */
/* tabella per ruolo affidamenti                                          */
/* ---------------------------------------------------------------------- */
/*
CREATE TABLE PBANDI_R_SOGG_TIP_ANAG_EN_COMP (
    ID_SOGGETTO NUMBER(8) NOT NULL,
    ID_TIPO_ANAGRAFICA NUMBER(3) NOT NULL,
    ID_ENTE_COMPETENZA NUMBER(8) NOT NULL,
    ID_UTENTE_INS NUMBER(8) NOT NULL,
    ID_UTENTE_AGG NUMBER(8),
    DT_INIZIO_VALIDITA DATE NOT NULL,
    DT_FINE_VALIDITA DATE,
    CONSTRAINT PK_PBANDI_R_SOG_TIP_ANA_EN_COM PRIMARY KEY (ID_SOGGETTO, ID_TIPO_ANAGRAFICA, ID_ENTE_COMPETENZA) USING INDEX TABLESPACE PBANDI_IDX
);

COMMENT ON TABLE PBANDI_R_SOGG_TIP_ANAG_EN_COMP IS 'Configurazione soggetti con ruolo istruttore affidamenti per ente di competenza';

CREATE INDEX IE1_PBANDI_R_SOG_TIP_AN_EN_COM ON PBANDI_R_SOGG_TIP_ANAG_EN_COMP (ID_ENTE_COMPETENZA) TABLESPACE PBANDI_IDX;


/* ---------------------------------------------------------------------- */
/* Foreign key constraints                                                */
/* ---------------------------------------------------------------------- */
/*
ALTER TABLE PBANDI_R_SOGG_TIP_ANAG_EN_COMP ADD CONSTRAINT FK_PBANDI_R_SOGG_TIPO_ANAGR_02 
    FOREIGN KEY (ID_SOGGETTO, ID_TIPO_ANAGRAFICA) REFERENCES PBANDI.PBANDI_R_SOGG_TIPO_ANAGRAFICA (ID_SOGGETTO,ID_TIPO_ANAGRAFICA);

ALTER TABLE PBANDI_R_SOGG_TIP_ANAG_EN_COMP ADD CONSTRAINT FK_PBANDI_T_ENTE_COMPETENZA_12 
    FOREIGN KEY (ID_ENTE_COMPETENZA) REFERENCES PBANDI.PBANDI_T_ENTE_COMPETENZA (ID_ENTE_COMPETENZA);

ALTER TABLE PBANDI_R_SOGG_TIP_ANAG_EN_COMP ADD CONSTRAINT FK_PBANDI_T_UTENTE_409 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE);

ALTER TABLE PBANDI_R_SOGG_TIP_ANAG_EN_COMP ADD CONSTRAINT FK_PBANDI_T_UTENTE_410 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE);
*/


SET DEFINE OFF;
/*
Insert into PBANDI_T_UTENTE
   (ID_UTENTE, CODICE_UTENTE, ID_TIPO_ACCESSO, DT_INSERIMENTO)
 Values
   (-14, 'MIGRAZIONE_FINPIS', 5, TO_DATE('02/28/2022 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
*/
Insert into PBANDI_T_UTENTE
   (ID_UTENTE, CODICE_UTENTE, ID_TIPO_ACCESSO, DT_INSERIMENTO)
 Values
   (-16, 'BATCH_STATO_DISTINTE', 5, TO_DATE('11/02/2022 10:05:27', 'MM/DD/YYYY HH24:MI:SS'));
Insert into PBANDI_T_UTENTE
   (ID_UTENTE, CODICE_UTENTE, ID_TIPO_ACCESSO, DT_INSERIMENTO)
 Values
   (-19, 'BATCH SCADENZE', 5, TO_DATE('05/10/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));
COMMIT;

-- Modifica per gestire la sede amministrativa in domanda
ALTER TABLE PBANDI_R_SOGGETTO_DOMANDA_SEDE ADD
  FLAG_SEDE_AMMINISTRATIVA      VARCHAR2(1);
  
update PBANDI_R_SOGGETTO_DOMANDA_SEDE sds
set FLAG_SEDE_AMMINISTRATIVA = (select FLAG_SEDE_AMMINISTRATIVA
                                  from PBANDI_R_SOGG_PROGETTO_SEDE a
								  join PBANDI_R_SOGGETTO_PROGETTO b on b.PROGR_SOGGETTO_PROGETTO = a.PROGR_SOGGETTO_PROGETTO
								  where b.PROGR_SOGGETTO_DOMANDA = sds.PROGR_SOGGETTO_DOMANDA
								    and a.id_sede = sds.id_sede
									and a.id_tipo_sede = 2)
where sds.id_tipo_sede = 2;
								  



Insert into PBANDI_D_ERRORE_BATCH
   (CODICE_ERRORE, DESCRIZIONE)
 Values
   ('W111', 'Manca distinta');
Insert into PBANDI_D_ERRORE_BATCH
   (CODICE_ERRORE, DESCRIZIONE)
 Values
   ('W112', 'Manca codice distinta Finpis');
Insert into PBANDI_D_ERRORE_BATCH
   (CODICE_ERRORE, DESCRIZIONE)
 Values
   ('W113', 'Manca rigo distinta Finpis');
COMMIT;



Insert into PBANDI_C_COSTANTI
   (ATTRIBUTO, VALORE)
 Values
   ('GIORNI_SCADENZA_DEGGENDORF', '10');
COMMIT;


Insert into PBANDI_D_PERMESSO
   (ID_PERMESSO, DESC_BREVE_PERMESSO, DESC_PERMESSO, DT_INIZIO_VALIDITA, DESC_MENU)
 Values
   (199, 'MENUGESTRIASS', 'Gestione riassicurazioni', TO_DATE('09/06/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'Gestione riassicurazioni');

Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (199, 4, TO_DATE('09/06/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'S');
Insert into PBANDI_R_PERMESSO_TIPO_ANAGRAF
   (ID_PERMESSO, ID_TIPO_ANAGRAFICA, DT_INIZIO_VALIDITA, FLAG_MENU)
 Values
   (199, 26, TO_DATE('09/06/2023 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 'S');
COMMIT;


 CREATE SEQUENCE SEQ_PBANDI_T_SERVICER
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

-- PBANDI_D_ATTIVITA_SERVICER
CREATE TABLE PBANDI_D_ATTIVITA_SERVICER
  (ID_ATTIVITA_SERVICER  NUMBER(8)    NOT NULL,
  DESC_BREVE_ATTIVITA_SERVICER  VARCHAR2(20) NOT NULL,
  DESC_ATTIVITA_SERVICER  VARCHAR2(255)   NOT NULL,
  DT_INIZIO_VALIDITA  DATE  NOT NULL,
  DT_FINE_VALIDITA  DATE ,
  CONSTRAINT PK_PBANDI_D_ATTIVITA_SERVICER PRIMARY KEY (ID_ATTIVITA_SERVICER) USING INDEX TABLESPACE PBANDI_IDX
  ); 
  
-- PBANDI_T_SERVICER
CREATE TABLE PBANDI_T_SERVICER  
  (ID_SERVICER  NUMBER(8)  NOT NULL,
    ID_PROGETTO  NUMBER(8)  NOT NULL,
    ID_MODALITA_AGEVOLAZIONE  NUMBER(3)NOT NULL,
    IMP_CESSIONE_CAPITALE  NUMBER(13,2),    
    IMP_CESSIONE_ONERI  NUMBER(13,2),    
    IMP_CESSIONE_INTERESSI_MORA	NUMBER(13,2),		
		IMP_CESSIONE_COMPLESSIVA	NUMBER(13,2),		
		DT_CESSIONE	DATE,		
		IMP_CORRISP_CESSIONE	NUMBER(13,2),		
		DENOM_CESSIONARIO	VARCHAR2(400),		 
		ID_ATTIVITA_SERVICER	NUMBER(8),		
		NOTE	VARCHAR2(4000),		
		DT_INIZIO_VALIDITA	DATE		NOT NULL,
		DT_FINE_VALIDITA	DATE,		
		ID_UTENTE_INS	NUMBER(8)		NOT NULL,
		ID_UTENTE_AGG	NUMBER(8),		
		DT_INSERIMENTO	DATE		NOT NULL,
		DT_AGGIORNAMENTO	DATE,
    CONSTRAINT PK_PBANDI_T_SERVICER PRIMARY KEY (ID_SERVICER) USING INDEX TABLESPACE PBANDI_IDX,
    CONSTRAINT FK_PBANDI_D_ATTIVITA_SERV_01 FOREIGN KEY (ID_ATTIVITA_SERVICER) REFERENCES PBANDI_D_ATTIVITA_SERVICER (ID_ATTIVITA_SERVICER),
    CONSTRAINT fk_pbandi_t_utente_426 FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE),
    CONSTRAINT fk_pbandi_t_utente_427 FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE),
    CONSTRAINT fk_pbandi_t_progetto_97 FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO),
    CONSTRAINT fk_pbandi_d_modalita_agevol_36 FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE) REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE)
    );		


-- IDX
CREATE INDEX IDX_PBANDI_T_SERVICER_01 ON PBANDI_T_SERVICER (ID_ATTIVITA_SERVICER)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_T_SERVICER_02 ON PBANDI_T_SERVICER (ID_UTENTE_INS)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_T_SERVICER_03 ON PBANDI_T_SERVICER (ID_UTENTE_AGG)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_T_SERVICER_04 ON PBANDI_T_SERVICER (ID_PROGETTO)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_T_SERVICER_05 ON PBANDI_T_SERVICER (ID_MODALITA_AGEVOLAZIONE)  TABLESPACE PBANDI_IDX;

-- PBANDI_D_ATTIVITA_SERVICER
insert into PBANDI_D_ATTIVITA_SERVICER (ID_ATTIVITA_SERVICER, DESC_BREVE_ATTIVITA_SERVICER, DESC_ATTIVITA_SERVICER, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (1, 'INV_DOC', 'INVIO DOCUMENTAZIONE', to_date('05-09-2023', 'dd-mm-yyyy'), null);

insert into PBANDI_D_ATTIVITA_SERVICER (ID_ATTIVITA_SERVICER, DESC_BREVE_ATTIVITA_SERVICER, DESC_ATTIVITA_SERVICER, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (2, 'PRS_CAR', 'PRESA IN CARICO', to_date('05-09-2023', 'dd-mm-yyyy'), null);

insert into PBANDI_D_ATTIVITA_SERVICER (ID_ATTIVITA_SERVICER, DESC_BREVE_ATTIVITA_SERVICER, DESC_ATTIVITA_SERVICER, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (3, 'STR_GIU', 'STRAGIUDIZIALE', to_date('05-09-2023', 'dd-mm-yyyy'), null);

insert into PBANDI_D_ATTIVITA_SERVICER (ID_ATTIVITA_SERVICER, DESC_BREVE_ATTIVITA_SERVICER, DESC_ATTIVITA_SERVICER, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (4, 'GIU', 'GIUDIZIALE', to_date('05-09-2023', 'dd-mm-yyyy'), null);

insert into PBANDI_D_ATTIVITA_SERVICER (ID_ATTIVITA_SERVICER, DESC_BREVE_ATTIVITA_SERVICER, DESC_ATTIVITA_SERVICER, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (5, 'CON_REC', 'CONCLUSA CON RECUPERO', to_date('05-09-2023', 'dd-mm-yyyy'), null);

insert into PBANDI_D_ATTIVITA_SERVICER (ID_ATTIVITA_SERVICER, DESC_BREVE_ATTIVITA_SERVICER, DESC_ATTIVITA_SERVICER, DT_INIZIO_VALIDITA, DT_FINE_VALIDITA)
values (6, 'CON_NO_REC', 'CONCLUSA SENZA RECUPERO', to_date('05-09-2023', 'dd-mm-yyyy'), null);

COMMIT;


-- PBANDI_D_DEST_INTERV_SOSTITUT
CREATE TABLE PBANDI_D_DEST_INTERV_SOSTITUT
(ID_DESTINATARIO_INTERVENTO NUMBER(8) NOT NULL,
 DESC_BREVE_DEST_INTERVENTO VARCHAR2(50) NOT NULL,
 DESC_DESTINATARIO_INTERVENTO VARCHAR2(500) NOT NULL,
 IBAN VARCHAR2(27) NOT NULL,
 DT_INIZIO_VALIDITA DATE NOT NULL,
 DT_FINE_VALIDITA DATE,
 CONSTRAINT PK_PBANDI_D_DEST_INTERV_SOST PRIMARY KEY (ID_DESTINATARIO_INTERVENTO) USING INDEX TABLESPACE PBANDI_IDX 
);

-- seq
 CREATE SEQUENCE SEQ_PBANDI_D_DEST_INTERV_SOST
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


-- PBANDI_T_PROPOSTA_EROGAZIONE
ALTER TABLE PBANDI_T_PROPOSTA_EROGAZIONE ADD flag_finistr varchar2(2);
ALTER TABLE PBANDI_T_PROPOSTA_EROGAZIONE add constraint chk_flag_finistr
  check (flag_finistr IN ('SI','NO',NULL));

-- PBANDI_T_PROPOSTA_EROGAZIONE
ALTER TABLE PBANDI_T_PROPOSTA_EROGAZIONE ADD
(ID_PROPOSTA_PADRE NUMBER(8),
 ID_DESTINATARIO_INTERVENTO NUMBER(8)
);

-- fk
 ALTER TABLE PBANDI_T_PROPOSTA_EROGAZIONE   ADD CONSTRAINT fk_pbandi_t_proposta_erog_02 
    FOREIGN KEY (ID_PROPOSTA_PADRE) REFERENCES PBANDI_T_PROPOSTA_EROGAZIONE (ID_PROPOSTA);
 ALTER TABLE PBANDI_T_PROPOSTA_EROGAZIONE   ADD CONSTRAINT fk_PBANDI_D_DEST_INT_SOST_01 
    FOREIGN KEY (ID_DESTINATARIO_INTERVENTO) REFERENCES PBANDI_D_DEST_INTERV_SOSTITUT (ID_DESTINATARIO_INTERVENTO);
    
-- idx
CREATE INDEX ie_pbandi_t_proposta_erogaz_3 ON PBANDI_T_PROPOSTA_EROGAZIONE (ID_PROPOSTA_PADRE)  TABLESPACE PBANDI_IDX;
CREATE INDEX ie_pbandi_t_proposta_erogaz_4 ON PBANDI_T_PROPOSTA_EROGAZIONE (ID_DESTINATARIO_INTERVENTO)  TABLESPACE PBANDI_IDX;



--PBANDI_T_DOCUMENTO_INDEX
ALTER TABLE PBANDI.PBANDI_T_DOCUMENTO_INDEX ADD   FLAG_VISIBILE_BEN VARCHAR2(1);
ALTER TABLE PBANDI.PBANDI_T_DOCUMENTO_INDEX ADD (
  CONSTRAINT CHK_FLAG_VISIBILE_BEN
 CHECK (FLAG_VISIBILE_BEN IN ('N', NULL)));


-- pbandi_t_riassicurazioni
CREATE TABLE pbandi_t_riassicurazioni
     (    id_riassicurazione NUMBER(8) NOT NULL,         
          linea_intervento_soggetto VARCHAR2(50),
          ragione_sociale VARCHAR2(10),
          forma_giuridica VARCHAR2(255),
          descr_forma_giuridica VARCHAR2(500),
          codice_fiscale VARCHAR2(16),
          indirizzo_sede_destinataria VARCHAR2(255),
          localita_sede_destinataria VARCHAR2(255),
          provincia_sede_destinataria VARCHAR2(2),
          ateco VARCHAR2(8),
          descrizione_ateco VARCHAR2(500),
          importo_finanziato NUMBER(17,2),
          id_progetto NUMBER(8) NOT NULL,
          importo_garanzia NUMBER(17,2),
          importo_ammesso NUMBER(17,2),
          percentuale_garanzia NUMBER(5,2),
          percentuale_riassicurato NUMBER(5,2),
          dt_erogazione_mutuo date,
          dt_delibera_mutuo date,
          dt_emissione_garanzia date,
          dt_scadenza_mutuo date,
          importo_escusso NUMBER(17,2),
          data_scarico date,
          data_revoca date,
          data_inizio date NOT NULL,
          data_fine date,
          id_utente_ins number(8) NOT NULL,
          id_utente_agg number(8)
      );
      
-- pk     
alter table pbandi_t_riassicurazioni
 add constraint pk_pbandi_t_riassicurazioni primary key (id_riassicurazione)
 using index  tablespace PBANDI_IDX;
-- fk  
alter table pbandi_t_riassicurazioni
  add constraint FK_PBANDI_T_UTENTE_434 foreign key (ID_UTENTE_AGG)
  references PBANDI_T_UTENTE (ID_UTENTE);
alter table pbandi_t_riassicurazioni
  add constraint FK_PBANDI_T_UTENTE_435 foreign key (ID_UTENTE_INS)
  references PBANDI_T_UTENTE (ID_UTENTE);
alter table pbandi_t_riassicurazioni
  add constraint FK_PBANDI_T_PROGETTO_98 foreign key (ID_PROGETTO)
  references PBANDI_T_PROGETTO (ID_PROGETTO);
-- idx  
create index IE1_pbandi_t_riassicurazioni on  pbandi_t_riassicurazioni (ID_UTENTE_AGG) tablespace PBANDI_IDX; 
create index IE2_pbandi_t_riassicurazioni on  pbandi_t_riassicurazioni (ID_UTENTE_INS) tablespace PBANDI_IDX; 
create index IE3_pbandi_t_riassicurazioni on  pbandi_t_riassicurazioni (ID_PROGETTO) tablespace PBANDI_IDX;       

-- seq
 CREATE SEQUENCE SEQ_pbandi_t_riassicurazioni
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

-- PBANDI_D_TIPO_DISTINTA
ALTER TABLE PBANDI_D_TIPO_DISTINTA ADD ID_TIPO_DISTINTA_AMMVO NUMBER(8);
-- UPDATE
update PBANDI_D_TIPO_DISTINTA
set id_tipo_distinta_ammvo = 8
where id_tipo_distinta = 1;
update PBANDI_D_TIPO_DISTINTA
set id_tipo_distinta_ammvo = 4
where id_tipo_distinta = 2;
update PBANDI_D_TIPO_DISTINTA
set id_tipo_distinta_ammvo = 7
where id_tipo_distinta = 3;
update PBANDI_D_TIPO_DISTINTA
set id_tipo_distinta_ammvo = 9
where id_tipo_distinta = 4;
update PBANDI_D_TIPO_DISTINTA
set id_tipo_distinta_ammvo = 10
where id_tipo_distinta = 5;
update PBANDI_D_TIPO_DISTINTA
set id_tipo_distinta_ammvo = 1
where id_tipo_distinta = 6;
update PBANDI_D_TIPO_DISTINTA
set id_tipo_distinta_ammvo = 2
where id_tipo_distinta = 7;
update PBANDI_D_TIPO_DISTINTA
set id_tipo_distinta_ammvo = 3
where id_tipo_distinta = 8;
update PBANDI_D_TIPO_DISTINTA
set id_tipo_distinta_ammvo = 6
where id_tipo_distinta = 11;
commit;
-- PBANDI_T_DISTINTA_DETT
ALTER TABLE PBANDI_T_DISTINTA_DETT ADD RIGA_DISTINTA NUMBER(8);
-- PBANDI_D_STATO_DISTINTA
ALTER TABLE PBANDI_D_STATO_DISTINTA ADD ID_STATO_DISTINTA_AMVVO NUMBER(8);
-- insert
INSERT INTO PBANDI_D_STATO_DISTINTA 
(ID_STATO_DISTINTA,
DESC_STATO_DISTINTA,
DESC_BREVE_STATO_DISTINTA,
DT_INIZIO_VALIDITA,
DT_FINE_VALIDITA,
ID_STATO_DISTINTA_AMVVO
) VALUES
(10,
 'SOSPESO AMMINISTRATIVO CONTABILE',
 'SAC',
 SYSDATE,
 NULL,
 2
);
commit;
-- update
update PBANDI_D_STATO_DISTINTA 
set ID_STATO_DISTINTA_AMVVO = 3
where ID_STATO_DISTINTA = 4;
update PBANDI_D_STATO_DISTINTA 
set ID_STATO_DISTINTA_AMVVO = 1
where ID_STATO_DISTINTA = 5;
update PBANDI_D_STATO_DISTINTA 
set ID_STATO_DISTINTA_AMVVO = 0
where ID_STATO_DISTINTA = 8;
commit;

-- PBANDI_T_PROPOSTA_EROGAZIONE
alter table PBANDI_T_PROPOSTA_EROGAZIONE ADD ID_GESTIONE_REVOCA NUMBER(8);
-- fk
ALTER TABLE PBANDI_T_PROPOSTA_EROGAZIONE   ADD CONSTRAINT fk_pbandi_t_gestione_revoca_02
    FOREIGN KEY (ID_GESTIONE_REVOCA) REFERENCES pbandi_t_gestione_revoca(ID_GESTIONE_REVOCA);
 -- idx
CREATE INDEX ie_pbandi_t_proposta_erogaz_5 ON PBANDI_T_PROPOSTA_EROGAZIONE (ID_GESTIONE_REVOCA)  TABLESPACE PBANDI_IDX;


--PROGRESSIVO CODICE FISCALE FITTIZIO
CREATE SEQUENCE SEQ_PBANDI_CODFISC_FITTIZIO
  START WITH 1
  INCREMENT BY 1
  NOMINVALUE
  NOMAXVALUE
  NOCYCLE
  NOCACHE
  NOORDER;

-- PBANDI_T_RELAZIONE_TECNICA
CREATE TABLE PBANDI_T_RELAZIONE_TECNICA
	   (ID_RELAZIONE_TECNICA 		NUMBER(8) NOT NULL,
		ID_TIPO_RELAZIONE_TECNICA  	NUMBER(3) NOT NULL,
        ID_PROGETTO 				NUMBER(8) NOT NULL,
		DT_INIZIO_VALIDITA			DATE	  NOT NULL,
		DT_FINE_VALIDITA			DATE,		
		ID_UTENTE_INS				NUMBER(8) NOT NULL,
		ID_UTENTE_AGG				NUMBER(8),		
		DT_INSERIMENTO				DATE	  NOT NULL,
		DT_AGGIORNAMENTO			DATE,
		FLAG_VALIDATO 				VARCHAR2(1),
		NOTE 						VARCHAR2(4000)
      );
      
-- pk     
ALTER TABLE PBANDI_T_RELAZIONE_TECNICA
 ADD CONSTRAINT PK_PBANDI_T_RELAZIONE_TECNICA PRIMARY KEY (ID_RELAZIONE_TECNICA)
 USING INDEX  TABLESPACE PBANDI_IDX;
-- fk  
ALTER TABLE PBANDI_T_RELAZIONE_TECNICA
  ADD CONSTRAINT FK_PBANDI_T_UTENTE_448 FOREIGN KEY (ID_UTENTE_AGG)
  REFERENCES PBANDI_T_UTENTE (ID_UTENTE);
ALTER TABLE PBANDI_T_RELAZIONE_TECNICA
  ADD CONSTRAINT FK_PBANDI_T_UTENTE_449 FOREIGN KEY (ID_UTENTE_INS)
  REFERENCES PBANDI_T_UTENTE (ID_UTENTE);
ALTER TABLE PBANDI_T_RELAZIONE_TECNICA
  ADD CONSTRAINT FK_PBANDI_T_PROGETTO_99 FOREIGN KEY (ID_PROGETTO)
  REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO);
ALTER TABLE PBANDI_T_RELAZIONE_TECNICA
  ADD CONSTRAINT FK_PBANDI_D_TIPO_DICH_SPESA_03 FOREIGN KEY (ID_TIPO_RELAZIONE_TECNICA)
  REFERENCES PBANDI_D_TIPO_DICHIARAZ_SPESA (ID_TIPO_DICHIARAZ_SPESA);
  
ALTER TABLE PBANDI_T_RELAZIONE_TECNICA add constraint chk_flag_validato  check (flag_validato IN ('S','N'));
  
-- idx  
CREATE INDEX IE1_PBANDI_T_RELAZIONE_TECNICA ON  PBANDI_T_RELAZIONE_TECNICA (ID_UTENTE_AGG) TABLESPACE PBANDI_IDX; 
CREATE INDEX IE2_PBANDI_T_RELAZIONE_TECNICA ON  PBANDI_T_RELAZIONE_TECNICA (ID_UTENTE_INS) TABLESPACE PBANDI_IDX; 
CREATE INDEX IE3_PBANDI_T_RELAZIONE_TECNICA ON  PBANDI_T_RELAZIONE_TECNICA (ID_PROGETTO) TABLESPACE PBANDI_IDX;       
CREATE INDEX IE4_PBANDI_T_RELAZIONE_TECNICA ON  PBANDI_T_RELAZIONE_TECNICA (ID_TIPO_RELAZIONE_TECNICA) TABLESPACE PBANDI_IDX;       

-- seq
 CREATE SEQUENCE SEQ_PBANDI_T_RELAZIONE_TECNICA
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

-- Nuovi indici per performance migrazione
CREATE INDEX PBANDI.IE2_PBANDI_T_PREVIEW_DETT_PROP ON PBANDI.PBANDI_T_PREVIEW_DETT_PROP_CER
(ID_PROGETTO)
TABLESPACE PBANDI_IDX;


CREATE INDEX PBANDI.IE5_PBANDI_T_REVOCA ON PBANDI.PBANDI_T_REVOCA
(ID_PROGETTO)
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE1_PBANDI_R_DET_PRO_CER_QP_DO ON PBANDI.PBANDI_R_DET_PROP_CER_QP_DOC
(PROGR_PAG_QUOT_PARTE_DOC_SP)
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE1_PBANDI_R_DET_PR_CER_QP_DOC ON PBANDI.PBANDI_R_DET_PROP_CER_QP_DOC
(ID_DICHIARAZIONE_SPESA)
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE1_PBANDI_R_DETT_PRO_CE_EROG ON PBANDI.PBANDI_R_DETT_PROP_CERT_EROGAZ
(ID_EROGAZIONE)
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE1_PBANDI_R_SOGG_DOMANDA_SEDE ON PBANDI.PBANDI_R_SOGGETTO_DOMANDA_SEDE
(PROGR_SOGGETTO_DOMANDA)
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE1_PBANDI_T_COMUNIC_FINE_PROG ON PBANDI.PBANDI_T_COMUNICAZ_FINE_PROG
(ID_PROGETTO)
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE4_PBANDI_R_SOGGETTO_PROGETTO ON PBANDI.PBANDI_R_SOGGETTO_PROGETTO
(PROGR_SOGGETTO_DOMANDA)
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE1_PBANDI_T_CHECKLIST ON PBANDI.PBANDI_T_CHECKLIST
(ID_DICHIARAZIONE_SPESA)
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE2_PBANDI_T_RECUPERO ON PBANDI.PBANDI_T_RECUPERO
(ID_PROGETTO)
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE1_PBANDI_R_SOGG_DOM_SOGG_COR ON PBANDI.PBANDI_R_SOGG_DOM_SOGG_CORREL
(PROGR_SOGGETTI_CORRELATI)
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE1_PBANDI_R_SOGGETTI_CORRELAT ON PBANDI.PBANDI_R_SOGGETTI_CORRELATI
(ID_SOGGETTO)
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE1_PBANDI_T_UTENTE ON PBANDI.PBANDI_T_UTENTE
(ID_SOGGETTO)
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE1_PBANDI_T_RECAPITI ON PBANDI.PBANDI_T_RECAPITI
(NVL("TELEFONO",'0'))
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE1_PBANDI_T_DOCUMENTO ON PBANDI.PBANDI_T_DOCUMENTO
(NVL("NUMERO_DOCUMENTO",'0'))
TABLESPACE PBANDI_IDX;

CREATE INDEX PBANDI.IE1_PBANDI_T_SEDE ON PBANDI.PBANDI_T_SEDE
(NVL("PARTITA_IVA",'0'))
TABLESPACE PBANDI_IDX;

CREATE INDEX IE1_PBANDI_T_PAGAMENTO ON PBANDI_T_PAGAMENTO
(ID_EROGAZIONE, 1)
TABLESPACE PBANDI_IDX;

CREATE INDEX IE1_PBANDI_T_DOMANDA ON PBANDI_T_DOMANDA
(NUMERO_DOMANDA)
TABLESPACE PBANDI_IDX;

CREATE INDEX IE1_PROGR_SOGGETTI_CORRELATI ON PBANDI_R_SOGG_PROG_SOGG_CORREL
(PROGR_SOGGETTI_CORRELATI)
TABLESPACE PBANDI_IDX;

--PBANDI_R_BANDO_CAUSALE_EROGAZ
ALTER TABLE PBANDI_R_BANDO_CAUSALE_EROGAZ ADD ID_MODALITA_AGEVOLAZIONE  NUMBER(3);

ALTER TABLE PBANDI_R_BANDO_CAUSALE_EROGAZ ADD CONSTRAINT FK_PBANDI_D_MODALITA_AGEVOL_37
    FOREIGN KEY (ID_MODALITA_AGEVOLAZIONE) REFERENCES PBANDI_D_MODALITA_AGEVOLAZIONE (ID_MODALITA_AGEVOLAZIONE);

CREATE INDEX IE2_PBANDI_R_BANDO_CAUS_EROG ON PBANDI_R_BANDO_CAUSALE_EROGAZ (ID_MODALITA_AGEVOLAZIONE)  TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_R_BANDO_CAUS_EROG ON PBANDI_R_BANDO_CAUSALE_EROGAZ (ID_CAUSALE_EROGAZIONE)  TABLESPACE PBANDI_IDX;


--PBANDI_T_RNA_PROGETTO_MAN
CREATE TABLE PBANDI.PBANDI_T_RNA_PROGETTO_MAN
(
  ID_RNA_PROGETTO_MAN  NUMBER(8)                NOT NULL,
  ID_PROGETTO          NUMBER(8)                NOT NULL,
  ACOVAR1              NUMBER(10),
  DDATCOVAR1           DATE,
  ACOVAR2              NUMBER(10),
  DDATCOVAR2           DATE,
  ACOVAR3              NUMBER(10),
  DDATCOVAR3           DATE,
  AVERCOR1             NUMBER(10),
  DDTVERCOR1           DATE,
  AVERCOR2             NUMBER(10),
  DDTVERCOR2           DATE,
  AVERCOR3             NUMBER(10),
  DDTVERCOR3           NUMBER(10),
  ACOR2                NUMBER(10),
  DDATACOR2            DATE,
  ACUP                 VARCHAR2(100),
  AIDCONC              VARCHAR2(30),
  AIDRICH              NUMBER(10),
  CODRNA               VARCHAR2(100),
  CODRNA2              NUMBER(10),
  DDATRNA2             DATE,
  ID_UTENTE_INS        NUMBER(8)                NOT NULL
)
TABLESPACE PBANDI_TBL;


CREATE INDEX PBANDI.IE_PBANDI_T_RNA_PROGETTO_MAN_1 ON PBANDI.PBANDI_T_RNA_PROGETTO_MAN
(ID_PROGETTO) TABLESPACE PBANDI_IDX;


CREATE INDEX PBANDI.IE_PBANDI_T_RNA_PROGETTO_MAN_2 ON PBANDI.PBANDI_T_RNA_PROGETTO_MAN
(ID_UTENTE_INS) TABLESPACE PBANDI_IDX;


ALTER TABLE PBANDI.PBANDI_T_RNA_PROGETTO_MAN ADD (
  CONSTRAINT PK_PBANDI_T_RNA_PROGETTO_MAN
 PRIMARY KEY
 (ID_RNA_PROGETTO_MAN)
    USING INDEX 
    TABLESPACE PBANDI_IDX
);

ALTER TABLE PBANDI.PBANDI_T_RNA_PROGETTO_MAN ADD (
  CONSTRAINT FK_PBANDI_T_PROGETTO_94 
 FOREIGN KEY (ID_PROGETTO) 
 REFERENCES PBANDI.PBANDI_T_PROGETTO (ID_PROGETTO),
  CONSTRAINT FK_PBANDI_T_UTENTE_416 
 FOREIGN KEY (ID_UTENTE_INS) 
 REFERENCES PBANDI.PBANDI_T_UTENTE (ID_UTENTE));

CREATE SEQUENCE PBANDI.SEQ_PBANDI_T_RNA_PROGETTO_MAN
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


create index ie1_PBANDI_T_ESTREMI_BANCARI on PBANDI_T_ESTREMI_BANCARI(IBAN) tablespace pbandi_idx;

create index ie1_PBANDI_T_AGENZIA on PBANDI_T_AGENZIA (COD_AGENZIA) tablespace pbandi_idx;
create index ie1_PBANDI_T_ISCRIZIONE on PBANDI_T_ISCRIZIONE (NVL (NUM_ISCRIZIONE, '0')) tablespace pbandi_idx;

create index ie1_TMP_RACCOR_ATECO_2002_2007 on TMP_RACCORDO_ATECO_2002_2007(COD_CATEGORIA_02) tablespace pbandi_idx;

-- Nuovi errori per Flusso Finistr-PBAN
insert into pbandi_d_errore_batch (codice_errore, descrizione)
values ('E200', 'Flusso istruttoria - domanda FINISTR già acquisita');
insert into pbandi_d_errore_batch (codice_errore, descrizione)
values ('E201', 'Impossibile risalire allo stato della domanda per il flusso FINISTR');
insert into pbandi_d_errore_batch (codice_errore, descrizione)
values ('E202', 'Tipologia di agevolazione non prevista');
insert into pbandi_d_errore_batch (codice_errore, descrizione)
values ('E203', 'Nessuna o troppe tipologie di agevolazione');


ALTER TABLE PBANDI_C_TIPO_DOCUMENTO_INDEX ADD FLAG_PROTOCOLLO VARCHAR2(1);

ALTER TABLE PBANDI_C_TIPO_DOCUMENTO_INDEX ADD CONSTRAINT CC_PBANDI_C_TIPO_DOC_INDEX_01 
    CHECK (FLAG_PROTOCOLLO IN('A','I','P'));

COMMENT ON COLUMN PBANDI_C_TIPO_DOCUMENTO_INDEX.FLAG_PROTOCOLLO IS 'A=Arrivo, I=Interno, P=Partenza';



CREATE OR REPLACE FORCE VIEW PBANDI.PBANDI_V_DOC_INDEX_BATCH
(
   ID_DOCUMENTO_INDEX,
   AZIONE,
   UUID_NODO,
   PROGR_BANDO_LINEA_INTERVENTO,
   ID_PROGETTO,
   CODICE_VISUALIZZATO,
   NOME_FILE,
   DESC_TIPO_DOC_INDEX,
   ID_STATO_DOCUMENTO,
   DESC_BREVE,
   FLAG_FIRMA_CARTACEA,
   DT_VERIFICA_FIRMA,
   DT_MARCA_TEMPORALE,
   DESCRIZIONE,
   NUM_PROTOCOLLO,
   ID_SOGG_DELEGATO,
   ID_SOGG_RAPPR_LEGALE,
   DESC_BREVE_ENTE,
   DESC_BREVE_SETTORE,
   DESC_ENTE_COMPETENZA,
   ID_MESSAGGIO_APPL,
   ENTE,
   SETTORE,
   PAROLA_CHIAVE,
   FEEDBACK_ACTA,
   FASCICOLO_ACTA,
   CLASSIFICAZIONE_ACTA,
   FLAG_REGIONALE,
   FLAG_FINPIEMONTE,
   DENOMINAZIONE_BENEFICIARIO,
   CODICE_FISCALE_BENEFICIARIO,
   CONSERVAZIONE_CORRENTE,
   CONSERVAZIONE_GENERALE,
   NOME_DOCUMENTO,
   NOME_DOCUMENTO_FIRMATO,
   NOME_DOCUMENTO_MARCATO,
   REPOSITORY,
   FLAG_FIRMA_AUTOGRAFA,
   FLAG_PROTOCOLLO
)
AS
   WITH LVF                                      --Lof verifica Firma digitale
          AS (SELECT   ID_DOCUMENTO_INDEX, ID_MESSAGGIO_APPL
                FROM   PBANDI_T_LOG_VALIDAZ_FIRMA A
               WHERE   ID_LOG =
                          (SELECT   MAX (ID_LOG)
                             FROM   PBANDI_T_LOG_VALIDAZ_FIRMA
                            WHERE   ID_DOCUMENTO_INDEX = A.ID_DOCUMENTO_INDEX)
                       AND METODO = 'VERIFY'
                       AND FLAG_STATO_VALIDAZIONE = 'N'),
       LMT
          AS                                        -- Log Marcatura temporale
            (SELECT   ID_DOCUMENTO_INDEX, METODO
               FROM   PBANDI_T_LOG_VALIDAZ_FIRMA A
              WHERE   ID_LOG =
                         (SELECT   MAX (ID_LOG)
                            FROM   PBANDI_T_LOG_VALIDAZ_FIRMA
                           WHERE   ID_DOCUMENTO_INDEX = A.ID_DOCUMENTO_INDEX)
                      AND METODO = 'TIMESTAMP'),
       BEN
          AS (SELECT   A.ID_PROGETTO,
                       B.DENOMINAZIONE_ENTE_GIURIDICO,
                       C.CODICE_FISCALE_SOGGETTO
                FROM   PBANDI_R_SOGGETTO_PROGETTO A,
                       PBANDI_T_ENTE_GIURIDICO B,
                       PBANDI_T_SOGGETTO C
               WHERE       A.ID_ENTE_GIURIDICO = B.ID_ENTE_GIURIDICO
                       AND C.ID_SOGGETTO = A.ID_SOGGETTO
                       AND ID_TIPO_BENEFICIARIO != 4
                       AND ID_TIPO_ANAGRAFICA = 1
                       AND B.DT_FINE_VALIDITA IS NULL
                       AND A.DT_FINE_VALIDITA IS NULL),
       BEN_PRIV
          AS (SELECT   A.ID_PROGETTO,
                       B.COGNOME || ' ' || B.NOME
                          AS DENOMINAZIONE_PERSONA_FISICA,
                       C.CODICE_FISCALE_SOGGETTO
                FROM   PBANDI_R_SOGGETTO_PROGETTO A,
                       PBANDI_T_PERSONA_FISICA B,
                       PBANDI_T_SOGGETTO C
               WHERE       A.ID_PERSONA_FISICA = B.ID_PERSONA_FISICA
                       AND C.ID_SOGGETTO = A.ID_SOGGETTO
                       AND ID_TIPO_BENEFICIARIO != 4
                       AND ID_TIPO_ANAGRAFICA = 1
                       AND B.DT_FINE_VALIDITA IS NULL
                       AND A.DT_FINE_VALIDITA IS NULL)
   --MAIN
   SELECT   ID_DOCUMENTO_INDEX,
            CASE
               WHEN     DESC_BREVE IN ('ACQUISITO')
                    AND FLAG_FIRMA_CARTACEA = 'N'
                    AND DT_VERIFICA_FIRMA IS NULL
                    AND lvf.ID_MESSAGGIO_APPL = 'ERR_GENERIC'
               THEN
                  'DA_VALIDARE'
               WHEN     DESC_BREVE IN ('VALIDATO')
                    AND FLAG_FIRMA_CARTACEA = 'N'
                    AND DT_VERIFICA_FIRMA IS NOT NULL
                    AND DT_MARCA_TEMPORALE IS NULL
                    AND lmt.METODO = 'TIMESTAMP'
               THEN
                  'DA_MARCARE_TEMPORALMENTE'
               WHEN DESC_BREVE IN ('INVIATO') AND FLAG_FIRMA_CARTACEA = 'N'
                    AND (DT_MARCA_TEMPORALE IS NOT NULL
                         OR FLAG_FIRMA_AUTOGRAFA = 'S')
               THEN
                  'DA_CLASSIFICARE'
               WHEN DESC_BREVE IN ('CLASSIFICATO')
                    AND FLAG_FIRMA_CARTACEA = 'N'
                    AND (DT_MARCA_TEMPORALE IS NOT NULL
                         OR FLAG_FIRMA_AUTOGRAFA = 'S')
                    AND DT_CLASSIFICAZIONE IS NOT NULL
               THEN
                  'DA_PROTOCOLLARE'
            END
               AZIONE,
            UUID_NODO,
            PROGR_BANDO_LINEA_INTERVENTO,
            ID_PROGETTO,
            CODICE_VISUALIZZATO,
            NOME_FILE,
            DESC_TIPO_DOC_INDEX,
            ID_STATO_DOCUMENTO,
            DESC_BREVE,
            FLAG_FIRMA_CARTACEA,
            TO_CHAR (DT_VERIFICA_FIRMA, 'DD/MM/YYYY') AS DT_VERIFICA_FIRMA,
            TO_CHAR (DT_MARCA_TEMPORALE, 'DD/MM/YYYY') AS DT_MARCA_TEMPORALE,
            prot.DESCRIZIONE,
            dp.NUM_PROTOCOLLO,
            ID_SOGG_DELEGATO,
            ID_SOGG_RAPPR_LEGALE,
            blec.DESC_BREVE_ENTE,
            CASE
               WHEN blec.DESC_SETTORE IS NOT NULL THEN '000'
               ELSE NVL (blec.DESC_BREVE_SETTORE, '000')
            END
               DESC_BREVE_SETTORE,
            blec.DESC_ENTE_COMPETENZA,
            ID_MESSAGGIO_APPL,
            blec.DESC_BREVE_ENTE ENTE,
            blec.DESC_BREVE_ENTE
            || NVL (blec.DESC_SETTORE, NVL (blec.DESC_BREVE_SETTORE, '000'))
               SETTORE,
            blec.PAROLA_CHIAVE,
            blec.FEEDBACK_ACTA,
            FASCICOLO_ACTA,
            CLASSIFICAZIONE_ACTA,
            CASE
               WHEN DESC_BREVE_TIPO_ENTE_COMPETENZ IN ('ADG', 'REG') THEN 'S'
               ELSE 'N'
            END
               FLAG_REGIONALE,
            CASE
               WHEN DESC_BREVE_TIPO_ENTE_COMPETENZ IN ('OI') THEN 'S'
               ELSE 'N'
            END
               FLAG_FINPIEMONTE,
            NVL (ben.DENOMINAZIONE_ENTE_GIURIDICO,
                 ben_priv.DENOMINAZIONE_PERSONA_FISICA)
               DENOMINAZIONE_BENEFICIARIO,
            NVL (ben.CODICE_FISCALE_SOGGETTO,
                 ben_priv.CODICE_FISCALE_SOGGETTO)
               CODICE_FISCALE_BENEFICIARIO,
            blec.CONSERVAZIONE_CORRENTE,
            blec.CONSERVAZIONE_GENERALE,
            NOME_DOCUMENTO,
            NOME_DOCUMENTO_FIRMATO,
            NOME_DOCUMENTO_MARCATO,
            REPOSITORY,
            FLAG_FIRMA_AUTOGRAFA,
			FLAG_PROTOCOLLO  
     FROM                                          PBANDI_T_DOCUMENTO_INDEX
                                                JOIN
                                                   PBANDI_C_TIPO_DOCUMENTO_INDEX
                                                USING (ID_TIPO_DOCUMENTO_INDEX)
                                             LEFT JOIN
                                                PBANDI_D_STATO_DOCUMENTO_INDEX
                                             USING (ID_STATO_DOCUMENTO)
                                          JOIN
                                             PBANDI_T_PROGETTO p
                                          USING (ID_PROGETTO)
                                       JOIN
                                          PBANDI_T_DOMANDA d
                                       ON d.ID_DOMANDA = p.ID_DOMANDA
                                    -- USING (ID_DOMANDA)
                                    JOIN
                                       PBANDI_R_BANDO_LINEA_INTERVENT bli
                                    USING (PROGR_BANDO_LINEA_INTERVENTO)
                                 JOIN
                                    PBANDI_R_REGOLA_BANDO_LINEA
                                 USING (PROGR_BANDO_LINEA_INTERVENTO)
                              JOIN
                                 PBANDI_V_BANDO_LINEA_ENTE_COMP blec
                              USING (PROGR_BANDO_LINEA_INTERVENTO)
                           LEFT JOIN
                              PBANDI_T_DOC_PROTOCOLLO dp
                           USING (ID_DOCUMENTO_INDEX)
                        LEFT JOIN
                           PBANDI_D_SISTEMA_PROTOCOLLO prot
                        USING (ID_SISTEMA_PROT)
                     LEFT JOIN
                        lvf
                     USING (ID_DOCUMENTO_INDEX)
                  LEFT JOIN
                     lmt
                  USING (ID_DOCUMENTO_INDEX)
               LEFT JOIN
                  ben
               USING (ID_PROGETTO)
            LEFT JOIN
               ben_priv
            USING (ID_PROGETTO)
    WHERE       PBANDI_C_TIPO_DOCUMENTO_INDEX.FLAG_FIRMABILE = 'S'
            AND blec.DESC_BREVE_RUOLO_ENTE = 'DESTINATARIO'
            AND PBANDI_R_REGOLA_BANDO_LINEA.ID_REGOLA = 42;

create index idx_caric_ammco_xml on PBANDI_W_CARICAMENTO_AMMCO_XML(file_xml) INDEXTYPE IS CTXSYS.context;	


/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_SERVIZI_DOQUI"                                        */
/* ---------------------------------------------------------------------- */
CREATE TABLE PBANDI_D_SERVIZI_DOQUI
(ID_SERVIZIO  Number  Not null,   
 NOME_SERVIZIO  VARCHAR2(40) Not null,    
 DESCRIZIONE  VARCHAR2(300),     
 TIPOLOGIA  Varchar2(1),		
 DT_INIZIO_VALIDITA	Date Not null,		
 DT_FINE_VALIDITA	Date,		
 PARAMETRI_DI_INPUT	VARCHAR2(200)	Not null,		
 PARAMETRI_DI_OUTPUT	VARCHAR2(200)	Not null,
 CONSTRAINT PK_PBANDI_D_SERVIZI_DOQUI PRIMARY KEY (ID_SERVIZIO) USING INDEX TABLESPACE PBANDI_IDX
);

--
COMMENT ON COLUMN PBANDI_D_SERVIZI_DOQUI.ID_SERVIZIO IS 'Identificativo interno del servizio';
COMMENT ON COLUMN PBANDI_D_SERVIZI_DOQUI.NOME_SERVIZIO IS 'Nome del servizio chiamato nel codice';
COMMENT ON COLUMN PBANDI_D_SERVIZI_DOQUI.DESCRIZIONE IS 'Testo descrittivo del servizio';
COMMENT ON COLUMN PBANDI_D_SERVIZI_DOQUI.TIPOLOGIA IS 'Se in lettura o scrittura (Valori R o W)';
COMMENT ON COLUMN PBANDI_D_SERVIZI_DOQUI.PARAMETRI_DI_INPUT IS 'Concatenazione con separatore';
COMMENT ON COLUMN PBANDI_D_SERVIZI_DOQUI.PARAMETRI_DI_OUTPUT IS 'Concatenazione con separatore';

-- PBANDI_T_MON_SERV_DOQUI
CREATE TABLE PBANDI_T_MON_SERV_DOQUI
(ID_MONIT_DOQUI	Number(38) not null,
    ID_SERVIZIO	Number		not null,		
    ID_UTENTE	Number		not null,		
    MODALITA_CHIAMATA	Varchar2(1)	not null	,    	
    ESITO 	Varchar2(2),		
    CODICE_ERRORE	Varchar2(10),		
    MESSAGGIO_ERRORE	Varchar2(4000),		
    DATETIME_INIZIO_CHIAMATA	Date	not null,		
    DATETIME_FINE_CHIAMATA	Date,		
    PARAMETRI_DI_INPUT	VARCHAR2(4000) not null,		
    PARAMETRI_DI_OUTPUT	VARCHAR2(4000),		
    ID_ENTITA	NUMBER(3,0) not null,		
    ID_TARGET	NUMBER(8,0)	not null,
    CONSTRAINT PK_PBANDI_T_MON_SERV_DOQUI PRIMARY KEY (ID_MONIT_DOQUI) USING INDEX TABLESPACE PBANDI_IDX	
);


-- idx
CREATE INDEX IE1_PBANDI_T_MON_SERV_DOQUI ON PBANDI_T_MON_SERV_DOQUI (ID_SERVIZIO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE2_PBANDI_T_MON_SERV_DOQUI ON PBANDI_T_MON_SERV_DOQUI (ID_UTENTE) TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_T_MON_SERV_DOQUI ON PBANDI_T_MON_SERV_DOQUI (ID_ENTITA,ID_TARGET) TABLESPACE PBANDI_IDX;

-- 
COMMENT ON COLUMN PBANDI_T_MON_SERV_DOQUI.ID_MONIT_DOQUI IS 'Identificativo interno valorizzato tramite sequence';
COMMENT ON COLUMN PBANDI_T_MON_SERV_DOQUI.ID_UTENTE IS 'Identificativo dell''utente applicativo che effettua la chiamata';
COMMENT ON COLUMN PBANDI_T_MON_SERV_DOQUI.MODALITA_CHIAMATA IS 'Possibili valori I (Insert), U (Update), nel caso di angrafica fondo e iban cancellazione non permessa';
COMMENT ON COLUMN PBANDI_T_MON_SERV_DOQUI.ESITO IS 'Valori (OK/KO)';
COMMENT ON COLUMN PBANDI_T_MON_SERV_DOQUI.PARAMETRI_DI_INPUT IS 'Concatenazione con separatore';
COMMENT ON COLUMN PBANDI_T_MON_SERV_DOQUI.PARAMETRI_DI_OUTPUT IS 'Concatenazione con separatore';

ALTER TABLE PBANDI_T_MON_SERV_DOQUI ADD CONSTRAINT FK_PBANDI_C_ENTITA_17 
    FOREIGN KEY (ID_ENTITA) REFERENCES PBANDI_C_ENTITA (ID_ENTITA);

ALTER TABLE PBANDI_T_MON_SERV_DOQUI ADD CONSTRAINT FK_PBANDI_D_SERVIZI_DOQUI_01 
    FOREIGN KEY (ID_SERVIZIO) REFERENCES PBANDI_D_SERVIZI_DOQUI (ID_SERVIZIO);

ALTER TABLE PBANDI_T_MON_SERV_DOQUI ADD CONSTRAINT FK_PBANDI_T_UTENTE_454 
    FOREIGN KEY (ID_UTENTE) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);


--PBANDI_T_MON_SERV_DOQUI
CREATE SEQUENCE SEQ_PBANDI_T_MON_SERV_DOQUI
  START WITH 1
  INCREMENT BY 1
  NOMINVALUE
  NOMAXVALUE
  NOCYCLE
  NOCACHE
  NOORDER;

/* ---------------------------------------------------------------------- */
/* Add table "PBANDI_D_SERVIZI_FINISTR"                                        */
/* ---------------------------------------------------------------------- */
CREATE TABLE PBANDI_D_SERVIZI_FINISTR
(ID_SERVIZIO  Number  Not null,   
 NOME_SERVIZIO  VARCHAR2(40) Not null,    
 DESCRIZIONE  VARCHAR2(300),     
 TIPOLOGIA  Varchar2(1),		
 DT_INIZIO_VALIDITA	Date Not null,		
 DT_FINE_VALIDITA	Date,		
 PARAMETRI_DI_INPUT	VARCHAR2(200)	Not null,		
 PARAMETRI_DI_OUTPUT	VARCHAR2(200)	Not null,
 CONSTRAINT PK_PBANDI_D_SERVIZI_FINISTR PRIMARY KEY (ID_SERVIZIO) USING INDEX TABLESPACE PBANDI_IDX
);

--
COMMENT ON COLUMN PBANDI_D_SERVIZI_FINISTR.ID_SERVIZIO IS 'Identificativo interno del servizio';
COMMENT ON COLUMN PBANDI_D_SERVIZI_FINISTR.NOME_SERVIZIO IS 'Nome del servizio chiamato nel codice';
COMMENT ON COLUMN PBANDI_D_SERVIZI_FINISTR.DESCRIZIONE IS 'Testo descrittivo del servizio';
COMMENT ON COLUMN PBANDI_D_SERVIZI_FINISTR.TIPOLOGIA IS 'Se in lettura o scrittura (Valori R o W)';
COMMENT ON COLUMN PBANDI_D_SERVIZI_FINISTR.PARAMETRI_DI_INPUT IS 'Concatenazione con separatore';
COMMENT ON COLUMN PBANDI_D_SERVIZI_FINISTR.PARAMETRI_DI_OUTPUT IS 'Concatenazione con separatore';

-- PBANDI_T_MON_SERV_FINISTR
CREATE TABLE PBANDI_T_MON_SERV_FINISTR
(ID_MONIT_FINISTR	Number(38) not null,
    ID_SERVIZIO	Number		not null,		
    ID_UTENTE	Number		not null,		
    MODALITA_CHIAMATA	Varchar2(1)	not null	,    	
    ESITO 	Varchar2(2),		
    CODICE_ERRORE	Varchar2(10),		
    MESSAGGIO_ERRORE	Varchar2(4000),		
    DATETIME_INIZIO_CHIAMATA	Date	not null,		
    DATETIME_FINE_CHIAMATA	Date,		
    PARAMETRI_DI_INPUT	VARCHAR2(4000) not null,		
    PARAMETRI_DI_OUTPUT	VARCHAR2(4000),		
    ID_ENTITA	NUMBER(3,0) not null,		
    ID_TARGET	NUMBER(8,0)	not null,
    CONSTRAINT PK_PBANDI_T_MON_SERV_FINISTR PRIMARY KEY (ID_MONIT_FINISTR) USING INDEX TABLESPACE PBANDI_IDX	
);


-- idx
CREATE INDEX IE1_PBANDI_T_MON_SERV_FINISTR ON PBANDI_T_MON_SERV_FINISTR (ID_SERVIZIO) TABLESPACE PBANDI_IDX;
CREATE INDEX IE2_PBANDI_T_MON_SERV_FINISTR ON PBANDI_T_MON_SERV_FINISTR (ID_UTENTE) TABLESPACE PBANDI_IDX;
CREATE INDEX IE3_PBANDI_T_MON_SERV_FINISTR ON PBANDI_T_MON_SERV_FINISTR (ID_ENTITA,ID_TARGET) TABLESPACE PBANDI_IDX;

-- 
COMMENT ON COLUMN PBANDI_T_MON_SERV_FINISTR.ID_MONIT_FINISTR IS 'Identificativo interno valorizzato tramite sequence';
COMMENT ON COLUMN PBANDI_T_MON_SERV_FINISTR.ID_UTENTE IS 'Identificativo dell''utente applicativo che effettua la chiamata';
COMMENT ON COLUMN PBANDI_T_MON_SERV_FINISTR.MODALITA_CHIAMATA IS 'Possibili valori I (Insert), U (Update), nel caso di angrafica fondo e iban cancellazione non permessa';
COMMENT ON COLUMN PBANDI_T_MON_SERV_FINISTR.ESITO IS 'Valori (OK/KO)';
COMMENT ON COLUMN PBANDI_T_MON_SERV_FINISTR.PARAMETRI_DI_INPUT IS 'Concatenazione con separatore';
COMMENT ON COLUMN PBANDI_T_MON_SERV_FINISTR.PARAMETRI_DI_OUTPUT IS 'Concatenazione con separatore';

ALTER TABLE PBANDI_T_MON_SERV_FINISTR ADD CONSTRAINT FK_PBANDI_C_ENTITA_18
    FOREIGN KEY (ID_ENTITA) REFERENCES PBANDI_C_ENTITA (ID_ENTITA);

ALTER TABLE PBANDI_T_MON_SERV_FINISTR ADD CONSTRAINT FK_PBANDI_D_SERVIZI_FINISTR_01 
    FOREIGN KEY (ID_SERVIZIO) REFERENCES PBANDI_D_SERVIZI_FINISTR (ID_SERVIZIO);

ALTER TABLE PBANDI_T_MON_SERV_FINISTR ADD CONSTRAINT FK_PBANDI_T_UTENTE_455 
    FOREIGN KEY (ID_UTENTE) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);
	
--PBANDI_T_MON_SERV_FINISTR
CREATE SEQUENCE SEQ_PBANDI_T_MON_SERV_FINISTR
  START WITH 1
  INCREMENT BY 1
  NOMINVALUE
  NOMAXVALUE
  NOCYCLE
  NOCACHE
  NOORDER;



Insert into PBANDI_R_TP_DOC_IND_BAN_LI_INT
   (ID_TIPO_DOCUMENTO_INDEX, PROGR_BANDO_LINEA_INTERVENTO, ID_UTENTE_INS)
 Values
   (39, 1, 0);
Insert into PBANDI_R_TP_DOC_IND_BAN_LI_INT
   (ID_TIPO_DOCUMENTO_INDEX, PROGR_BANDO_LINEA_INTERVENTO, ID_UTENTE_INS)
 Values
   (40, 1, 0);
Insert into PBANDI_R_TP_DOC_IND_BAN_LI_INT
   (ID_TIPO_DOCUMENTO_INDEX, PROGR_BANDO_LINEA_INTERVENTO, ID_UTENTE_INS)
 Values
   (41, 1, 0);
Insert into PBANDI_R_TP_DOC_IND_BAN_LI_INT
   (ID_TIPO_DOCUMENTO_INDEX, PROGR_BANDO_LINEA_INTERVENTO, ID_UTENTE_INS)
 Values
   (61, 1, 0);
COMMIT;


create table mfinpis_w_sogg_finanz
(cod_fondo varchar2(4),
 descr_fondo varchar2(200),
 descr_soggetto_finanz varchar2(20),
 id_soggetto_finanziatore number(3));