/*******************************************************************************
* Copyright Regione Piemonte - 2024
* SPDX-License-Identifier: EUPL-1.2
******************************************************************************/

--------------------
--------------------
-- MONITORAGGIO  ---
--------------------
--------------------

-- pag. 4
-- PBANDI_D_MILESTONE

CREATE TABLE PBANDI_D_MILESTONE
(
ID_MILESTONE  NUMBER(3),
DESC_BREVE_MILESTONE  VARCHAR2(20),
DESC_MILESTONE  VARCHAR2(255),
ID_TIPOLOGIA_ATTIVAZIONE NUMBER(3),
DT_INIZIO_VALIDITA  DATE,
DT_FINE_VALIDITA  DATE,
CONSTRAINT PK_PBANDI_D_MILESTONE  PRIMARY KEY (ID_MILESTONE) USING INDEX TABLESPACE PBANDI_IDX
);

-- fk
ALTER TABLE PBANDI_D_MILESTONE   ADD CONSTRAINT fk_pbandi_d_tipologia_attiv_04
   FOREIGN KEY (ID_TIPOLOGIA_ATTIVAZIONE) REFERENCES PBANDI_D_TIPOLOGIA_ATTIVAZIONE (ID_TIPOLOGIA_ATTIVAZIONE);

-- idx
CREATE INDEX IDX_PBANDI_D_MILESTONE_01 ON PBANDI_D_MILESTONE (ID_TIPOLOGIA_ATTIVAZIONE)  TABLESPACE PBANDI_IDX;


-- PBANDI_R_BANDO_MILESTONE
CREATE TABLE PBANDI_R_BANDO_MILESTONE
(ID_BANDO_MILESTONE NUMBER(8) NOT NULL,
 ID_BANDO NUMBER(8) NOT NULL,
 ID_MILESTONE NUMBER(3) NOT NULL,
 DT_PREVISTA DATE,
 DT_EFFETTIVA DATE,
 CONSTRAINT PK_PBANDI_R_BANDO_MILES  PRIMARY KEY (ID_BANDO_MILESTONE) USING INDEX TABLESPACE PBANDI_IDX
);

-- fk
ALTER TABLE PBANDI_R_BANDO_MILESTONE    ADD CONSTRAINT fk_pbandi_t_bando_12
    FOREIGN KEY (id_bando) REFERENCES pbandi_t_bando (id_bando);
ALTER TABLE PBANDI_R_BANDO_MILESTONE    ADD CONSTRAINT fk_PBANDI_D_MILESTONE_01 
    FOREIGN KEY (ID_MILESTONE) REFERENCES PBANDI_D_MILESTONE (ID_MILESTONE);

-- idx
create unique index AK1_PBANDI_R_BANDO_MILESTONE on PBANDI_R_BANDO_MILESTONE (id_bando, id_milestone) tablespace PBANDI_IDX;
CREATE INDEX IDX_PBANDI_R_BANDO_MILEST_01 ON PBANDI_R_BANDO_MILESTONE (id_milestone)  TABLESPACE PBANDI_IDX;

-- seq 
CREATE SEQUENCE SEQ_PBANDI_R_BANDO_MILESTONE
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;

-- pag. 5	
-- PBANDI_D_STRATEGIA_TERRITORIALE
create table PBANDI_D_STRATEGIA_TERRITOR
(ID_STRATEGIA_TERRITORIALE NUMBER(8) NOT NULL,
 DESC_BREVE_STRAT_TERR  VARCHAR2(20),
 DESC_STRAT_TERR  VARCHAR2(255),
 FONTE_DATO VARCHAR2(255),
 DT_INIZIO_VALIDITA  DATE NOT NULL,
 DT_FINE_VALIDITA  DATE,
 CONSTRAINT PK_PBANDI_D_STRATEGIA_TERR  PRIMARY KEY (ID_STRATEGIA_TERRITORIALE) USING INDEX TABLESPACE PBANDI_IDX
);

COMMENT ON COLUMN PBANDI_D_STRATEGIA_TERRITOR.DESC_BREVE_STRAT_TERR IS 'si riferisce alla colonna “Codice Strategia Territoriale”';
COMMENT ON COLUMN PBANDI_D_STRATEGIA_TERRITOR.DESC_STRAT_TERR IS 'si riferisce alla colonna “Descrizione Strategia Territoriale”';

-- PBANDI_T_BANDO
ALTER TABLE PBANDI_T_BANDO ADD ID_STRATEGIA_TERRITORIALE NUMBER(8);
ALTER TABLE PBANDI_T_BANDO  ADD CONSTRAINT fk_PBANDI_D_STRAT_TERRIT_01 
    FOREIGN KEY (ID_STRATEGIA_TERRITORIALE) REFERENCES PBANDI_D_STRATEGIA_TERRITOR (ID_STRATEGIA_TERRITORIALE);
-- idx
CREATE INDEX IDX_PBANDI_T_BANDO_01 ON PBANDI_T_BANDO (ID_STRATEGIA_TERRITORIALE)  TABLESPACE PBANDI_IDX;

-- PBANDI_D_OBIETTIVO_STRATEGICO
create table PBANDI_D_OBIETTIVO_STRATEGICO
(ID_OBIETTIVO_STRATEGICO NUMBER(8) NOT NULL,
 DESC_BREVE_OBIET_STRAT   VARCHAR2(20),
 DESC_OBIET_STRAT   VARCHAR2(255),
 FONTE_DATO VARCHAR2(255),
 DT_INIZIO_VALIDITA  DATE NOT NULL,
 DT_FINE_VALIDITA  DATE,
 CONSTRAINT PK_PBANDI_D_OBIETTIVO_STRAT  PRIMARY KEY (ID_OBIETTIVO_STRATEGICO) USING INDEX TABLESPACE PBANDI_IDX
);

COMMENT ON COLUMN PBANDI_D_OBIETTIVO_STRATEGICO.DESC_BREVE_OBIET_STRAT  IS 'si riferisce alla colonna “Codice “OBIETTIVO STRATEGICO”';
COMMENT ON COLUMN PBANDI_D_OBIETTIVO_STRATEGICO.DESC_OBIET_STRAT IS 'si riferisce alla colonna “Descrizione “OBIETTIVO STRATEGICO”';


-- PBANDI_D_TEMA_PRIORITARIO
ALTER TABLE PBANDI_D_TEMA_PRIORITARIO ADD ID_OBIETTIVO_STRATEGICO NUMBER(8);
ALTER TABLE PBANDI_D_TEMA_PRIORITARIO  ADD CONSTRAINT fk_PBANDI_D_OBIET_STRAT_01 
FOREIGN KEY (ID_OBIETTIVO_STRATEGICO) REFERENCES PBANDI_D_OBIETTIVO_STRATEGICO (ID_OBIETTIVO_STRATEGICO);
-- idx
CREATE INDEX IDX_PBANDI_D_TEMA_PRIORIT_01 ON PBANDI_D_TEMA_PRIORITARIO (ID_OBIETTIVO_STRATEGICO)  TABLESPACE PBANDI_IDX;

-- PBANDI_D_LINEA_DI_INTERVENTO
ALTER TABLE PBANDI_D_LINEA_DI_INTERVENTO ADD ID_OBIETTIVO_STRATEGICO NUMBER(8);
ALTER TABLE PBANDI_D_LINEA_DI_INTERVENTO  ADD CONSTRAINT fk_PBANDI_D_OBIET_STRAT_02
FOREIGN KEY (ID_OBIETTIVO_STRATEGICO) REFERENCES PBANDI_D_OBIETTIVO_STRATEGICO (ID_OBIETTIVO_STRATEGICO);
-- idx
CREATE INDEX ie2_pbandi_d_linea_di_interv ON PBANDI_D_LINEA_DI_INTERVENTO (ID_OBIETTIVO_STRATEGICO)  TABLESPACE PBANDI_IDX;


-- pag 6.
-- PBANDI_D_CLASSIFICAZIONE_SM
create table PBANDI_D_CLASSIFICAZIONE_SM
(ID_CLASSIFICAZIONE_SM NUMBER(8) NOT NULL,
 DESC_BREVE_CLASSIF_SM   VARCHAR2(20),
 DESC_CLASSIF_SM   VARCHAR2(255),
 FONTE_DATO VARCHAR2(255),
 DT_INIZIO_VALIDITA  DATE NOT NULL,
 DT_FINE_VALIDITA  DATE,
 CONSTRAINT PK_PBANDI_D_CLASSIFICAZIONE_SM  PRIMARY KEY (ID_CLASSIFICAZIONE_SM) USING INDEX TABLESPACE PBANDI_IDX
);


COMMENT ON COLUMN PBANDI_D_CLASSIFICAZIONE_SM.DESC_BREVE_CLASSIF_SM  IS 'si riferisce alla colonna “Codice Strategia Macroregionale”';
COMMENT ON COLUMN PBANDI_D_CLASSIFICAZIONE_SM.DESC_CLASSIF_SM IS 'si riferisce alla colonna “Descrizione Strategia Macroregionale”';

-- PBANDI_T_BANDO
ALTER TABLE PBANDI_T_BANDO ADD ID_CLASSIFICAZIONE_SM  NUMBER(8);
ALTER TABLE PBANDI_T_BANDO  ADD CONSTRAINT fk_PBANDI_D_CLASSIF_SM_01 
    FOREIGN KEY (ID_CLASSIFICAZIONE_SM ) REFERENCES PBANDI_D_CLASSIFICAZIONE_SM (ID_CLASSIFICAZIONE_SM );
-- idx
CREATE INDEX IDX_PBANDI_T_BANDO_02 ON PBANDI_T_BANDO (ID_CLASSIFICAZIONE_SM)  TABLESPACE PBANDI_IDX;



-- PBANDI_D_CLASSIFICAZIONE_DPG
create table PBANDI_D_CLASSIFICAZIONE_DPG
(ID_CLASSIFICAZIONE_DPG NUMBER(8) NOT NULL,
 DESC_BREVE_CLASSIF_DPG  VARCHAR2(20),
 DESC_CLASSIF_DPG  VARCHAR2(255),
 FONTE_DATO VARCHAR2(255),
 DT_INIZIO_VALIDITA  DATE NOT NULL,
 DT_FINE_VALIDITA  DATE,
 CONSTRAINT PK_PBANDI_D_CLASSIF_DPG  PRIMARY KEY (ID_CLASSIFICAZIONE_DPG) USING INDEX TABLESPACE PBANDI_IDX
);


COMMENT ON COLUMN PBANDI_D_CLASSIFICAZIONE_DPG.DESC_BREVE_CLASSIF_DPG  IS 'si riferisce alla colonna “Codice GED”';
COMMENT ON COLUMN PBANDI_D_CLASSIFICAZIONE_DPG.DESC_CLASSIF_DPG IS 'si riferisce alla colonna “Descrizione GED”';


-- PBANDI_T_BANDO
ALTER TABLE PBANDI_T_BANDO ADD ID_CLASSIFICAZIONE_DPG  NUMBER(8);
ALTER TABLE PBANDI_T_BANDO  ADD CONSTRAINT fk_PBANDI_D_CLASSIF_DPG_01 
    FOREIGN KEY (ID_CLASSIFICAZIONE_DPG ) REFERENCES PBANDI_D_CLASSIFICAZIONE_DPG (ID_CLASSIFICAZIONE_DPG );
-- idx
CREATE INDEX IDX_PBANDI_T_BANDO_03 ON PBANDI_T_BANDO (ID_CLASSIFICAZIONE_DPG)  TABLESPACE PBANDI_IDX;



-- pag 7
-- PBANDI_D_MOTIVAZIONE_DUPLICAZIONE
create table PBANDI_D_MOTIVAZIONE_DUPLICAZ
(ID_MOTIVAZIONE_DUPLICAZ NUMBER(8) NOT NULL,
 DESC_BREVE_MOTIVAZIONE  VARCHAR2(20),
 DESC_MOTIVAZIONE  VARCHAR2(255),
 DT_INIZIO_VALIDITA  DATE NOT NULL,
 DT_FINE_VALIDITA  DATE,
 CONSTRAINT PK_PBANDI_D_MOTIVAZ_DUPLICAZ  PRIMARY KEY (ID_MOTIVAZIONE_DUPLICAZ) USING INDEX TABLESPACE PBANDI_IDX
);

-- PBANDI_T_PROGETTO
ALTER TABLE PBANDI_T_PROGETTO ADD ID_MOTIVAZIONE_DUPLICAZ NUMBER(8);
ALTER TABLE PBANDI_T_PROGETTO  ADD CONSTRAINT fk_PBANDI_D_MOTIV_DUPLICAZ_01 
    FOREIGN KEY (ID_MOTIVAZIONE_DUPLICAZ) REFERENCES PBANDI_D_MOTIVAZIONE_DUPLICAZ (ID_MOTIVAZIONE_DUPLICAZ);
-- idx
CREATE INDEX ie11_pbandi_t_progetto ON PBANDI_T_PROGETTO (ID_MOTIVAZIONE_DUPLICAZ)  TABLESPACE PBANDI_IDX;


-- PBANDI_D_MODALITA_RENDICONTATIVA
create table PBANDI_D_MODALITA_RENDICONT
(ID_MODALITA_RENDICONTATIVA NUMBER(8) NOT NULL,
 DESC_BREVE_MOD_REND  VARCHAR2(20),
 DESC_MOD_REND  VARCHAR2(255),
 DT_INIZIO_VALIDITA  DATE NOT NULL,
 DT_FINE_VALIDITA  DATE,
 CONSTRAINT PK_PBANDI_D_MODALITA_RENDICONT  PRIMARY KEY (ID_MODALITA_RENDICONTATIVA) USING INDEX TABLESPACE PBANDI_IDX
);


COMMENT ON COLUMN PBANDI_D_MODALITA_RENDICONT.DESC_BREVE_MOD_REND  IS 'si riferisce alla colonna “Codice Modalità Rendicontativa”';
COMMENT ON COLUMN PBANDI_D_MODALITA_RENDICONT.DESC_MOD_REND IS 'si riferisce alla colonna “Descrizione Modalità Rendicontativa”';

-- PBANDI_R_BANDO_VOCE_DI_SPESA
ALTER TABLE PBANDI_R_BANDO_VOCE_SPESA ADD ID_MODALITA_RENDICONTATIVA NUMBER(8);
ALTER TABLE PBANDI_R_BANDO_VOCE_SPESA  ADD CONSTRAINT fk_PBANDI_D_MOD_RENDICONT_01 
    FOREIGN KEY (ID_MODALITA_RENDICONTATIVA ) REFERENCES PBANDI_D_MODALITA_RENDICONT (ID_MODALITA_RENDICONTATIVA);
-- idx
CREATE INDEX ie5_mfinpis_r_bando_voce_spesa ON PBANDI_R_BANDO_VOCE_SPESA (ID_MODALITA_RENDICONTATIVA)  TABLESPACE PBANDI_IDX;

-- Aggiunta campi su strutture dati esistenti
alter table PBANDI_T_BANDO add DT_VALUTAZ_EXANTE date;
--
alter table PBANDI_R_FORNITORE_AFFIDAMENTO add ID_COMUNE NUMBER(8);
ALTER TABLE PBANDI_R_FORNITORE_AFFIDAMENTO  ADD CONSTRAINT fk_pbandi_d_comune_10
    FOREIGN KEY (ID_COMUNE) REFERENCES PBANDI_D_COMUNE (ID_COMUNE);
CREATE INDEX idx_PBANDI_R_FORN_AFFID_01 ON PBANDI_R_FORNITORE_AFFIDAMENTO (ID_COMUNE)TABLESPACE PBANDI_IDX;
--
alter table PBANDI_T_DATI_PROGETTO_MONIT add
(FLAG_SF_OPERATIVO varchar2(1),
 DATA_LIQUIDAZIONE date,
 NUM_OPE_GAR_DEFAULT number(8),
 IMP_TOT_OPE_GAR_DEFAULT number(17,2),
 IMP_INTERESSI_PLUSVALENZE number(17,2),
 IMP_RIMBORSATI number(17,2),
 IMP_RIMBORSI_CONTO_CAPITALE number(17,2),
 IMP_PLUSVALENZE_E_PROFITTI number(17,2),
 IMP_RISORSE_IMPUTABILI number(17,2),
 IMP_TRATTAMENTO_DIFFERENZIATO number(17,2),
 IMP_COSTI_COMMIS_DI_GESTIONE number(17,2),
 IMP_PERDITE number(17,2),
 IMP_REIMPIEGO number(17,2),
 IMPORTO_CONT_IMP_NO_FONDI number(17,2),
 CONTRIBUTO_IMPEGNATO_BEI number(17,2),
 IMP_CONTR_VERS_PUB_NO_FONDI number(17,2),
 IMP_CONTR_VERS_PRIV_NO_FONDI number(17,2),
 CONTRIBUTO_VERSATO_BEI number(17,2),
 IMP_CONTRIBUTI_NO_FONDI_MOB number(17,2),
 IMP_CONTRIBUTI_PUBBLICI_MOB number(17,2),
 IMP_CONTRIBUTI_PRIVATI_MOB number(17,2),
 CONTRIBUTO_BEI_MOB number(17,2),
 IMP_EFFETTO_LEVA_PRESTITO number(17,2),
 IMP_EFFETTO_LEVA_MCREDITO number(17,2),
 IMP_EFFETTO_LEVA_GARANZIA number(17,2),
 IMP_EFFETTO_LEVA_AZIONARIO number(17,2),
 IMP_EFFETTO_LEVA_SOVVENZIONI number(17,2),
 IMP_EFFETTO_LEVA_ALTRE number(17,2),
 INVESTIMENTI_ATTIVATI number(17,2)
 );


);

alter table PBANDI_T_DATI_PROGETTO_MONIT
  add constraint CHK_FLAG_SF_OPERATIVO
  check (FLAG_SF_OPERATIVO IN ('S', 'N', NULL)
  );
--









-----------
-----------
-- PBANDI_D_WIDGET
CREATE TABLE PBANDI_D_WIDGET
(id_widget NUMBER(8) NOT NULL,
desc_breve_widget varchar2(100) NOT NULL,
desc_widget varchar2 (500) NOT NULL,
titolo_widget varchar2 (200) NOT NULL,
flag_modifica varchar2(1), --(S/N)
dt_inizio_validita DATE NOT NULL,
dt_fine_validita DATE,
CONSTRAINT PK_PBANDI_D_WIDGET PRIMARY KEY (id_widget) USING INDEX TABLESPACE PBANDI_IDX 
);
-- CHK
alter table PBANDI_D_WIDGET
  add constraint CHK_flag_modifica
  check (flag_modifica IN ('S', 'N', NULL)
  );
  
-- SEQ_PBANDI_D_WIDGET
CREATE SEQUENCE SEQ_PBANDI_D_WIDGET
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;  


-- PBANDI_R_SOGGETTO_WIDGET

CREATE TABLE PBANDI_R_SOGGETTO_WIDGET 
(id_soggetto_widget NUMBER(8) NOT NULL,
id_soggetto NUMBER(8) NOT NULL,
id_widget   NUMBER(8) NOT NULL,
flag_widget_attivo VARCHAR2(1), 
id_utente_ins NUMBER(8) NOT NULL,
dt_inserimento DATE NOT NULL,
id_utente_agg  NUMBER(8),
dt_aggiornamento DATE,
CONSTRAINT PK_PBANDI_R_SOGGETTO_WIDGET PRIMARY KEY (id_soggetto_widget) USING INDEX TABLESPACE PBANDI_IDX 
);


-- CHK
alter table PBANDI_R_SOGGETTO_WIDGET
  add constraint CHK_flag_widget_attivo
  check (flag_widget_attivo IN ('S', 'N', NULL)
  );
  
-- SEQ_PBANDI_R_SOGGETTO_WIDGET
CREATE SEQUENCE SEQ_PBANDI_R_SOGGETTO_WIDGET
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder;  

-- FK
ALTER TABLE PBANDI_R_SOGGETTO_WIDGET    ADD CONSTRAINT fk_pbandi_d_widget_01
    FOREIGN KEY (id_widget) REFERENCES pbandi_d_widget (id_widget);
ALTER TABLE PBANDI_R_SOGGETTO_WIDGET    ADD CONSTRAINT fk_pbandi_t_utente_460 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);
 ALTER TABLE PBANDI_R_SOGGETTO_WIDGET   ADD CONSTRAINT fk_pbandi_t_utente_461 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE); 
ALTER TABLE PBANDI_R_SOGGETTO_WIDGET  ADD CONSTRAINT fk_pbandi_t_soggetto_40
    FOREIGN KEY (ID_SOGGETTO) REFERENCES PBANDI_T_SOGGETTO(ID_SOGGETTO); 

    
-- IDX  
create unique index AK1_PBANDI_R_SOGGETTO_WIDGET on PBANDI_R_SOGGETTO_WIDGET (id_soggetto,id_widget) tablespace PBANDI_IDX;
CREATE INDEX IDX_PBANDI_R_SOGG_WIDGET_01 ON PBANDI_R_SOGGETTO_WIDGET (id_widget)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_R_SOGG_WIDGET_02 ON PBANDI_R_SOGGETTO_WIDGET (ID_UTENTE_INS)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_R_SOGG_WIDGET_03 ON PBANDI_R_SOGGETTO_WIDGET (ID_UTENTE_AGG)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_R_SOGG_WIDGET_04 ON PBANDI_R_SOGGETTO_WIDGET (ID_SOGGETTO)  TABLESPACE PBANDI_IDX;

--PBANDI_R_BANDO_LIN_SOGG_WIDGET
CREATE TABLE PBANDI_R_BANDO_LIN_SOGG_WIDGET
(id_bando_lin_sogg_widget NUMBER(8) NOT NULL,
id_soggetto_widget NUMBER(8) NOT NULL ,
progr_bando_linea_intervento NUMBER(8) NOT NULL,
id_utente_ins NUMBER(8) NOT NULL,
dt_inserimento DATE ,
CONSTRAINT PK_PBANDI_R_BANDO_LIN_SOGG_WID PRIMARY KEY (id_bando_lin_sogg_widget) USING INDEX TABLESPACE PBANDI_IDX 
);

-- SEQ_PBANDI_R_SOGGETTO_WIDGET
CREATE SEQUENCE SEQ_PBANDI_R_BAN_LIN_SOGG_WID
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    nocycle
    noorder; 
-- FK
ALTER TABLE PBANDI_R_BANDO_LIN_SOGG_WIDGET   ADD CONSTRAINT fk_PBANDI_R_SOGGETTO_WIDGET_01
    FOREIGN KEY (id_soggetto_widget) REFERENCES PBANDI_R_SOGGETTO_WIDGET (id_soggetto_widget);
ALTER TABLE PBANDI_R_BANDO_LIN_SOGG_WIDGET   ADD CONSTRAINT fk_pbandi_t_utente_462
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);    
ALTER TABLE PBANDI_R_BANDO_LIN_SOGG_WIDGET   ADD CONSTRAINT fk_pbandi_r_bando_linea_int_39
    FOREIGN KEY (PROGR_BANDO_LINEA_INTERVENTO) REFERENCES PBANDI_R_BANDO_LINEA_INTERVENT (PROGR_BANDO_LINEA_INTERVENTO);
    
-- IDX  

CREATE INDEX IDX_PBAN_R_BAN_LIN_SOGG_WID_01 ON PBANDI_R_BANDO_LIN_SOGG_WIDGET (id_soggetto_widget)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBAN_R_BAN_LIN_SOGG_WID_02 ON PBANDI_R_BANDO_LIN_SOGG_WIDGET (ID_UTENTE_INS)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBAN_R_BAN_LIN_SOGG_WID_03 ON PBANDI_R_BANDO_LIN_SOGG_WIDGET (progr_bando_linea_intervento)  TABLESPACE PBANDI_IDX;

-- gg_quietanza
alter table pbandi_t_pagamento drop column gg_quietanza;
ALTER TABLE PBANDI_T_BANDO add gg_quietanza number;
comment on column pbandi_t_bando.gg_quietanza is 'Numeri di giorni  entro i quali il beneficiario può inserire la quietanza del documento di spesa';

-- Indici su TMP_NUM_DOMANDA_GEFO
CREATE INDEX IE1_TMP_NUM_DOMANDA_GEFO ON TMP_NUM_DOMANDA_GEFO
(COD_FONDO_GEFO)
TABLESPACE PBANDI_IDX;

CREATE INDEX IE2_TMP_NUM_DOMANDA_GEFO ON TMP_NUM_DOMANDA_GEFO
(PROGR_BANDO_LINEA_INTERVENTO)
TABLESPACE PBANDI_IDX;

-- PBANDI_R_SOGGETTO_PROGETTO
alter table PBANDI_R_SOGGETTO_PROGETTO add flag_conflitto_interessi varchar2 (2);
alter table PBANDI_R_SOGGETTO_PROGETTO add dt_ins_confl_interessi date;

alter table PBANDI_R_SOGGETTO_PROGETTO
  add constraint CHK_PBANDI_R_SOGGETTO_PROGETTO  
  check (flag_conflitto_interessi IN ('SI', 'NO', null));
  
-- PBANDI_T_NOTE_GENERALI   
create table PBANDI_T_NOTE_GENERALI      
(
ID_NOTA  NUMBER(8)  NOT NULL,
ID_PROGETTO  NUMBER(8)  NOT NULL,
NOTE  VARCHAR2(4000)  NOT NULL,
DT_INIZIO_VALIDITA  DATE NOT NULL,
DT_FINE_VALIDITA  DATE,   
ID_UTENTE_INS  NUMBER(8)  NOT NULL,
ID_UTENTE_AGG  NUMBER(8),   
FLAG_VISIBILITA_BENEFICIARIO  VARCHAR2(1),  
DT_INSERIMENTO  DATE  NOT NULL,
DT_AGGIORNAMENTO  DATE,
CONSTRAINT PK_PBANDI_T_NOTE_GENERALI PRIMARY KEY (ID_NOTA) USING INDEX TABLESPACE PBANDI_IDX 
);  

-- chk
alter table PBANDI_T_NOTE_GENERALI
  add constraint CHK_PBANDI_T_NOTE_GENERALI 
  check (FLAG_VISIBILITA_BENEFICIARIO IN ('SI', null));
  
-- fk
ALTER TABLE PBANDI_T_NOTE_GENERALI    ADD CONSTRAINT fk_pbandi_t_utente_463 
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);
 ALTER TABLE PBANDI_T_NOTE_GENERALI    ADD CONSTRAINT fk_pbandi_t_utente_464 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);
 ALTER TABLE PBANDI_T_NOTE_GENERALI     ADD CONSTRAINT fk_pbandi_t_progetto_104
    FOREIGN KEY (ID_PROGETTO) REFERENCES PBANDI_T_PROGETTO (ID_PROGETTO);

 -- idx
CREATE INDEX IDX_PBANDI_T_NOTE_GENERALI_01 ON PBANDI_T_NOTE_GENERALI (ID_UTENTE_INS)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_T_NOTE_GENERALI_02 ON PBANDI_T_NOTE_GENERALI (ID_UTENTE_AGG)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_T_NOTE_GENERALI_03 ON PBANDI_T_NOTE_GENERALI  (ID_PROGETTO)  TABLESPACE PBANDI_IDX;

-- seq
 CREATE SEQUENCE SEQ_pbandi_t_note_generali
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


-- PBANDI_T_FORNITORE_STRUTTURA
ALTER TABLE PBANDI_T_FORNITORE_STRUTTURA ADD
(DT_INSERIMENTO date, 
 DT_AGGIORNAMENTO date
 );
 
-- pbandi_r_dich_spesa_forn_struttura
CREATE TABLE pbandi_r_dich_sp_forn_strut
(ID_DICH_SPESA_FORN_STRUT NUMBER(8) NOT NULL,
 ID_DICHIARAZIONE_SPESA NUMBER(8), 
 COD_STRUTTURA VARCHAR2(20),
 ID_UTENTE_INS NUMBER(8),
 ID_UTENTE_AGG NUMBER(8),
 DT_INSERIMENTO date NOT NULL, 
 DT_AGGIORNAMENTO date,
 CONSTRAINT PK_pbandi_r_dich_sp_forn_stru  PRIMARY KEY (ID_DICH_SPESA_FORN_STRUT) USING INDEX TABLESPACE PBANDI_IDX
);

-- seq
 CREATE SEQUENCE SEQ_pbandi_r_dich_sp_for_str
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;
  
-- fk
ALTER TABLE pbandi_r_dich_sp_forn_strut    ADD CONSTRAINT fk_pbandi_t_utente_465
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);
 ALTER TABLE pbandi_r_dich_sp_forn_strut    ADD CONSTRAINT fk_pbandi_t_utente_466 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);
 ALTER TABLE pbandi_r_dich_sp_forn_strut     ADD CONSTRAINT fk_pbandi_t_dichiaraz_spesa_12
    FOREIGN KEY (ID_DICHIARAZIONE_SPESA) REFERENCES pbandi_t_dichiarazione_spesa (ID_DICHIARAZIONE_SPESA);
ALTER TABLE pbandi_r_dich_sp_forn_strut ADD CONSTRAINT fk_pbandi_t_forn_strut_01
    FOREIGN KEY (COD_STRUTTURA) REFERENCES pbandi_t_fornitore_struttura (COD_STRUTTURA);
	

-- idx
CREATE UNIQUE INDEX AK_pbandi_r_dich_sp_forn_01 ON pbandi_r_dich_sp_forn_strut (COD_STRUTTURA, id_dichiarazione_spesa) TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_pbandi_r_dich_sp_forn_01 ON pbandi_r_dich_sp_forn_strut (ID_UTENTE_INS)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_pbandi_r_dich_sp_forn_02 ON pbandi_r_dich_sp_forn_strut (ID_UTENTE_AGG)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_pbandi_r_dich_sp_forn_03 ON pbandi_r_dich_sp_forn_strut  (ID_DICHIARAZIONE_SPESA)  TABLESPACE PBANDI_IDX;


-- PBANDI_T_DICHIARAZIONE_SPESA
alter table PBANDI_T_DICHIARAZIONE_SPESA add (RILIEVO_CONTABILE varchar2(1000), dt_rilievo_contabile date);
-- PBANDI_R_DOC_SPESA_PROGETTO
alter table PBANDI_R_DOC_SPESA_PROGETTO add (RILIEVO_CONTABILE varchar2(1000), dt_rilievo_contabile date);

-- PBANDI_C_TIPO_FILE_ALLEGATO
create table PBANDI_C_TIPO_FILE_ALLEGATO
(
 ID_TIPO_FILE_ALLEGATO NUMBER(3) NOT NULL, 
 ID_ENTITA NUMBER(3) NOT NULL,
 ID_TIPO_DOCUMENTO_INDEX NUMBER(3), 
 DESC_BREVE_TIPO_FILE_ALLEGATO VARCHAR2(20) NOT NULL, 
 DESC_TIPO_FILE_ALLEGATO VARCHAR2(100) NOT NULL, 
 FLAG_FIRMABILE VARCHAR2(1), 
 FLAG_UPLOADABLE VARCHAR2(1), 
 FLAG_PROTOCOLLO VARCHAR2(1), 
 FLAG_OBBLIGATORIO VARCHAR(1) NOT NULL,
 CONSTRAINT PK_ID_TIPO_FILE_ALLEG  PRIMARY KEY (ID_TIPO_FILE_ALLEGATO) USING INDEX TABLESPACE PBANDI_IDX
);

-- check constraint
alter table PBANDI_C_TIPO_FILE_ALLEGATO
  add constraint CC_PBANDI_C_TIPO_FILE_ALLEG
  check (FLAG_OBBLIGATORIO IN ('S','N'));


-- fk
ALTER TABLE PBANDI_C_TIPO_FILE_ALLEGATO   ADD CONSTRAINT fk_pbandi_c_entita_19
    FOREIGN KEY (ID_ENTITA) REFERENCES PBANDI_C_ENTITA (ID_ENTITA);
ALTER TABLE PBANDI_C_TIPO_FILE_ALLEGATO   ADD CONSTRAINT fk_pbandi_c_tipo_doc_index_10
    FOREIGN KEY (ID_TIPO_DOCUMENTO_INDEX) REFERENCES PBANDI_C_TIPO_DOCUMENTO_INDEX (ID_TIPO_DOCUMENTO_INDEX);
  
-- idx
CREATE INDEX IDX_PBANDI_C_TIPO_FILE_ALL_02 ON PBANDI_C_TIPO_FILE_ALLEGATO (ID_ENTITA)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_C_TIPO_FILE_ALL_03 ON PBANDI_C_TIPO_FILE_ALLEGATO (ID_TIPO_DOCUMENTO_INDEX)  TABLESPACE PBANDI_IDX;

-- seq
 CREATE SEQUENCE SEQ_PBANDI_C_TIPO_FILE_ALL
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;
  
-- PBANDI_R_TIPO_FILE_ALLEG_ENT
CREATE TABLE PBANDI_R_TIPO_FILE_ALLEG_ENT
(ID_TIPO_FILE_ALLEG_ENT NUMBER(8)NOT NULL,
 ID_TIPO_FILE_ALLEGATO NUMBER(3) NOT NULL, 
 ID_FILE_ENTITA INTEGER,
 ID_DOCUMENTO_INDEX NUMBER(8),
 DT_INSERIMENTO DATE NOT NULL,
 DT_AGGIORNAMENTO DATE,
 ID_UTENTE_INS NUMBER(8) NOT NULL,
 ID_UTENTE_AGG NUMBER (8),
 CONSTRAINT PK_PBANDI_R_TIPO_FIL_AL_ENT PRIMARY KEY (ID_TIPO_FILE_ALLEG_ENT) USING INDEX TABLESPACE PBANDI_IDX
);

-- fk
ALTER TABLE PBANDI_R_TIPO_FILE_ALLEG_ENT    ADD CONSTRAINT fk_pbandi_t_utente_467
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);
ALTER TABLE PBANDI_R_TIPO_FILE_ALLEG_ENT    ADD CONSTRAINT fk_pbandi_t_utente_468 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);
ALTER TABLE PBANDI_R_TIPO_FILE_ALLEG_ENT    ADD CONSTRAINT fk_PBANDI_C_TIPO_FILE_ALLEG_01 
    FOREIGN KEY (ID_TIPO_FILE_ALLEGATO) REFERENCES PBANDI_C_TIPO_FILE_ALLEGATO (ID_TIPO_FILE_ALLEGATO);
ALTER TABLE PBANDI_R_TIPO_FILE_ALLEG_ENT    ADD CONSTRAINT fk_pbandi_t_file_entita_02
    FOREIGN KEY (ID_FILE_ENTITA) REFERENCES PBANDI_T_FILE_ENTITA (ID_FILE_ENTITA);
ALTER TABLE PBANDI_R_TIPO_FILE_ALLEG_ENT    ADD CONSTRAINT fk_pbandi_t_documento_index_07
    FOREIGN KEY (ID_DOCUMENTO_INDEX) REFERENCES PBANDI_T_DOCUMENTO_INDEX (ID_DOCUMENTO_INDEX);

-- idx
CREATE UNIQUE INDEX AK_PBANDI_R_TIPO_FIL_AL_ENT ON PBANDI_R_TIPO_FILE_ALLEG_ENT (ID_TIPO_FILE_ALLEGATO,ID_FILE_ENTITA) TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_R_TIP_FIL_AL_ENT_01 ON PBANDI_R_TIPO_FILE_ALLEG_ENT (ID_UTENTE_INS)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_R_TIP_FIL_AL_ENT_02 ON PBANDI_R_TIPO_FILE_ALLEG_ENT (ID_UTENTE_AGG)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_R_TIP_FIL_AL_ENT_03 ON PBANDI_R_TIPO_FILE_ALLEG_ENT (ID_FILE_ENTITA)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_R_TIP_FIL_AL_ENT_04 ON PBANDI_R_TIPO_FILE_ALLEG_ENT (ID_DOCUMENTO_INDEX)  TABLESPACE PBANDI_IDX;


-- seq
 CREATE SEQUENCE SEQ_PBANDI_R_TIP_FILE_ALL_ENT
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;
  
  
-- PBANDI_R_FILE_ALLEG_TIP_ANAG
create table PBANDI_R_FILE_ALLEG_TIP_ANAG
(ID_FILE_ALLEG_TIP_ANAG NUMBER(8) NOT NULL,
 ID_TIPO_FILE_ALLEGATO NUMBER(3) NOT NULL,
 ID_TIPO_ANAGRAFICA NUMBER(3) NOT NULL, 
 DT_INSERIMENTO DATE NOT NULL,
 DT_AGGIORNAMENTO DATE,
 ID_UTENTE_INS NUMBER(8) NOT NULL,
 ID_UTENTE_AGG NUMBER (8),
 CONSTRAINT PK_ID_FILE_ALLEG_TIP_ANAG PRIMARY KEY (ID_FILE_ALLEG_TIP_ANAG) USING INDEX TABLESPACE PBANDI_IDX
);

-- fk
ALTER TABLE PBANDI_R_FILE_ALLEG_TIP_ANAG   ADD CONSTRAINT fk_pbandi_d_tipo_anagrafica_14
    FOREIGN KEY (ID_TIPO_ANAGRAFICA) REFERENCES PBANDI_D_TIPO_ANAGRAFICA (ID_TIPO_ANAGRAFICA);
ALTER TABLE PBANDI_R_FILE_ALLEG_TIP_ANAG    ADD CONSTRAINT fk_PBANDI_C_TIPO_FILE_ALLEG_02
    FOREIGN KEY (ID_TIPO_FILE_ALLEGATO) REFERENCES PBANDI_C_TIPO_FILE_ALLEGATO (ID_TIPO_FILE_ALLEGATO);
ALTER TABLE PBANDI_R_FILE_ALLEG_TIP_ANAG    ADD CONSTRAINT fk_pbandi_t_utente_469
    FOREIGN KEY (ID_UTENTE_INS) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);
ALTER TABLE PBANDI_R_FILE_ALLEG_TIP_ANAG    ADD CONSTRAINT fk_pbandi_t_utente_470 
    FOREIGN KEY (ID_UTENTE_AGG) REFERENCES PBANDI_T_UTENTE (ID_UTENTE);

CREATE UNIQUE INDEX AK_PBANDI_R_FIL_AL_TIP_AN ON PBANDI_R_FILE_ALLEG_TIP_ANAG (ID_TIPO_ANAGRAFICA,ID_TIPO_FILE_ALLEGATO) TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_R_FIL_AL_TIP_AN_01 ON PBANDI_R_FILE_ALLEG_TIP_ANAG (ID_UTENTE_INS)  TABLESPACE PBANDI_IDX;
CREATE INDEX IDX_PBANDI_R_FIL_AL_TIP_AN_02 ON PBANDI_R_FILE_ALLEG_TIP_ANAG (ID_UTENTE_AGG)  TABLESPACE PBANDI_IDX;

-- seq
 CREATE SEQUENCE SEQ_PBANDI_R_FIL_AL_TIP_ANAG
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;  
  
-- PBANDI_T_DICHIARAZIONE_SPESA
ALTER TABLE PBANDI_T_DICHIARAZIONE_SPESA ADD
(dt_chiusura_rilievo DATE,
 dt_conferma_validita DATE
);

-- PBANDI_R_DOC_SPESA_PROGETTO
alter table PBANDI_R_DOC_SPESA_PROGETTO add FLAG_DOC_ESCLUSO varchar2(1);

-- check constraint
alter table PBANDI_R_DOC_SPESA_PROGETTO
  add constraint CC_PBANDI_R_DOC_SPESA_PROGETTO
  check (FLAG_DOC_ESCLUSO IN ('S',null));
  

-- VIEW
CREATE OR REPLACE VIEW PBANDI_V_NOTE_GENERALI AS
SELECT ID_NOTA,
       ID_PROGETTO,
       NOME_ENTITA_PROVENIENZA,
       NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
FROM
    (SELECT NULL AS ID_NOTA,
        ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       to_char(NOTE) as NOTE,
       NULL AS ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_T_DICH_MENS_WS
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_T_SERVICER
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_R_PROG_SOGG_FINANZIAT
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_W_PROG_SOGG_FIN_LOG
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'TUTTE LE AREE' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       NULL AS ID_UTENTE_INS,
       NULL AS ID_UTENTE_AGG,
       DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_W_ATTIVITA_PREGRESSE
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_T_RECUPERO
       /*
       UNION ALL
       SELECT ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE_CHIUSURA_PROGETTO AS NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_T_PROGETTO_AI
       */
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE_CHIUSURA_PROGETTO  AS NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_T_PROGETTO
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE_ATTO AS NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_T_ATTO_LIQUIDAZIONE
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE_COMUNICAZ_FINE_PROGETTO AS NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_COMUNICAZIONE AS DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_T_COMUNICAZ_FINE_PROG
       UNION ALL -- PBANDI_T_DETT_CHECK_APPALTI
       SELECT DISTINCT NULL AS ID_NOTA,
       ptpa.ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       ptdca.NOTE,
       NULL AS ID_UTENTE_INS,
       NULL AS ID_UTENTE_AGG,
       NULL AS DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_T_PROCEDURA_AGGIUDICAZ ptpa
       INNER JOIN PBANDI_T_APPALTO pta ON PTPA.ID_PROCEDURA_AGGIUDICAZ = pta.ID_PROCEDURA_AGGIUDICAZ
       INNER JOIN PBANDI_T_APPALTO_CHECKLIST ptac ON PTA.ID_APPALTO = PTAC.ID_APPALTO
       INNER JOIN PBANDI_T_DETT_CHECK_APPALTI ptdca ON PTAC.ID_APPALTO_CHECKLIST = PTDCA.ID_APPALTO_CHECKLIST
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       NULL AS ID_UTENTE_INS,
       NULL AS ID_UTENTE_AGG,
       DATA_CAMPIONE AS DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_T_IRREGOLARITA_PROVV
       UNION ALL -- PBANDI_T_INTEGRAZIONE_APPALTO
       SELECT DISTINCT NULL AS ID_NOTA,
       ptpa.ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       PTIA.NOTE_RICHIESTA AS NOTE,
       NULL AS ID_UTENTE_INS,
       NULL AS ID_UTENTE_AGG,
       PTIA.DT_INVIO AS DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_T_PROCEDURA_AGGIUDICAZ ptpa
       INNER JOIN PBANDI_T_APPALTO pta ON PTPA.ID_PROCEDURA_AGGIUDICAZ = pta.ID_PROCEDURA_AGGIUDICAZ
       INNER JOIN PBANDI_T_INTEGRAZIONE_APPALTO PTIA ON PTPA.ID_PROCEDURA_AGGIUDICAZ = PTA.ID_PROCEDURA_AGGIUDICAZ
       UNION ALL -- PBANDI_T_ESITI_NOTE_AFFIDAMENT
       SELECT 
       DISTINCT 
       NULL AS ID_NOTA,
       ptdi.ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       ptena.NOTE,
       ptena.ID_UTENTE_INS,
       NULL AS ID_UTENTE_AGG,
       ptena.DATA_INS AS DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_T_DOCUMENTO_INDEX ptdi
       INNER JOIN PBANDI_T_CHECKLIST ptc ON PTDI.ID_DOCUMENTO_INDEX = PTC.ID_DOCUMENTO_INDEX
       INNER JOIN PBANDI_T_ESITI_NOTE_AFFIDAMENT ptena ON PTC.ID_CHECKLIST = PTENA.ID_CHECKLIST
       UNION ALL -- PBANDI_T_VARIANTI_AFFIDAMENTI
       SELECT DISTINCT NULL AS ID_NOTA,
       ptpa.ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       ptva.NOTE,
       NULL AS  ID_UTENTE_INS,
       NULL AS ID_UTENTE_AGG,
       ptva.DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_T_PROCEDURA_AGGIUDICAZ ptpa
       INNER JOIN PBANDI_T_APPALTO pta ON PTPA.ID_PROCEDURA_AGGIUDICAZ = PTA.ID_PROCEDURA_AGGIUDICAZ
       INNER JOIN PBANDI_T_VARIANTI_AFFIDAMENTI ptva ON PTA.ID_APPALTO = PTVA.ID_APPALTO
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO_CEDENTE AS ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE_RICEZIONE AS NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DATA_INSERIMENTO AS DT_INSERIMENTO,
       DATA_MODIFICA  AS DT_AGGIORNAMENTO
       FROM PBANDI_T_ECONOMIE
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO_CEDENTE AS ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE_CESSIONE  AS NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DATA_INSERIMENTO AS DT_INSERIMENTO,
       DATA_MODIFICA  AS DT_AGGIORNAMENTO
       FROM PBANDI_T_ECONOMIE
       UNION ALL -- PBANDI_R_PAG_QUOT_PARTE_DOC_SP
       SELECT DISTINCT NULL AS ID_NOTA,
       ptqpds.ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       prpqpds.NOTE_VALIDAZIONE  AS NOTE,
       prpqpds.ID_UTENTE_INS,
       prpqpds.ID_UTENTE_AGG,
       prpqpds.DT_INSERIMENTO,
       prpqpds.DT_AGGIORNAMENTO
       FROM PBANDI_T_QUOTA_PARTE_DOC_SPESA ptqpds
       INNER JOIN PBANDI_R_PAG_QUOT_PARTE_DOC_SP prpqpds ON PTQPDS.ID_QUOTA_PARTE_DOC_SPESA =PRPQPDS.ID_QUOTA_PARTE_DOC_SPESA
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE_CHIUSURA_VALIDAZIONE  AS NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_DICHIARAZIONE AS DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_T_DICHIARAZIONE_SPESA
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'GESTIONE REVOCHE' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_T_REVOCA
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE_VALIDAZIONE AS NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       NULL AS DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_R_DOC_SPESA_PROGETTO
       UNION ALL -- PBANDI_R_FORNITORE_QUALIFICA
       SELECT DISTINCT NULL AS ID_NOTA,
       prsp.ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       prfq.NOTE_QUALIFICA AS NOTE,
       NULL AS ID_UTENTE_INS,
       NULL AS ID_UTENTE_AGG,
       prfq.DT_INIZIO_VALIDITA AS DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_R_SOGGETTO_PROGETTO prsp
       INNER JOIN PBANDI_T_FORNITORE ptf ON PRSP.ID_SOGGETTO = PTF.ID_SOGGETTO_FORNITORE
       INNER JOIN PBANDI_R_FORNITORE_QUALIFICA prfq ON PTF.ID_FORNITORE = PRFQ.ID_FORNITORE
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE_FIDEIUSSIONE AS NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_T_FIDEIUSSIONE
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'GESTIONE REVOCHE' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_T_GESTIONE_REVOCA
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'GESTIONE GARANZIE' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_T_ESCUSSIONE
       UNION ALL -- PBANDI_T_CONTO_ECONOMICO
       SELECT DISTINCT NULL AS ID_NOTA,
       ptp.ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       ptce.NOTE_CONTO_ECONOMICO AS NOTE,
       ptce.ID_UTENTE_INS,
       ptce.ID_UTENTE_AGG,
       ptce.DT_INIZIO_VALIDITA AS DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_T_PROGETTO ptp
       INNER JOIN PBANDI_T_DOMANDA ptd ON PTP.ID_DOMANDA = PTD.ID_DOMANDA
       INNER JOIN PBANDI_T_CONTO_ECONOMICO ptce ON PTP.ID_DOMANDA = PTCE.ID_DOMANDA
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'CONTROLLI IN LOCO' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       NULL AS ID_UTENTE_INS,
       NULL AS ID_UTENTE_AGG,
       DATA_CAMPIONE AS DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_T_ESITO_CONTROLLI
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'EROGAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE_EROGAZIONE AS NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_T_EROGAZIONE
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       NULL AS DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_W_PROG_SOGG_FINANZIAT
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INIZIO_VALIDITA AS DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_T_QUADRO_PREVISIONALE
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE_PRATICA_USATA AS NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INIZIO_VALIDITA AS DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_T_IRREGOLARITA
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'RENDICONTAZIONE' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INIZIO_VALIDITA AS DT_INSERIMENTO,
       NULL AS DT_AGGIORNAMENTO
       FROM PBANDI_T_IRREGOLARITA
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
       'AREA CREDITI' AS NOME_ENTITA_PROVENIENZA,
       NOTE,
       ID_UTENTE_INS,
       ID_UTENTE_AGG,
       DT_INSERIMENTO,
       DT_AGGIORNAMENTO
       FROM PBANDI_T_ANNOTAZ_GENERALI
       UNION ALL
       SELECT NULL AS ID_NOTA,
       ID_PROGETTO,
           'AREA CREDITI' AS NOME_ENTITA_PROVENIENZA,
           NOTE,
           a.ID_UTENTE_INS,
           a.ID_UTENTE_AGG,
           a.DT_INSERIMENTO,
           a.DT_AGGIORNAMENTO
      FROM PBANDI_V_NOTE_MONITORAGGIO a
      UNION ALL
      SELECT ID_NOTA,
            ID_PROGETTO,
           'GESTIONE ANAGRAFICA' AS NOME_ENTITA_PROVENIENZA,
           NOTE,
           ID_UTENTE_INS,
           ID_UTENTE_AGG,
           DT_INSERIMENTO,
           DT_AGGIORNAMENTO
      FROM PBANDI_T_NOTE_GENERALI
      ) WHERE NOTE IS NOT NULL;


	  
-- Nuove strutture per i servizi di monitoraggio
DROP TABLE PBANDI_T_MON_SERV_AMMVO_CONTAB;
DROP TABLE PBANDI_T_MON_SERV_DOQUI;
DROP TABLE PBANDI_T_MON_SERV_FINISTR;


DROP TABLE PBANDI_D_SERVIZI_AMMVO_CONTAB;
DROP TABLE PBANDI_D_SERVIZI_DOQUI;
DROP TABLE PBANDI_D_SERVIZI_FINISTR;

DROP SEQUENCE SEQ_PBANDI_T_MON_SERV_AMM_CONT;
DROP SEQUENCE SEQ_PBANDI_T_MON_SERV_DOQUI;
DROP SEQUENCE SEQ_PBANDI_T_MON_SERV_FINISTR;


CREATE SEQUENCE SEQ_PBANDI_T_MON_SERV
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE TABLE PBANDI_D_CATEG_SERVIZI
(
  ID_CATEG_SERVIZIO   NUMBER(3),
  DESC_CATEG_SERVIZIO  VARCHAR2(100),
  CONSTRAINT PK_PBANDI_D_CATEG_SERVIZI PRIMARY KEY (ID_CATEG_SERVIZIO) USING INDEX TABLESPACE PBANDI_IDX
)
TABLESPACE PBANDI_TBL;


CREATE TABLE PBANDI_D_SERVIZI
(
  ID_SERVIZIO          INTEGER                  NOT NULL,
  ID_CATEG_SERVIZIO    NUMBER(3)                NOT NULL,
  NOME_SERVIZIO        VARCHAR2(40)             NOT NULL,
  DESCRIZIONE          VARCHAR2(500),
  TIPOLOGIA            VARCHAR2(1),
  DT_INIZIO_VALIDITA   DATE                     NOT NULL,
  DT_FINE_VALIDITA     DATE,
  PARAMETRI_DI_INPUT   VARCHAR2(500)            NOT NULL,
  PARAMETRI_DI_OUTPUT  VARCHAR2(500)            NOT NULL,
  CONSTRAINT PK_PBANDI_D_SERVIZI PRIMARY KEY (ID_SERVIZIO) USING INDEX TABLESPACE PBANDI_IDX
)
TABLESPACE PBANDI_TBL;

CREATE INDEX IE1_PBANDI_D_SERVIZI ON PBANDI_D_SERVIZI
(ID_CATEG_SERVIZIO)
TABLESPACE PBANDI_IDX;

ALTER TABLE PBANDI_D_SERVIZI ADD (
  CONSTRAINT FK_PBANDI_D_CATEG_SERVIZI_01 
 FOREIGN KEY (ID_CATEG_SERVIZIO) 
 REFERENCES PBANDI_D_CATEG_SERVIZI (ID_CATEG_SERVIZIO));



CREATE TABLE PBANDI_T_MON_SERV
(
  ID_MONIT			        INTEGER             NOT NULL,
  ID_SERVIZIO               INTEGER             NOT NULL,
  ID_UTENTE                 NUMBER(8)              NOT NULL,
  MODALITA_CHIAMATA         VARCHAR2(1)    		NOT NULL,
  ESITO                     VARCHAR2(2),
  CODICE_ERRORE             VARCHAR2(10),
  MESSAGGIO_ERRORE          VARCHAR2(4000),
  DATETIME_INIZIO_CHIAMATA  DATE                NOT NULL,
  DATETIME_FINE_CHIAMATA    DATE,
  PARAMETRI_DI_INPUT        VARCHAR2(4000) 		NOT NULL,
  PARAMETRI_DI_OUTPUT       VARCHAR2(4000),
  ID_ENTITA                 NUMBER(3)           NOT NULL,
  ID_TARGET                 NUMBER(8)           NOT NULL,
  CONSTRAINT PK_PBANDI_T_MON_SERV PRIMARY KEY (ID_MONIT) USING INDEX TABLESPACE PBANDI_IDX
)
TABLESPACE PBANDI_TBL;

COMMENT ON COLUMN PBANDI_T_MON_SERV.ID_MONIT IS 'Identificativo interno valorizzato tramite sequence';
COMMENT ON COLUMN PBANDI_T_MON_SERV.ID_UTENTE IS 'Identificativo dell''utente applicativo che effettua la chiamata';
COMMENT ON COLUMN PBANDI_T_MON_SERV.MODALITA_CHIAMATA IS 'Possibili valori I (Insert), U (Update), nel caso di angrafica fondo e iban cancellazione non permessa';
COMMENT ON COLUMN PBANDI_T_MON_SERV.ESITO IS 'Valori (OK/KO)';
COMMENT ON COLUMN PBANDI_T_MON_SERV.PARAMETRI_DI_INPUT IS 'Concatenazione con separatore';
COMMENT ON COLUMN PBANDI_T_MON_SERV.PARAMETRI_DI_OUTPUT IS 'Concatenazione con separatore';


CREATE INDEX IE1_PBANDI_T_MON_SER ON PBANDI_T_MON_SERV
(ID_SERVIZIO)
TABLESPACE PBANDI_IDX;


CREATE INDEX IE2_PBANDI_T_MON_SER ON PBANDI_T_MON_SERV
(ID_UTENTE)
TABLESPACE PBANDI_IDX;


CREATE INDEX IE3_PBANDI_T_MON_SER ON PBANDI_T_MON_SERV
(ID_ENTITA, ID_TARGET)
TABLESPACE PBANDI_IDX;


ALTER TABLE PBANDI_T_MON_SERV ADD (
  CONSTRAINT FK_PBANDI_C_ENTITA_15 
 FOREIGN KEY (ID_ENTITA) 
 REFERENCES PBANDI_C_ENTITA (ID_ENTITA),
  CONSTRAINT FK_PBANDI_D_SERV_01 
 FOREIGN KEY (ID_SERVIZIO) 
 REFERENCES PBANDI_D_SERVIZI (ID_SERVIZIO),
  CONSTRAINT FK_PBANDI_T_UTENTE_406 
 FOREIGN KEY (ID_UTENTE) 
 REFERENCES PBANDI_T_UTENTE (ID_UTENTE));

-- PBANDI_W_MFINPIS_DICH
ALTER TABLE PBANDI_W_MFINPIS_DICH
 ADD (PROGR_W_MFINPIS_DICH  INTEGER);

update PBANDI_W_MFINPIS_DICH
set PROGR_W_MFINPIS_DICH = rownum;
COMMIT;

alter TABLE PBANDI_W_MFINPIS_DICH modify  PROGR_W_MFINPIS_DICH  not null;

alter table PBANDI_W_MFINPIS_DICH add CONSTRAINT PK_PBANDI_W_MFINPIS_DICH PRIMARY KEY (PROGR_W_MFINPIS_DICH) USING INDEX TABLESPACE PBANDI_IDX;


CREATE OR REPLACE TRIGGER PBANDI.tg_pbandi_t_rich_integr_au_03
-- 6.1.8.2 da pag 39
   after update of DT_INVIO ON PBANDI.PBANDI_T_RICHIESTA_INTEGRAZ    referencing old as OLD new as NEW
   for each row
WHEN (
NEW.ID_ENTITA = 570  -- Gabriele su richiesta Arangino  5/2/24 aggiunto controllo su Entità controlli in loco
      )
DECLARE
   CURSOR c1 IS
      SELECT NVL(VALORE,'N')
        FROM PBANDI_C_COSTANTI
       WHERE ATTRIBUTO = 'monitoraggio_tempi';
   -- Da verificare, non specificato in analisi ???
   CURSOR c_cl (c_id_target NUMBER) is
           select id_progetto
             from PBANDI_R_CAMP_CONTR_LOCO
            where ID_CONTROLLO_LOCO = c_id_target;     
       
   CURSOR c2 (c_id_progetto NUMBER) is
          select c.progr_bando_linea_intervento,
                 NVL(c.flag_monitoraggio_tempi,'N')
          from PBANDI_T_PROGETTO a,
               PBANDI_T_DOMANDA b,
               PBANDI_R_BANDO_LINEA_INTERVENT c
          where a.id_progetto = c_id_progetto
          and b.id_domanda = a.id_domanda
          and c.progr_bando_linea_intervento = b.progr_bando_linea_intervento;

   v_monit_tempi VARCHAR2(1);
   v_progr_bando_linea_intervento PBANDI_R_BANDO_LINEA_INTERVENT.progr_bando_linea_intervento%TYPE;
   v_id_progetto                  PBANDI_R_CAMP_CONTR_LOCO.id_progetto%TYPE;
   
   
   
   
BEGIN

   -- Verifica se e' attivo il monitoraggio a livello di sistema
   
   OPEN c1;
   FETCH c1 INTO v_monit_tempi;
   IF c1%NOTFOUND THEN
      v_monit_tempi := 'N';
   END IF;
   CLOSE c1;
   
   -- Recupero il progetto accedendo a PBANDI_R_CAMP_CONTR_LOCO
   OPEN c_cl (:NEW.ID_TARGET);
   FETCH c_cl INTO v_id_progetto;
   IF c_cl%NOTFOUND THEN
     RAISE_APPLICATION_ERROR(-20000,'ERRORE ACCESSO PBANDI_R_CAMP_CONTR_LOCO - ID_CONTROLLO_LOCO='||:NEW.ID_TARGET);
   END IF;
   CLOSE c_cl;
   
   -- Verifico se e'¨ attivo il monitoraggio sul Bando
   IF v_monit_tempi = 'S' THEN
      OPEN c2 (:NEW.ID_target);
      FETCH c2 INTO v_progr_bando_linea_intervento,
                    v_monit_tempi;
      IF  c2%NOTFOUND THEN
         v_monit_tempi := 'N';
      END IF;
      CLOSE c2;
   END IF;
   
   IF v_monit_tempi = 'S' THEN
      -- Aggiornamento della data di chiusura della dichiarazione di spesa
      UPDATE PBANDI_T_MONIT_TEMPI
         SET DT_FINE = :NEW.DT_INVIO
        WHERE ID_ENTITA = (SELECT ID_ENTITA FROM PBANDI_C_ENTITA WHERE NOME_ENTITA = 'PBANDI_T_RICHIESTA_INTEGRAZ')
          AND ID_TARGET = :NEW.ID_RICHIESTA_INTEGRAZ;
   END IF;

END;
/
